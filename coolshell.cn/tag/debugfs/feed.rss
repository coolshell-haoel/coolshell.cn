<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>debugfs | 酷 壳 - CoolShell</title>
	<atom:link href="https://coolshell.cn/tag/debugfs/feed" rel="self" type="application/rss+xml" />
	<link>https://coolshell.cn</link>
	<description>享受编程和技术所带来的快乐 - Coding Your Ambition</description>
	<lastBuildDate>Fri, 14 Aug 2009 02:34:42 +0000</lastBuildDate>
	<language>zh-CN</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.2</generator>
	<item>
		<title>恢复Ext3下被删除的文件</title>
		<link>https://coolshell.cn/articles/1265.html</link>
					<comments>https://coolshell.cn/articles/1265.html#comments</comments>
		
		<dc:creator><![CDATA[陈皓]]></dc:creator>
		<pubDate>Fri, 14 Aug 2009 02:31:48 +0000</pubDate>
				<category><![CDATA[Unix/Linux]]></category>
		<category><![CDATA[操作系统]]></category>
		<category><![CDATA[debugfs]]></category>
		<category><![CDATA[ext3]]></category>
		<guid isPermaLink="false">http://coolshell.cn/?p=1265</guid>

					<description><![CDATA[<p> 下面是这个教程将教你如何在Ext3的文件系统中恢复被rm掉的文件。 假设我们有一个文件名叫 &#8216;test.txt&#8217;  $ls -il t...</p>
<p class="read-more"><a class="btn btn-default" href="https://coolshell.cn/articles/1265.html"> Read More<span class="screen-reader-text">  Read More</span></a></p>
The post <a href="https://coolshell.cn/articles/1265.html">恢复Ext3下被删除的文件</a> first appeared on <a href="https://coolshell.cn">酷 壳 - CoolShell</a>.]]></description>
										<content:encoded><![CDATA[<p><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158"
     crossorigin="anonymous"></script> 下面是这个教程将教你如何在Ext3的文件系统中恢复被rm掉的文件。</p>
<p>假设我们有一个文件名叫 &#8216;test.txt&#8217;</p>
<div style="margin-left: 40px;"><span style="font-style: italic;"> </span><span style="font-weight: bold;"><span style="font-style: italic;">$ls -il test.txt</span></span><br style="font-style: italic;" /><span style="font-weight: bold;"><span style="font-style: italic;"> 15 -rw-rw-r&#8211; 2 root root 20 Apr 17 12:08 test.txt</span></span><br style="font-style: italic;" /><span style="font-weight: bold;"> </span></div>
<p>注意：: &#8220;-il&#8221; 选项表示显示文件的i-node号（15），如果你不知道Unix/Linux文件系统的“I结点”的话，你有必要先补充一下相关的知识。简单说来，i结点就是操作管理文件的一个标识号。</p>
<p><span id="more-1265"></span></p>
<p>我们再看一下其内容：</p>
<div style="margin-left: 40px;"><span style="font-weight: bold;"><span style="font-style: italic;">$ cat test.txt</span></span><br style="font-style: italic;" /><span style="font-weight: bold;"><span style="font-style: italic;">this is test file</span></span><br style="font-style: italic;" /></div>
<p>好，现在我们开始删除文件：.</p>
<div style="margin-left: 40px;"><span style="font-weight: bold;"><span style="font-style: italic;">$rm test.txt</span></span><br style="font-style: italic;" /><span style="font-weight: bold;"><span style="font-style: italic;">rm: remove write-protected regular file <code data-enlighter-language="mytest" class="EnlighterJSRAW">test.txt&#039;? y&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
 
&lt;h4&gt;使用 Journal 和 Inode 号恢复&lt;/h4&gt;
注意，如果你删除文件后重启了系统，那么，相关的文件 journal 会丢失，我们也就无法恢复文件了。所以，恢复文件的前提是，Journal不能丢失，即，系统不能重启。

因为我们已经知道 test.txt 文件的 inode 号是 15，所以我们可以使用 debugfs 命令来查看：
&lt;div style=&quot;margin-left: 40px;&quot;&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;debugfs: logdump -i &lt;15&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;FS block 1006 logged at sequence 404351, journal block 7241&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;(inode block for inode 15):&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;Inode: 15 Type: regular Mode: 0664 Flags: 0x0 Generation: 0&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;User: 0 Group: 0 Size: 20&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;File ACL: 0 Directory ACL: 0&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;Links: 1 Blockcount: 8&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;Fragment: Address: 0 Number: 0 Size: 0&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;ctime: 0x48159f2d -- Mon Apr 28 15:25:57 2008&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;atime: 0x48159f27 -- Mon Apr 28 15:25:51 2008&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;mtime: 0x4806f070 -- Thu Apr 17 12:08:40 2008&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;Blocks: (0+1): 10234&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;No magic number at block 7247: end of journal.&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;/div&gt;
&lt;span style=&quot;font-weight: bold;&quot;&gt;
&lt;/span&gt;请注意上面信息中的这一行：
&lt;div style=&quot;margin-left: 40px;&quot;&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;Blocks: (0+1): 10234&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
这就是inode 15存放文件的地址（数据块）。然后，我们知道了这个地址，我们就可以使用 dd 命令，把这个地址上的数据给取出来。
&lt;div style=&quot;margin-left: 40px;&quot;&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;#dd if=/dev/sda5 of=/tmp/test.txt bs=4096 count=1 skip= 10234&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;1+0 records in&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;1+0 records out&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;/div&gt;
&lt;ul&gt;
	&lt;li&gt;if 是输入的设备&lt;/li&gt;
	&lt;li&gt;of 是输出的设备.&lt;/li&gt;
	&lt;li&gt;bs 指定一个block的大小&lt;/li&gt;
	&lt;li&gt;count 说明有多少个block需要dump&lt;/li&gt;
	&lt;li&gt;skip 说明从开始的地方跳过 10234 个block，并从取下一个block的数据&lt;/li&gt;
&lt;/ul&gt;
下面让我们看一下被恢复的文件：
&lt;div style=&quot;margin-left: 40px;&quot;&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;$cat /tmp/test.txt &lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;this is test file&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-style: italic;&quot; /&gt;&lt;/div&gt;
&lt;span style=&quot;font-weight: bold;&quot;&gt;
&lt;/span&gt;当然，上面的文件恢复是基于我们知道文件的inode，可在现实中，我们并不知道这个信息，如果我们不知道inode，我们还可能恢复吗？是的，这是可能的，让我们来看一下如何恢复。
&lt;h4&gt;使用 Journal 和 文件名恢复&lt;/h4&gt;
如果我们不知道文件的inode我们可能恢复吗？我可以告诉你，这是不可能的事情。不过我们有办法知道文件的inode号。下面让我们来看看怎么做到：
&lt;div style=&quot;margin-left: 40px;&quot;&gt;&lt;span style=&quot;font-weight: bold; font-style: italic;&quot;&gt;$rm mytest.txt&lt;/span&gt;&lt;br style=&quot;font-weight: bold; font-style: italic;&quot; /&gt;&lt;span style=&quot;font-weight: bold; font-style: italic;&quot;&gt;rm: remove write-protected regular file </code>.txt&#8217;? y</span><br style="font-weight: bold; font-style: italic;" /></div>
<p>注意，我们并不知道其inode号，但我们可以使用 debugfs 命令来查看（使用其 ls -d 选项）。</p>
<div style="margin-left: 40px;"><span style="font-weight: bold; font-style: italic;">debugfs:  ls -d</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;"> 2  (12) .    2  (12) ..    11  (20) lost+found    2347777  (20) oss</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">&lt;2121567&gt; (20) mytest.txt</span><br style="font-weight: bold; font-style: italic;" /></div>
<p>你看文件名了吧，它的inode号是 &lt;2121567&gt; ，注意，被删除了的文件的inode都是用尖括号包起来的。</p>
<p>即然知道了inode号，那么我们就很容易恢复了（使用 logdump选项）：</p>
<div style="margin-left: 40px;"><span style="font-weight: bold; font-style: italic;">debugfs:  logdump -i &lt;2121567&gt;</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">Inode 2121567 is at group 65, block 2129985, offset 3840</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">Journal starts at block 1, transaction 405642</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">  FS block 2129985 logged at sequence 405644, journal block 9</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    (inode block for inode 2121567):</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    Inode: 2121567   Type: bad type        Mode:  0000   Flags: 0x0   Generation: 0</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    User:     0   Group:     0   Size: 0</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    File ACL: 0    Directory ACL: 0</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    Links: 0   Blockcount: 0</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    Fragment:  Address: 0    Number: 0    Size: 0</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    ctime: 0x00000000 &#8212; Thu Jan  1 05:30:00 1970</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    atime: 0x00000000 &#8212; Thu Jan  1 05:30:00 1970</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    mtime: 0x00000000 &#8212; Thu Jan  1 05:30:00 1970</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    Blocks:</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">  FS block 2129985 logged at sequence 405648, journal block 64</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    (inode block for inode 2121567):</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    Inode: 2121567   Type: regular        Mode:  0664   Flags: 0x0   Generation: 913772093</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    User:   100   Group:     0   Size: 31</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    File ACL: 2130943    Directory ACL: 0</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    Links: 1   Blockcount: 16</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    Fragment:  Address: 0    Number: 0    Size: 0</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    ctime: 0x4821d5d0 &#8212; Wed May  7 21:46:16 2008</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    atime: 0x4821d8be &#8212; Wed May  7 21:58:46 2008</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    mtime: 0x4821d5d0 &#8212; Wed May  7 21:46:16 2008</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    Blocks:  (0+1): 2142216</span><br style="font-weight: bold; font-style: italic;" /></div>
<p>上面有很多信息，让我们仔细地查看，你可以看到下面一行信息：</p>
<div style="margin-left: 40px;"><span style="font-weight: bold; font-style: italic;"> FS block 2129985 logged at sequence 405644, journal block 9</span><br style="font-weight: bold; font-style: italic;" /></div>
<p>并且，其类型是：</p>
<div style="margin-left: 40px;"><span style="font-weight: bold; font-style: italic;"> Type: bad type </span><br style="font-weight: bold; font-style: italic;" /></div>
<p>再仔细看一下文件的时间戳下面的<span style="font-weight: bold; font-style: italic;">Blocks:</span> 什么也没有。那么，让我们看一下下一个block：</p>
<div style="margin-left: 40px;"><span style="font-weight: bold; font-style: italic;">FS block 2129985 logged at sequence 405648, journal block 64</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">    (inode block for inode 2121567):</span><br style="font-weight: bold; font-style: italic;" /></div>
<p>这一条Journal就有block信息了：</p>
<div style="margin-left: 40px;"><span style="font-weight: bold; font-style: italic;">Blocks:  (0+1): 2142216</span></div>
<p>这就是被删除文件的地址，让我们再次运行恢复命令：</p>
<div style="margin-left: 40px;"><span style="font-weight: bold; font-style: italic;">$sudo dd if=/dev/sda5 of=/home/hchen/mytest_recovered.txt bs=4096 skip=2142216 count=1</span><br style="font-weight: bold; font-style: italic;" /></div>
<p>再让我们来检查一下文件内容：</p>
<div style="margin-left: 40px;"><span style="font-weight: bold; font-style: italic;">$ cat mytest_recovered.txt</span><br style="font-weight: bold; font-style: italic;" /><span style="font-weight: bold; font-style: italic;">this is my test file </span><br style="font-weight: bold; font-style: italic;" /></div>
<h4>小结</h4>
<p>好了，下面是我们的一些总结：<br />
<span style="font-weight: bold;">1)使用 debugfs: ls -d 找到被删除文件的inode号。</span><br style="font-weight: bold;" /><span style="font-weight: bold;">2)使用 debugfs:logdump找到文件的数据块地址。</span><br style="font-weight: bold;" /><span style="font-weight: bold;">3)使用dd 命令把数据取出来存成文件。</span></p>
<p>网上有很其它不同的方法来恢复文件，基本上也是使用debugfs这个命令，有的还使用到了lsdel，其实大同小异，这个教程是我在网上看到的，虽然他说只是针对Ext3文件系统的，但我总感觉应该可以用于Ext2文件系统，不过我没有试过。也许Ext2和Ext3被debugfs输出的信息不一样吧。大家可以去试试。</p>
<p>（全文完）<!--



<p align="center"><a href= target=_blank><img decoding="async" src=""></a></p>





<p align="center"><img decoding="async" src="https://coolshell.cn/wp-content/uploads/2020/03/coolshell.weixin.jpg"> <img decoding="async" loading="lazy" src="https://coolshell.cn/wp-content/uploads/2020/03/coolshell.mini_.jpg" width="300" height="300"> <br />关注CoolShell微信公众账号和微信小程序</p>

 

--></p>
<div style="margin-top: 15px; font-size: 16px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 &#8211; CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>

<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content"><h3 class="related_post_title">相关文章</h3><ul class="related_post wp_rp"><li ><a href="https://coolshell.cn/articles/4458.html" class="wp_rp_thumbnail"><img src="https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/10.jpg" alt="BT雷人的程序语言（大全）" width="150" height="150" /></a><a href="https://coolshell.cn/articles/4458.html" class="wp_rp_title">BT雷人的程序语言（大全）</a></li><li ><a href="https://coolshell.cn/articles/9949.html" class="wp_rp_thumbnail"><img src="https://coolshell.cn/wp-content/uploads/2013/07/inverted-bookshelf_thumb-150x150.jpg" alt="IoC/DIP其实是一种管理思想" width="150" height="150" /></a><a href="https://coolshell.cn/articles/9949.html" class="wp_rp_title">IoC/DIP其实是一种管理思想</a></li><li ><a href="https://coolshell.cn/articles/2681.html" class="wp_rp_thumbnail"><img src="https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/5.jpg" alt="Kent Beck 谈单元测试和持续部署" width="150" height="150" /></a><a href="https://coolshell.cn/articles/2681.html" class="wp_rp_title">Kent Beck 谈单元测试和持续部署</a></li><li ><a href="https://coolshell.cn/articles/7425.html" class="wp_rp_thumbnail"><img src="https://coolshell.cn/wp-content/uploads/2012/05/rsync-algorithm-150x150.jpg" alt="rsync 的核心算法" width="150" height="150" /></a><a href="https://coolshell.cn/articles/7425.html" class="wp_rp_title">rsync 的核心算法</a></li><li ><a href="https://coolshell.cn/articles/1835.html" class="wp_rp_thumbnail"><img src="https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/28.jpg" alt="IE6/IE7 0day 漏洞" width="150" height="150" /></a><a href="https://coolshell.cn/articles/1835.html" class="wp_rp_title">IE6/IE7 0day 漏洞</a></li><li ><a href="https://coolshell.cn/articles/4131.html" class="wp_rp_thumbnail"><img src="https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/6.jpg" alt="WSDL 1.1 中文规范" width="150" height="150" /></a><a href="https://coolshell.cn/articles/4131.html" class="wp_rp_title">WSDL 1.1 中文规范</a></li></ul></div></div>The post <a href="https://coolshell.cn/articles/1265.html">恢复Ext3下被删除的文件</a> first appeared on <a href="https://coolshell.cn">酷 壳 - CoolShell</a>.]]></content:encoded>
					
					<wfw:commentRss>https://coolshell.cn/articles/1265.html/feed</wfw:commentRss>
			<slash:comments>8</slash:comments>
		
		
			</item>
	</channel>
</rss>
