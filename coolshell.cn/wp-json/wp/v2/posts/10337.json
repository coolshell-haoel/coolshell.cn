{"id":10337,"date":"2013-08-09T10:18:31","date_gmt":"2013-08-09T02:18:31","guid":{"rendered":"http:\/\/coolshell.cn\/?p=10337"},"modified":"2013-08-09T19:53:38","modified_gmt":"2013-08-09T11:53:38","slug":"%e6%95%b0%e6%8d%ae%e5%8d%b3%e4%bb%a3%e7%a0%81%ef%bc%8c%e6%88%91%e5%92%8c%e5%b0%8f%e4%bc%99%e4%bc%b4%e4%bb%ac%e9%83%bd%e6%83%8a%e5%91%86%e4%ba%86%ef%bc%81","status":"publish","type":"post","link":"https:\/\/coolshell.cn\/articles\/10337.html","title":{"rendered":"\u6570\u636e\u5373\u4ee3\u7801\uff1a\u5143\u9a71\u52a8\u7f16\u7a0b"},"content":{"rendered":"<p><strong>\uff08\u611f\u8c22\u00a0<a href=\"http:\/\/weibo.com\/weidagang\" target=\"_blank\">@\u6587\u827a\u590d\u5174\u8bb0<\/a>\uff08todd\uff09 \u6295\u9012\u6b64\u6587\uff09<\/strong><\/p>\n<p>\u51e0\u4e2a\u5c0f\u4f19\u4f34\u5728\u8003\u8651\u4e0b\u9762\u8fd9\u4e2a\u5404\u4e2a\u8bed\u8a00\u90fd\u4f1a\u9047\u5230\u7684\u95ee\u9898\uff1a<\/p>\n<p><strong>\u95ee\u9898\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790API<\/strong><\/p>\n<p>\u4e00\u4e2a\u597d\u7684\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790\u5e93\u4e00\u822c\u6d89\u53ca\u5230\u8fd9\u51e0\u4e2a\u5e38\u89c1\u7684\u65b9\u9762\uff1a<\/p>\n<p>1) \u652f\u6301\u65b9\u4fbf\u5730\u751f\u6210\u5e2e\u52a9\u4fe1\u606f<\/p>\n<p>2) \u652f\u6301\u5b50\u547d\u4ee4\uff0c\u6bd4\u5982\uff1agit\u5305\u542b\u4e86push, pull, commit\u7b49\u591a\u79cd\u5b50\u547d\u4ee4<\/p>\n<p>3) \u652f\u6301\u5355\u5b57\u7b26\u9009\u9879\u3001\u591a\u5b57\u7b26\u9009\u9879\u3001\u6807\u5fd7\u9009\u9879\u3001\u53c2\u6570\u9009\u9879\u7b49\u591a\u79cd\u9009\u9879\u548c\u4f4d\u7f6e\u53c2\u6570<\/p>\n<p>4) \u652f\u6301\u9009\u9879\u9ed8\u8ba4\u503c\uff0c\u6bd4\u5982\uff1a&#8211;port\u9009\u9879\u82e5\u672a\u6307\u5b9a\u8ba4\u4e3a5037<\/p>\n<p>5) \u652f\u6301\u4f7f\u7528\u6a21\u5f0f\uff0c\u6bd4\u5982\uff1atar\u547d\u4ee4\u7684-c\u548c-x\u662f\u4e92\u65a5\u9009\u9879\uff0c\u5c5e\u4e8e\u4e0d\u540c\u7684\u4f7f\u7528\u6a21\u5f0f<\/p>\n<p>\u7ecf\u8fc7\u4e00\u756a\u8003\u5bdf\uff0c\u5c0f\u4f19\u4f34\u4eec\u53d1\u73b0\u4e86\u8fd9\u4e2a\u51e0\u4e2a\u6709\u4ee3\u8868\u6027\u7684API\u8bbe\u8ba1\uff1a<\/p>\n<p><strong>1. getopt()\uff1a<\/strong><\/p>\n<p><a href=\"http:\/\/www.gnu.org\/software\/libc\/manual\/html_node\/Getopt.html\">getopt()<\/a>\u662flibc\u7684\u6807\u51c6\u51fd\u6570\uff0c\u5f88\u591a\u8bed\u8a00\u4e2d\u90fd\u80fd\u627e\u5230\u5b83\u7684\u79fb\u690d\u7248\u672c\u3002<\/p>\n<p><!--more--><\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\n\/\/C\r\nwhile ((c = getopt(argc, argv, &quot;ac:d:&quot;)) != -1) {\r\n    int this_option_optind = optind ? optind : 1;\r\n    switch (c) {\r\n    case &#039;a&#039;:\r\n        printf (&quot;option a&quot;);\r\n        aopt = 1;\r\n        break;\r\n    case &#039;c&#039;:\r\n        printf (&quot;option c with value &#039;%s&#039;&quot;, optarg);\r\n        copt = optarg;\r\n        break;\r\n    case &#039;d&#039;:\r\n        printf (&quot;option d with value &#039;%s&#039;&quot;, optarg);\r\n        dopt = optarg;\r\n        break;\r\n    case &#039;?&#039;:\r\n        break;\r\n    default:\r\n        printf (&quot;?? getopt returned character code 0%o ??&quot;, c);\r\n    }\r\n}\r\n<\/pre>\n<p>getopt()\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u7c7b\u4f3cprintf\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u7684\u547d\u4ee4\u884c\u53c2\u6570\u63cf\u8ff0\u4e32\uff0c\u5982\u4e0a\u9762\u7684&#8221;ac:d:&#8221;\u5b9a\u4e49\u4e86&#8221;a&#8221;, &#8220;c&#8221;\uff0c&#8221;d&#8221;3\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5176\u4e2d\uff0ca\u662f\u4e00\u4e2a\u6807\u5fd7\u7b26\u4e0d\u9700\u8981\u53c2\u6570\uff0c&#8221;c&#8221;\u548c&#8221;d&#8221;\u9700\u8981\u8ddf\u53c2\u6570\u3002getopt()\u529f\u80fd\u975e\u5e38\u5f31\uff0c\u53ea\u652f\u6301\u5355\u4e2a\u5b57\u7b26\u7684\u6807\u5fd7\u9009\u9879\u548c\u53c2\u6570\u9009\u9879\u3002\u5982\u679c\u6309\u4e0a\u9762\u76845\u70b9\u6765\u6bd4\u5bf9\uff0c\u57fa\u672c\u4e0a\u53ea\u80fd\u8bf4\u662f\u52c9\u5f3a\u652f\u6301\u7b2c3\u70b9\uff0c\u5176\u4ed6\u51e0\u9879\u53ea\u80fd\u9760\u7a0b\u5e8f\u81ea\u5df1\u6765\u5b9e\u73b0\u4e86\uff0c\u6240\u4ee5\uff0c\u60f3\u76f4\u63a5\u57fa\u4e8egetopt()\u5b9e\u73b0\u4e00\u4e2a\u50cfgit\u8fd9\u6837\u590d\u6742\u7684\u547d\u4ee4\u884c\u53c2\u6570\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u53ea\u6709\u81ea\u5df1\u6765\u505a\u5f88\u591a\u7684\u89e3\u6790\u5de5\u4f5c\u3002\u5c0f\u4f19\u4f34\u4eec\u770b\u8fc7getopt()\u4e4b\u540e\u4e00\u81f4\u7684\u8bc4\u4ef7\u662f:\u56fe\u6837\u56fe\u68ee\u7834\u3002<\/p>\n<p><strong>2. Google gflags<\/strong><\/p>\n<p>\u63a5\u7740\uff0c\u5c0f\u4f19\u4f34\u4eec\u53c8\u53d1\u73b0\u4e86<a href=\"https:\/\/code.google.com\/p\/gflags\/\">gflags<\/a>\u8fd9\u4e2aGoogle\u51fa\u54c1C++\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790\u5e93\u3002<\/p>\n<pre data-enlighter-language=\"cpp\" class=\"EnlighterJSRAW\">\r\n\/\/C++\r\nDEFINE_bool(memory_pool, false, &quot;If use memory pool&quot;);\r\nDEFINE_bool(daemon, true, &quot;If started as daemon&quot;);\r\nDEFINE_string(module_id, &quot;&quot;, &quot;Server module id&quot;);\r\nDEFINE_int32(http_port, 80, &quot;HTTP listen port&quot;);\r\nDEFINE_int32(https_port, 443, &quot;HTTPS listen port&quot;);\r\n\r\nint main(int argc, char** argv) {\r\n    ::google::ParseCommandLineFlags(&amp;argc, &amp;argv, true);\r\n\r\n    printf(&quot;Server module id: %s&quot;, FLAGS_module_id.c_str());\r\n\r\n    if (FLAGS_daemon) {\r\n      printf(&quot;Run as daemon: %d&quot;, FLAGS_daemon);\r\n    }\r\n    if (FLAGS_memory_pool) {\r\n      printf(&quot;Use memory pool: %d&quot;, FLAGS_daemon);\r\n    }\r\n\r\n    Server server;\r\n\r\n    return 0;\r\n}\r\n<\/pre>\n<p>\u5c0f\u4f19\u4f34\u4eec\u770b\u4e86\u540e\u4e0d\u7531\u5f97\u611f\u53f9\u201c\u771f\u5fc3\u597d\u7528\u554a\u201d\uff01\u7684\u786e\uff0cgflags\u7b80\u5355\u5730\u901a\u8fc7\u51e0\u4e2a\u5b8f\u5c31\u5b9a\u4e49\u4e86\u547d\u4ee4\u884c\u9009\u9879\uff0c\u57fa\u672c\u4e0a\u5f88\u597d\u7684\u652f\u6301\u4e86\u4e0a\u9762\u63d0\u5230\u76841\uff0c3\uff0c4\u8fd9\u51e0\u9879\uff0c\u6bd4\u8d77getopt()\u6765\u5f3a\u591a\u4e86\u3002\u5bf9\u4e8e\u7c7b\u4f3ccp\u8fd9\u6837\u7684\u5c0f\u547d\u4ee4\uff0cgflags\u5e94\u8be5\u662f\u591f\u7528\u4e86\uff0c\u4f46\u8981\u8fbe\u5230git\u8fd9\u79cd\u7ea7\u522b\u5c31\u663e\u5f97\u6709\u4e9b\u5355\u8584\u4e86\u3002<\/p>\n<p><strong>3. Ruby Commander<\/strong><\/p>\n<p>\u63a5\u4e0b\u6765\u5c0f\u4f19\u4f34\u4eec\u53c8\u53d1\u73b0\u4e86Ruby Commander\u5e93\uff1a<\/p>\n<pre data-enlighter-language=\"ruby\" class=\"EnlighterJSRAW\">\r\n\/\/Ruby\r\n# :name is optional, otherwise uses the basename of this executable\r\nprogram :name, &#039;Foo Bar&#039;\r\nprogram :version, &#039;1.0.0&#039;\r\nprogram :description, &#039;Stupid command that prints foo or bar.&#039;\r\ncommand :bar do |c|\r\n  c.syntax = &#039;foobar bar [options]&#039;\r\n  c.description = &#039;Display bar with optional prefix and suffix&#039;\r\n  c.option &#039;--prefix STRING&#039;, String, &#039;Adds a prefix to bar&#039;\r\n  c.option &#039;--suffix STRING&#039;, String, &#039;Adds a suffix to bar&#039;\r\n  c.action do |args, options|\r\n    options.default :prefix =&gt; &#039;(&#039;, :suffix =&gt; &#039;)&#039;\r\n    say &quot;#{options.prefix}bar#{options.suffix}&quot;\r\n  end\r\nend\r\n$ foobar bar\r\n# =&gt; (bar)\r\n$ foobar bar --suffix &#039;}&#039; --prefix &#039;{&#039;\r\n# =&gt; {bar}\r\n<\/pre>\n<p>Commander\u5e93\u5229\u7528Ruby\u9177\u70ab\u7684\u8bed\u6cd5\u5b9a\u4e49\u4e86\u4e00\u79cd\u63cf\u8ff0\u547d\u4ee4\u884c\u53c2\u6570\u7684\u5185\u90e8DSL\uff0c\u770b\u8d77\u6765\u76f8\u5f53\u9ad8\u7aef\u5927\u6c14\u4e0a\u6863\u6b21\u3002\u9664\u4e86\u4e0a\u9762\u7684\u7b2c5\u9879\u4e4b\u5916\uff0c\u5176\u4ed6\u51e0\u9879\u90fd\u6709\u5f88\u597d\u7684\u652f\u6301\uff0c\u53ef\u4ee5\u8bf4Commander\u5e93\u7684\u8bbe\u8ba1\u57fa\u672c\u8fbe\u5230\u4e86git\u8fd9\u79cd\u7ea7\u522b\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790\u7684\u8981\u6c42\u3002\u53ea\u662f\uff0c\u8981\u641e\u61c2Ruby\u8fd9\u4e48\u70ab\u7684\u8bed\u6cd5\u548c\u8fd9\u4e2a\u5e93\u7684\u4f7f\u7528\u65b9\u6cd5\u6050\u6015\u5c31\u4e0d\u5982getopt()\u548cgflags\u5bb9\u6613\u4e86\u3002\u6709\u5c0f\u4f19\u4f34\u5f53\u573a\u8868\u793a\u60f3\u8981\u5b66\u4e60Ruby\uff0c\u4f46\u662f\u4e5f\u6709\u5c0f\u4f19\u4f34\u8868\u793a\u518d\u770b\u770b\u5176\u4ed6\u5e93\u518d\u8bf4\u3002<\/p>\n<p><strong>4. Lisp cmdline\u5e93<\/strong><\/p>\n<p>\u63a5\u4e0b\u6765\uff0c\u5c0f\u4f19\u4f34\u4eec\u53d1\u73b0\u4e86Lisp\u65b9\u8a00Racket\u7684<a href=\"http:\/\/docs.racket-lang.org\/reference\/Command-Line_Parsing.html\">cmdline\u5e93<\/a>\u3002<\/p>\n<pre data-enlighter-language=\"ruby\" class=\"EnlighterJSRAW\">\r\n\/\/Lisp\r\n(parse-command-line &quot;compile&quot; (current-command-line-arguments)\r\n  `((once-each\r\n     [(&quot;-v&quot; &quot;--verbose&quot;)\r\n      ,(lambda (flag) (verbose-mode #t))\r\n      (&quot;Compile with verbose messages&quot;)]\r\n     [(&quot;-p&quot; &quot;--profile&quot;)\r\n      ,(lambda (flag) (profiling-on #t))\r\n      (&quot;Compile with profiling&quot;)])\r\n    (once-any\r\n     [(&quot;-o&quot; &quot;--optimize-1&quot;)\r\n      ,(lambda (flag) (optimize-level 1))\r\n      (&quot;Compile with optimization level 1&quot;)]\r\n     [(&quot;--optimize-2&quot;)\r\n      ,(lambda (flag) (optimize-level 2))\r\n      ((&quot;Compile with optimization level 2,&quot;\r\n        &quot;which implies all optimizations of level 1&quot;))])\r\n    (multi\r\n     [(&quot;-l&quot; &quot;--link-flags&quot;)\r\n      ,(lambda (flag lf) (link-flags (cons lf (link-flags))))\r\n      (&quot;Add a flag &lt;lf&gt; for the linker&quot; &quot;lf&quot;)]))\r\n   (lambda (flag-accum file) file)\r\n   &#039;(&quot;filename&quot;))\r\n<\/pre>\n<p>\u8fd9\u662f\u795e\u9a6c\u6d6e\u4e91\u554a?\u62ec\u53f7\u5957\u62ec\u53f7\uff0c\u770b\u8d77\u6765\u5f88\u5389\u5bb3\u7684\u6837\u5b50\uff0c\u4f46\u53c8\u4e0d\u662f\u5f88\u660e\u767d\u3002\u770b\u5230\u8fd9\u6837\u7684\u8bbe\u8ba1\uff0c\u6709\u7684\u5c0f\u4f19\u4f34\u8fde\u8bc4\u4ef7\u90fd\u61d2\u5f97\u8bc4\u4ef7\u4e86\uff0c\u4f46\u4e5f\u6709\u7684\u5c0f\u4f19\u4f34\u5bf9Lisp\u8d8a\u53d1\u5d07\u62dc\uff0c\u8868\u793aLisp\u5c31\u662f\u6240\u8c13\u7684\u7ec8\u6781\u8bed\u8a00\u4e86\uff0c\u6ca1\u6709\u54ea\u95e8\u8bed\u8a00\u80fd\u5199\u51fa\u8fd9\u4e48\u4e0d\u660e\u89c9\u5386\u7684\u4ee3\u7801\u6765\uff01\u5c0f\u4f19\u4f34\u4eec\u6b63\u51c6\u5907\u6253\u5b8c\u6536\u5de5\uff0c\u7a81\u7136&#8230;<\/p>\n<p><strong>5. Node.js\u7684LineParser\u5e93<\/strong><\/p>\n<p>\u53d1\u73b0\u4e86Node.js\u7684<a href=\"https:\/\/github.com\/weidagang\/line-parser-js\">LineParser\u5e93<\/a>:<\/p>\n<p>[javascript]<br \/>\n\/\/JavaScript<br \/>\nvar meta = {<br \/>\n    program : &#8216;adb&#8217;,<br \/>\n    name : &#8216;Android Debug Bridge&#8217;,<br \/>\n    version : &#8216;1.0.3&#8217;,<br \/>\n    subcommands : [ &#8216;connect&#8217;, &#8216;disconnect&#8217;, &#8216;install&#8217; ],<br \/>\n    options : {<br \/>\n        flags : [<br \/>\n            [ &#8216;h&#8217;, &#8216;help&#8217;, &#8216;print program usage&#8217; ],<br \/>\n            [ &#8216;r&#8217;, &#8216;reinstall&#8217;, &#8216;reinstall package&#8217; ],<br \/>\n            [ &#8216;l&#8217;, &#8216;localhost&#8217;, &#8216;localhost&#8217; ]<br \/>\n        ],<br \/>\n        parameters : [<br \/>\n            [ null, &#8216;host&#8217;, &#8216;adb server hostname or IP address&#8217;, null ],<br \/>\n            [ &#8216;p&#8217;, &#8216;port&#8217;, &#8216;adb server port&#8217;, 5037 ]<br \/>\n        ]<br \/>\n    },<br \/>\n    usages : [<br \/>\n        [ &#8216;connect&#8217;, [&#8216;host&#8217;, &#8216;[port]&#8217;], null, &#8216;connect to adb server&#8217;, adb_connect ],<br \/>\n        [ &#8216;connect&#8217;, [ &#8216;l&#8217; ], null, &#8216;connect to the local adb server&#8217;, adb_connect ],<br \/>\n        [ &#8216;disconnect&#8217;, null, null, &#8216;disconnect from adb server&#8217;, adb_disconnect ],<br \/>\n        [ &#8216;install&#8217;, [&#8216;r&#8217;], [&#8216;package&#8217;], &#8216;install package&#8217;, adb_install ],<br \/>\n        [ null, [&#8216;h&#8217;], null, &#8216;help&#8217;, adb_help ],<br \/>\n    ]<br \/>\n};<\/p>\n<p>try {<br \/>\n    var lineparser = require(&#8216;lineparser&#8217;);<br \/>\n    var parser = lineparser.init(meta);<br \/>\n    \/\/ adb_install will be invoked<br \/>\n    parser.parse([&#8216;install&#8217;, &#8216;-r&#8217;, &#8216;\/pkgs\/bird.apk&#8217;]);<br \/>\n}<br \/>\ncatch (e) {<br \/>\n    console.error(e);<br \/>\n}<br \/>\n[\/javascript]<\/p>\n<p>\u5929\u554a\uff01\uff1f\u8fd9\u662f\u4ec0\u4e48\uff1f\u6211\u548c\u5c0f\u4f19\u4f34\u4eec\u5f7b\u5e95\u60ca\u5446\u4e86\uff01\u77ed\u77ed\u5341\u51e0\u884c\u4ee3\u7801\u5c31\u83b7\u5f97\u4e86\u4e0a\u97625\u70b9\u7684\u5168\u9762\u652f\u6301\uff0c\u91cd\u8981\u7684\u662f\u5c0f\u4f19\u4f34\u4eec\u5c45\u7136\u4e00\u4e0b\u5b50\u5c31\u770b\u61c2\u4e86\uff0c\u6ca1\u6709\u4efb\u4f55\u7684\u906e\u906e\u63a9\u63a9\u548c\u6545\u5f04\u7384\u865a\u3002\u672c\u6765\u4ee5\u4e3aRuby\u548cLisp\u5f88\u9177\uff0c\u5c0f\u4f19\u4f34\u4eec\u90fd\u60f3\u9a6c\u4e0a\u53bb\u5b66Ruby\u548cLisp\u4e86\uff0c\u770b\u5230\u8fd9\u4e2a\u4ee3\u7801\u4e4b\u540e\u600e\u4e48\u611f\u89c9\u524d\u9762\u5168\u662f\u5728\u88c5\u5462\uff1f\u6709\u4e2a\u5c0f\u4f19\u4f34\u5c45\u7136\u6fc0\u52a8\u5f97\u54ed\u7740\u8868\u793a\uff1a\u6211\u5199\u4ee3\u7801\u591a\u5e74\uff0c\u4ee5\u4e3a\u518d\u4e5f\u6ca1\u6709\u4ec0\u4e48\u4ee3\u7801\u53ef\u4ee5\u8ba9\u6211\u611f\u52a8\uff0c\u6ca1\u60f3\u5230\u8fd9\u6bb5\u4ee3\u7801\u5982\u6b64\u7cbe\u5999\uff0c\u6211\u4e0d\u7531\u5f97\u8981\u8d5e\u53f9\u4e86\uff0c\u5b9e\u5728\u662f\u592a\u6f02\u4eae\u4e86\uff01<\/p>\n<p>\u5c0f\u4f19\u4f34\u4eec\u7684\u6545\u4e8b\u8bb2\u5b8c\u4e86\uff0c\u60a8\u770b\u61c2\u4e86\u5417\uff1f\u5982\u679c\u6ca1\u6709\u770b\u61c2\u7684\u8bdd\uff0c\u6b63\u9898\u5f00\u59cb\u4e86\uff1a<\/p>\n<p>\u5728\u7edd\u5927\u591a\u6570\u8bed\u8a00\u4e2d\u6570\u636e\u548c\u4ee3\u7801\u53ef\u4ee5\u8bf4\u662f\u6cfe\u6e2d\u5206\u660e\uff0c\u4e60\u60efC++\u3001Java\u7b49\u4e3b\u6d41\u8bed\u8a00\u7684\u7a0b\u5e8f\u5458\u5f88\u5c11\u53bb\u601d\u8003\u6570\u636e\u548c\u4ee3\u7801\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u4e0e\u591a\u6570\u8bed\u8a00\u4e0d\u540c\u7684\u662fLisp\u4ee5\u201c\u6570\u636e\u5373\u4ee3\u7801\uff0c\u4ee3\u7801\u5373\u6570\u636e\u201d\u8457\u79f0\uff0cLisp\u7528S\u8868\u8fbe\u5f0f\u7edf\u4e00\u4e86\u6570\u636e\u548c\u4ee3\u7801\u7684\u5f62\u5f0f\u800c\u72ec\u6811\u4e00\u5e1c\u3002Lisp\u5947\u602a\u7684S\u8868\u8fbe\u5f0f\u548c\u590d\u6742\u7684\u5b8f\u7cfb\u7edf\u8ba9\u8bb8\u591a\u4eba\u90fd\u611f\u5230Lisp\u5f88\u795e\u79d8\uff0c\u800c\u591a\u6570Lisp\u6559\u7a0b\u8981\u4e48\u5f3a\u8c03\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u8981\u4e48\u9f13\u5439\u5b8f\u5982\u4f55\u5f3a\u5927\uff0c\u53cd\u800c\u63a9\u76d6\u4e86Lisp\u771f\u6b63\u672c\u8d28\u7684\u4e1c\u897f\uff0c\u4e3a\u6b64\u6211\u66fe\u5199\u8fc7\u4e00\u7bc7<a href=\"http:\/\/www.cnblogs.com\/weidagang2046\/archive\/2012\/06\/03\/tao_of_lisp.html\">\u300aLisp\u7684\u6c38\u6052\u4e4b\u9053\u300b<\/a>\u4ecb\u7ecdLisp\u601d\u60f3\u3002<\/p>\n<p>\u8bbe\u8ba1\u601d\u60f3\u548c\u5177\u4f53\u6280\u672f\u7684\u533a\u522b\u5728\u4e8e\u524d\u8005\u5f80\u5f80\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e2d\u4ee5\u4e0d\u540c\u7684\u5f62\u5f0f\u5c55\u73b0\u51fa\u6765\u3002\u6bd4\u5982\uff0c\u719f\u6089\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u7a0b\u5e8f\u5458\u5728\u7406\u89e3\u4e86\u7eaf\u51fd\u6570\u7684\u4f18\u70b9\u540e\u5373\u4f7f\u662f\u7528C\u8bed\u8a00\u4e5f\u4f1a\u66f4\u503e\u5411\u4e8e\u5199\u51fa\u65e0\u526f\u4f5c\u7528\u7684\u51fd\u6570\u6765\uff0c\u8fd9\u5c31\u662f\u51fd\u6570\u5f0f\u601d\u60f3\u5728\u547d\u4ee4\u5f0f\u73af\u5883\u7684\u5e94\u7528\u3002\u6240\u4ee5\uff0c\u7406\u89e3Lisp\u601d\u60f3\u4e00\u5b9a\u8981\u80fd\u5728\u975eLisp\u73af\u5883\u5e94\u7528\uff0c\u624d\u7b97\u662f\u878d\u6c47\u8d2f\u901a\u3002<\/p>\n<p>\u5982\u679c\u771f\u6b63\u7406\u89e3\u4e86Lisp\u7684\u672c\u8d28\uff0c\u90a3\u6240\u8c13\u7684\u201c\u6570\u636e\u5373\u4ee3\u7801\uff0c\u4ee3\u7801\u5373\u6570\u636e\u201d\u4e00\u70b9\u513f\u4e5f\u4e0d\u795e\u79d8\uff0c\u8fd9\u4e0d\u5c31\u662f\u6211\u4eec\u6bcf\u5929\u6253\u4ea4\u9053\u7684\u914d\u7f6e\u6587\u4ef6\u5417\uff01\uff1f\u5982\u679c\u4f60\u8fd8\u4e0d\u662f\u5f88\u7406\u89e3\u7684\u8bdd\uff0c\u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u51e0\u4e2a\u95ee\u9898\u6162\u6162\u5206\u6790\uff1a<\/p>\n<p>1) \u914d\u7f6e\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\u8981\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\uff1f<\/p>\n<p>\u4e0d\u77e5\u9053\u4f60\u662f\u5426\u610f\u8bc6\u5230\u4e86\uff0c\u6211\u4eec\u6bcf\u5929\u90fd\u5728\u4f7f\u7528\u7684\u5404\u79cd\u5404\u6837\u7684<strong>\u914d\u7f6e\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u5143\u6570\u636e\u4e5f\u662f\u4e00\u79cdDSL<\/strong>\uff0c\u8fd9\u548cLisp\u57fa\u4e8eS\u8868\u8fbe\u5f0f\u7684\u201c\u6570\u636e\u5373\u4ee3\u7801\uff0c\u4ee3\u7801\u5373\u6570\u636e\u201d\u6ca1\u6709\u672c\u8d28\u533a\u522b\u3002\u5728C++\u3001Java\u7b49\u7a0b\u5e8f\u4e2d\u5f15\u5165\u914d\u7f6e\u6587\u4ef6\u7684\u76ee\u7684\u6b63\u662f\u7528DSL\u5f25\u8865\u901a\u7528\u8bed\u8a00\u8868\u8fbe\u80fd\u529b\u548c\u7075\u6d3b\u6027\u7684\u4e0d\u8db3\u3002\u6211\u77e5\u9053\u4e0d\u5c11\u4eba\u559c\u6b22\u4ece\u8ba1\u7b97\u7684\u89d2\u5ea6\u6765\u770b\u5230\u7a0b\u5e8f\u548c\u8bed\u8a00\uff0c\u4f3c\u4e4e\u53ea\u6709\u56fe\u7075\u5b8c\u5907\u7684\u8bed\u8a00\u5982C++\u3001Java\u3001Python\u7b49\u624d\u53eb\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u800c\u7c7b\u4f3cCSS\u548cHTML\u8fd9\u6837\u7684\u4e1c\u897f\u6839\u672c\u4e0d\u80fd\u53eb\u505a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u3002\u5176\u5b9e\uff0c\u5728\u6211\u770b\u6765\u8fd9\u79cd\u89c2\u70b9\u8fc7\u4e8e\u72ed\u9698\uff0c<strong>\u7a0b\u5e8f\u7684\u672c\u8d28\u662f\u8bed\u4e49\u7684\u8868\u8fbe<\/strong>\uff0c\u800c\u8bed\u4e49\u8868\u8fbe\u4e0d\u4e00\u5b9a\u8981\u662f\u8ba1\u7b97\u3002<\/p>\n<p>2) \u914d\u7f6e\u662f\u6570\u636e\u8fd8\u662f\u4ee3\u7801\uff1f<\/p>\n<p>\u5f88\u660e\u663e\uff0cBoth!\u8bf4\u914d\u7f6e\u662f\u6570\u636e\uff0c\u56e0\u4e3a\u5b83\u662f\u58f0\u660e\u5f0f\u7684\u63cf\u8ff0\uff0c\u80fd\u65b9\u4fbf\u5730\u4fee\u6539\u548c\u4f20\u8f93\uff1b\u8bf4\u914d\u7f6e\u662f\u4ee3\u7801\uff0c\u56e0\u4e3a\u5b83\u5728\u8868\u8fbe\u903b\u8f91\uff0c\u4f60\u7684\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u5c31\u662f\u914d\u7f6e\u7684\u89e3\u91ca\u5668\u3002<\/p>\n<p>3) \u914d\u7f6e\u7684\u683c\u5f0f\u662f\u4ec0\u4e48\uff1f<\/p>\n<p>\u914d\u7f6e\u7684\u683c\u5f0f\u662f\u4efb\u610f\u7684\uff0c\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u8bed\u6cd5\uff0c\u53ea\u8981\u914d\u4ee5\u76f8\u5e94\u7684\u89e3\u91ca\u5668\u5c31\u884c\u3002\u4e0d\u8fc7\u66f4\u7b80\u5355\u901a\u7528\u7684\u505a\u6cd5\u662f\u57fa\u4e8eXML\u3001JSON\u3001\u6216S\u8868\u8fbe\u5f0f\u7b49\u6807\u51c6\u7ed3\u6784\uff0c\u5728\u6b64\u4e4b\u4e0a\u8fdb\u4e00\u6b65\u5b9a\u4e49schema\u3002\u751a\u81f3\u5b8c\u5168\u4e0d\u5fc5\u662f\u6587\u4ef6\uff0c\u5728\u6211\u4eec\u7684\u9879\u76ee\u4e2d\u914d\u7f6e\u7ecf\u5e38\u662f\u653e\u5230\u7528\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u7684\u3002\u53e6\u5916\uff0c\u4e0b\u9762\u6211\u4eec\u8fd8\u4f1a\u770b\u5230\u7528\u8bed\u8a00\u7684Literal\u6570\u636e\u4f5c\u4e3a\u914d\u7f6e\u3002<\/p>\n<p>4) \u4e1a\u52a1\u903b\u8f91\u90fd\u53ef\u4ee5\u653e\u5230\u914d\u7f6e\u4e2d\u5417\uff1f<\/p>\n<p>\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u663e\u7136\u662f\uff1aYes\uff01\u6211\u6ca1\u6709\u9047\u5230\u8fc7\u4e0d\u53ef\u4ee5\u653e\u5165\u914d\u7f6e\u7684\u903b\u8f91\uff0c\u53ea\u662f\u95ee\u9898\u5728\u4e8e\u8fd9\u6837\u505a\u662f\u5426\u503c\u5f97\uff0c\u80fd\u8fbe\u5230\u4ec0\u4e48\u6548\u679c\u3002\u5bf9\u4e8e\u9700\u8981\u7075\u6d3b\u53d8\u5316\uff0c\u91cd\u590d\u51fa\u73b0\uff0c\u6709\u590d\u7528\u4ef7\u503c\u7684\u4e1c\u897f\u653e\u5165\u4f5c\u4e3a\u914d\u7f6e\u662f\u660e\u667a\u7684\u9009\u62e9\u3002\u8fd9\u7bc7\u6587\u7ae0\u7684\u4e3b\u8981\u76ee\u7684\u5c31\u5728\u4e8e\u4ecb\u7ecd\u628a<strong>\u4e3b\u8981\u4e1a\u52a1\u903b\u8f91\u90fd\u653e\u5230\u914d\u7f6e\u4e2d\uff0c\u518d\u901a\u8fc7\u7a0b\u5e8f\u89e3\u91ca\u6267\u884c\u914d\u7f6e\u7684\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u6211\u79f0\u4e4b\u4e3a\uff1a\u5143\u9a71\u52a8\u7f16\u7a0b(Meta Driven Programming)<\/strong>\u3002<\/p>\n","raw":"","protected":false},"excerpt":{"rendered":"<p>\uff08\u611f\u8c22\u00a0@\u6587\u827a\u590d\u5174\u8bb0\uff08todd\uff09 \u6295\u9012\u6b64\u6587\uff09 \u51e0\u4e2a\u5c0f\u4f19\u4f34\u5728\u8003\u8651\u4e0b\u9762\u8fd9\u4e2a\u5404\u4e2a\u8bed\u8a00\u90fd\u4f1a\u9047\u5230\u7684\u95ee\u9898\uff1a \u95ee\u9898\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790API \u4e00\u4e2a\u597d\u7684\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790\u5e93\u4e00\u822c&#8230;<\/p>\n<p class=\"read-more\"><a class=\"btn btn-default\" href=\"https:\/\/coolshell.cn\/articles\/10337.html\"> Read More<span class=\"screen-reader-text\">  Read More<\/span><\/a><\/p>\n","protected":false},"author":3213,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5,100,10,3],"tags":[59,114,255,69],"series":[],"aioseo_notices":[],"views":58637,"post_thumbnail_image":"","content_first_image":"","post_medium_image_300":"","post_thumbnail_image_624":"","post_frist_image":"","post_medium_image":"","post_large_image":"","post_full_image":"","post_all_images":[],"videoAdId":"","listAd":"0","listAdId":"","listAdEvery":5,"total_comments":77,"category_name":"C\/C++\u8bed\u8a00","post_date":"2013-08-09","like_count":"0","praiseWord":"\u9f13\u52b1","excitationAd":"0","rewardedVideoAdId":"","detailAdId":"","detailAd":"0","enterpriseMinapp":"0","audios":[],"postImageUrl":"http:\/\/coolshell.cn\/wp-content\/uploads\/2016\/09\/coolshell-360x200.jpg","avatarurls":[],"related_posts":[],"pageviews":58638,"pageviews_wl":22146,"ratings_average":4,"ratings_total":234,"ratings_users":58,"next_post_id":10449,"next_post_title":"C++\u6a21\u677f\u201d&gt;&gt;\u201d\u7f16\u8bd1\u95ee\u9898\u4e0e\u8bcd\u6cd5\u6d88\u6b67\u8bbe\u8ba1","previous_post_id":10192,"previous_post_title":"\u6570\u636e\u7684\u6e38\u620f\uff1a\u51b0\u4e0e\u706b"}