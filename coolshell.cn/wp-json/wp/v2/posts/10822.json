{"id":10822,"date":"2013-12-27T08:11:03","date_gmt":"2013-12-27T00:11:03","guid":{"rendered":"http:\/\/coolshell.cn\/?p=10822"},"modified":"2020-07-06T17:19:45","modified_gmt":"2020-07-06T09:19:45","slug":"%e5%87%bd%e6%95%b0%e5%bc%8f%e7%bc%96%e7%a8%8b","status":"publish","type":"post","link":"https:\/\/coolshell.cn\/articles\/10822.html","title":{"rendered":"\u51fd\u6570\u5f0f\u7f16\u7a0b"},"content":{"rendered":"<p><img decoding=\"async\" loading=\"lazy\" class=\"alignright size-medium wp-image-10861\" src=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/yoda-lambda-204x300.png\" alt=\"\" width=\"204\" height=\"300\" \/>\u5f53\u6211\u4eec\u8bf4\u8d77\u51fd\u6570\u5f0f\u7f16\u7a0b\u6765\u8bf4\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u5982\u4e0b\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u957f\u76f8\uff1a<\/p>\n<ul>\n<li>\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u4e09\u5927\u7279\u6027\uff1a\n<ul>\n<li><strong>immutable data \u4e0d\u53ef\u53d8\u6570\u636e<\/strong>\uff1a\u50cfClojure\u4e00\u6837\uff0c\u9ed8\u8ba4\u4e0a\u53d8\u91cf\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5982\u679c\u4f60\u8981\u6539\u53d8\u53d8\u91cf\uff0c\u4f60\u9700\u8981\u628a\u53d8\u91cfcopy\u51fa\u53bb\u4fee\u6539\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u53ef\u4ee5\u8ba9\u4f60\u7684\u7a0b\u5e8f\u5c11\u5f88\u591aBug\u3002\u56e0\u4e3a\uff0c\u7a0b\u5e8f\u4e2d\u7684\u72b6\u6001\u4e0d\u597d\u7ef4\u62a4\uff0c\u5728\u5e76\u53d1\u7684\u65f6\u5019\u66f4\u4e0d\u597d\u7ef4\u62a4\u3002\uff08\u4f60\u53ef\u4ee5\u8bd5\u60f3\u4e00\u4e0b\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u6709\u4e2a\u590d\u6742\u7684\u72b6\u6001\uff0c\u5f53\u4ee5\u540e\u522b\u4eba\u6539\u4f60\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u662f\u5f88\u5bb9\u6613\u51fabug\u7684\uff0c\u5728\u5e76\u884c\u4e2d\u8fd9\u6837\u7684\u95ee\u9898\u5c31\u66f4\u591a\u4e86\uff09<\/li>\n<li><strong>first class functions<\/strong>\uff1a\u8fd9\u4e2a\u6280\u672f\u53ef\u4ee5\u8ba9\u4f60\u7684\u51fd\u6570\u5c31\u50cf\u53d8\u91cf\u4e00\u6837\u6765\u4f7f\u7528\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u7684\u51fd\u6570\u53ef\u4ee5\u50cf\u53d8\u91cf\u4e00\u6837\u88ab\u521b\u5efa\uff0c\u4fee\u6539\uff0c\u5e76\u5f53\u6210\u53d8\u91cf\u4e00\u6837\u4f20\u9012\uff0c\u8fd4\u56de\u6216\u662f\u5728\u51fd\u6570\u4e2d\u5d4c\u5957\u51fd\u6570\u3002\u8fd9\u4e2a\u6709\u70b9\u50cfJavascript\u7684Prototype\uff08\u53c2\u770b<a title=\"\u518d\u8c08javascript\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\" href=\"https:\/\/coolshell.cn\/articles\/6668.html\" target=\"_blank\" rel=\"noopener noreferrer\">Javascript\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b<\/a>\uff09<\/li>\n<li><strong>\u5c3e\u9012\u5f52\u4f18\u5316<\/strong>\uff1a\u6211\u4eec\u77e5\u9053\u9012\u5f52\u7684\u5bb3\u5904\uff0c\u90a3\u5c31\u662f\u5982\u679c\u9012\u5f52\u5f88\u6df1\u7684\u8bdd\uff0cstack\u53d7\u4e0d\u4e86\uff0c\u5e76\u4f1a\u5bfc\u81f4\u6027\u80fd\u5927\u5e45\u5ea6\u4e0b\u964d\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4f7f\u7528\u5c3e\u9012\u5f52\u4f18\u5316\u6280\u672f\u2014\u2014\u6bcf\u6b21\u9012\u5f52\u65f6\u90fd\u4f1a\u91cd\u7528stack\uff0c\u8fd9\u6837\u4e00\u6765\u80fd\u591f\u63d0\u5347\u6027\u80fd\uff0c\u5f53\u7136\uff0c\u8fd9\u9700\u8981\u8bed\u8a00\u6216\u7f16\u8bd1\u5668\u7684\u652f\u6301\u3002Python\u5c31\u4e0d\u652f\u6301\u3002<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<ul>\n<li>\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u51e0\u4e2a\u6280\u672f\n<ul>\n<li><strong>map &amp; reduce<\/strong> \uff1a\u8fd9\u4e2a\u6280\u672f\u4e0d\u7528\u591a\u8bf4\u4e86\uff0c\u51fd\u6570\u5f0f\u7f16\u7a0b\u6700\u5e38\u89c1\u7684\u6280\u672f\u5c31\u662f\u5bf9\u4e00\u4e2a\u96c6\u5408\u505aMap\u548cReduce\u64cd\u4f5c\u3002\u8fd9\u6bd4\u8d77\u8fc7\u7a0b\u5f0f\u7684\u8bed\u8a00\u6765\u8bf4\uff0c\u5728\u4ee3\u7801\u4e0a\u8981\u66f4\u5bb9\u6613\u9605\u8bfb\u3002\uff08\u4f20\u7edf\u8fc7\u7a0b\u5f0f\u7684\u8bed\u8a00\u9700\u8981\u4f7f\u7528for\/while\u5faa\u73af\uff0c\u7136\u540e\u5728\u5404\u79cd\u53d8\u91cf\u4e2d\u628a\u6570\u636e\u5012\u8fc7\u6765\u5012\u8fc7\u53bb\u7684\uff09\u8fd9\u4e2a\u5f88\u50cfC++\u4e2d\u7684STL\u4e2d\u7684foreach\uff0cfind_if\uff0ccount_if\u4e4b\u6d41\u7684\u51fd\u6570\u7684\u73a9\u6cd5\u3002<\/li>\n<li><strong>pipeline<\/strong>\uff1a\u8fd9\u4e2a\u6280\u672f\u7684\u610f\u601d\u662f\uff0c\u628a\u51fd\u6570\u5b9e\u4f8b\u6210\u4e00\u4e2a\u4e00\u4e2a\u7684action\uff0c\u7136\u540e\uff0c\u628a\u4e00\u7ec4action\u653e\u5230\u4e00\u4e2a\u6570\u7ec4\u6216\u662f\u5217\u8868\u4e2d\uff0c\u7136\u540e\u628a\u6570\u636e\u4f20\u7ed9\u8fd9\u4e2aaction list\uff0c\u6570\u636e\u5c31\u50cf\u4e00\u4e2apipeline\u4e00\u6837\u987a\u5e8f\u5730\u88ab\u5404\u4e2a\u51fd\u6570\u6240\u64cd\u4f5c\uff0c\u6700\u7ec8\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u3002<\/li>\n<li><strong>recursing \u9012\u5f52<\/strong> \uff1a\u9012\u5f52\u6700\u5927\u7684\u597d\u5904\u5c31\u7b80\u5316\u4ee3\u7801\uff0c\u4ed6\u53ef\u4ee5\u628a\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\u7528\u5f88\u7b80\u5355\u7684\u4ee3\u7801\u63cf\u8ff0\u51fa\u6765\u3002\u6ce8\u610f\uff1a\u9012\u5f52\u7684\u7cbe\u9ad3\u662f\u63cf\u8ff0\u95ee\u9898\uff0c\u800c\u8fd9\u6b63\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u7cbe\u9ad3\u3002<\/li>\n<li><strong>currying<\/strong>\uff1a\u628a\u4e00\u4e2a\u51fd\u6570\u7684\u591a\u4e2a\u53c2\u6570\u5206\u89e3\u6210\u591a\u4e2a\u51fd\u6570\uff0c \u7136\u540e\u628a\u51fd\u6570\u591a\u5c42\u5c01\u88c5\u8d77\u6765\uff0c\u6bcf\u5c42\u51fd\u6570\u90fd\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u53bb\u63a5\u6536\u4e0b\u4e00\u4e2a\u53c2\u6570\u8fd9\u6837\uff0c\u53ef\u4ee5\u7b80\u5316\u51fd\u6570\u7684\u591a\u4e2a\u53c2\u6570\u3002\u5728C++\u4e2d\uff0c\u8fd9\u4e2a\u5f88\u50cfSTL\u4e2d\u7684bind_1st\u6216\u662fbind2nd\u3002<\/li>\n<li><strong>higher order function \u9ad8\u9636\u51fd\u6570<\/strong>\uff1a\u6240\u8c13\u9ad8\u9636\u51fd\u6570\u5c31\u662f\u51fd\u6570\u5f53\u53c2\u6570\uff0c\u628a\u4f20\u5165\u7684\u51fd\u6570\u505a\u4e00\u4e2a\u5c01\u88c5\uff0c\u7136\u540e\u8fd4\u56de\u8fd9\u4e2a\u5c01\u88c5\u51fd\u6570\u3002\u73b0\u8c61\u4e0a\u5c31\u662f\u51fd\u6570\u4f20\u8fdb\u4f20\u51fa\uff0c\u5c31\u50cf\u9762\u5411\u5bf9\u8c61\u5bf9\u8c61\u6ee1\u5929\u98de\u4e00\u6837\u3002<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><!--more--><\/p>\n<ul>\n<li>\u8fd8\u6709\u51fd\u6570\u5f0f\u7684\u4e00\u4e9b\u597d\u5904\n<ul>\n<li><strong>parallelization \u5e76\u884c\uff1a<\/strong>\u6240\u8c13\u5e76\u884c\u7684\u610f\u601d\u5c31\u662f\u5728\u5e76\u884c\u73af\u5883\u4e0b\uff0c\u5404\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u4e0d\u9700\u8981\u540c\u6b65\u6216\u4e92\u65a5\u3002<\/li>\n<li><strong>lazy evaluation \u60f0\u6027\u6c42\u503c<\/strong>\uff1a\u8fd9\u4e2a\u9700\u8981\u7f16\u8bd1\u5668\u7684\u652f\u6301\u3002\u8868\u8fbe\u5f0f\u4e0d\u5728\u5b83\u88ab\u7ed1\u5b9a\u5230\u53d8\u91cf\u4e4b\u540e\u5c31\u7acb\u5373\u6c42\u503c\uff0c\u800c\u662f\u5728\u8be5\u503c\u88ab\u53d6\u7528\u7684\u65f6\u5019\u6c42\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8bed\u53e5\u5982<i>x:=expression;<\/i>\u00a0(\u628a\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf)\u660e\u663e\u7684\u8c03\u7528\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u88ab\u8ba1\u7b97\u5e76\u628a\u7ed3\u679c\u653e\u7f6e\u5230\u00a0<i>x<\/i>\u00a0\u4e2d\uff0c\u4f46\u662f\u5148\u4e0d\u7ba1\u5b9e\u9645\u5728\u00a0<i>x<\/i>\u00a0\u4e2d\u7684\u662f\u4ec0\u4e48\uff0c\u76f4\u5230\u901a\u8fc7\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u4e2d\u5230\u00a0<i>x<\/i>\u00a0\u7684\u5f15\u7528\u800c\u6709\u4e86\u5bf9\u5b83\u7684\u503c\u7684\u9700\u6c42\u7684\u65f6\u5019\uff0c\u800c\u540e\u9762\u8868\u8fbe\u5f0f\u81ea\u8eab\u7684\u6c42\u503c\u4e5f\u53ef\u4ee5\u88ab\u5ef6\u8fdf\uff0c\u6700\u7ec8\u4e3a\u4e86\u751f\u6210\u8ba9\u5916\u754c\u770b\u5230\u7684\u67d0\u4e2a\u7b26\u53f7\u800c\u8ba1\u7b97\u8fd9\u4e2a\u5feb\u901f\u589e\u957f\u7684\u4f9d\u8d56\u6811\u3002<\/li>\n<li><strong>determinism \u786e\u5b9a\u6027<\/strong>\uff1a\u6240\u8c13\u786e\u5b9a\u6027\u7684\u610f\u601d\u5c31\u662f\u50cf\u6570\u5b66\u90a3\u6837\u00a0f(x) = y \uff0c\u8fd9\u4e2a\u51fd\u6570\u65e0\u8bba\u5728\u4ec0\u4e48\u573a\u666f\u4e0b\uff0c\u90fd\u4f1a\u5f97\u5230\u540c\u6837\u7684\u7ed3\u679c\uff0c\u8fd9\u4e2a\u6211\u4eec\u79f0\u4e4b\u4e3a\u51fd\u6570\u7684\u786e\u5b9a\u6027\u3002\u800c\u4e0d\u662f\u50cf\u7a0b\u5e8f\u4e2d\u7684\u5f88\u591a\u51fd\u6570\u90a3\u6837\uff0c\u540c\u4e00\u4e2a\u53c2\u6570\uff0c\u5374\u4f1a\u5728\u4e0d\u540c\u7684\u573a\u666f\u4e0b\u8ba1\u7b97\u51fa\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u6240\u8c13\u4e0d\u540c\u7684\u573a\u666f\u7684\u610f\u601d\u5c31\u662f\u6211\u4eec\u7684\u51fd\u6570\u4f1a\u6839\u636e\u4e00\u4e9b\u8fd0\u884c\u4e2d\u7684\u72b6\u6001\u4fe1\u606f\u7684\u4e0d\u540c\u800c\u53d1\u751f\u53d8\u5316\u3002<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p>\u4e0a\u9762\u7684\u90a3\u4e9b\u4e1c\u897f\u592a\u62bd\u8c61\u4e86\uff0c\u8fd8\u662f\u8ba9\u6211\u4eec\u6765\u5faa\u5e8f\u6e10\u8fd1\u5730\u770b\u4e00\u4e9b\u4f8b\u5b50\u5427\u3002<\/p>\n<p>\u6211\u4eec\u5148\u7528\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u4e00\u4e0b\u4ec0\u4e48\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\u3002<\/p>\n<p>\u5148\u770b\u4e00\u4e2a\u975e\u51fd\u6570\u5f0f\u7684\u4f8b\u5b50\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"c\">int cnt;\nvoid increment(){\n    cnt++;\n}<\/pre>\n<p>&nbsp;<\/p>\n<p>\u90a3\u4e48\uff0c\u51fd\u6570\u5f0f\u7684\u5e94\u8be5\u600e\u4e48\u5199\u5462\uff1f<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"c\">int increment(int cnt){\n    return cnt+1;\n}<\/pre>\n<p>\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u8fd9\u4e2a\u4f8b\u5b50\u592a\u666e\u901a\u4e86\u3002\u662f\u7684\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u5c31\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u51c6\u5219\uff1a<strong>\u4e0d\u4f9d\u8d56\u4e8e\u5916\u90e8\u7684\u6570\u636e\uff0c\u800c\u4e14\u4e5f\u4e0d\u6539\u53d8\u5916\u90e8\u6570\u636e\u7684\u503c\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u503c\u7ed9\u4f60<\/strong>\u3002<\/p>\n<p>\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">def inc(x):\n    def incx(y):\n        return x+y\n    return incx\n\ninc2 = inc(2)\ninc5 = inc(5)\n\nprint inc2(5) # \u8f93\u51fa 7\nprint inc5(5) # \u8f93\u51fa 10<\/pre>\n<p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u90a3\u4e2a\u4f8b\u5b50inc()\u51fd\u6570\u8fd4\u56de\u4e86\u53e6\u4e00\u4e2a\u51fd\u6570incx()\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528inc()\u51fd\u6570\u6765\u6784\u9020\u5404\u79cd\u7248\u672c\u7684inc\u51fd\u6570\uff0c\u6bd4\u5982\uff1ainc2()\u548cinc5()\u3002\u8fd9\u4e2a\u6280\u672f\u5176\u5b9e\u5c31\u662f\u4e0a\u9762\u6240\u8bf4\u7684Currying\u6280\u672f\u3002\u4ece\u8fd9\u4e2a\u6280\u672f\u4e0a\uff0c\u4f60\u53ef\u80fd\u4f53\u4f1a\u5230\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u7406\u5ff5\uff1a<strong>\u628a\u51fd\u6570\u5f53\u6210\u53d8\u91cf\u6765\u7528\uff0c\u5173\u6ce8\u4e8e\u63cf\u8ff0\u95ee\u9898\u800c\u4e0d\u662f\u600e\u4e48\u5b9e\u73b0<\/strong>\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u6613\u8bfb\u3002<\/p>\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_48 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">\u76ee\u5f55<\/p>\n<span class=\"ez-toc-title-toggle\"><\/span><\/div>\n<nav><ul class='ez-toc-list ez-toc-list-level-1 ' ><li class='ez-toc-page-1 ez-toc-heading-level-4'><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/coolshell.cn\/articles\/10822.html\/#Map_Reduce\" title=\"Map &amp; Reduce\">Map &amp; Reduce<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-4'><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/coolshell.cn\/articles\/10822.html\/#Declarative_Programming_vs_Imperative_Programming\" title=\"Declarative Programming vs Imperative Programming\">Declarative Programming vs Imperative Programming<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-4'><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/coolshell.cn\/articles\/10822.html\/#Pipeline\" title=\"Pipeline\">Pipeline<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-4'><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/coolshell.cn\/articles\/10822.html\/#%E5%8F%82%E8%80%83\" title=\"\u53c2\u8003\">\u53c2\u8003<\/a><\/li><\/ul><\/nav><\/div>\n<h4><span class=\"ez-toc-section\" id=\"Map_Reduce\"><\/span>Map &amp; Reduce<span class=\"ez-toc-section-end\"><\/span><\/h4>\n<p>\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e0d\u5e94\u8be5\u7528\u5faa\u73af\u8fed\u4ee3\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u5e94\u8be5\u7528\u66f4\u4e3a\u9ad8\u7ea7\u7684\u65b9\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\u7684Python\u4ee3\u7801<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">name_len = map(len, [\"hao\", \"chen\", \"coolshell\"])\nprint name_len\n# \u8f93\u51fa [3, 4, 9]<\/pre>\n<p>\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u6837\u7684\u4ee3\u7801\u5f88\u6613\u8bfb\uff0c\u56e0\u4e3a\uff0c<strong>\u8fd9\u6837\u7684\u4ee3\u7801\u662f\u5728\u63cf\u8ff0\u8981\u5e72\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u600e\u4e48\u5e72<\/strong>\u3002<\/p>\n<p>\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e2aPython\u4ee3\u7801\u7684\u4f8b\u5b50\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">def toUpper(item):\nreturn item.upper()\n\nupper_name = map(toUpper, [\"hao\", \"chen\", \"coolshell\"])\nprint upper_name\n# \u8f93\u51fa ['HAO', 'CHEN', 'COOLSHELL']<\/pre>\n<p>\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2a\u662f\u4e0d\u662f\u548c\u6211\u4eec\u7684STL\u7684transform\u6709\u4e9b\u50cf\uff1f<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"cpp\">#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nint main() {\n    string s=\"hello\";\n    string out;\n    transform(s.begin(), s.end(), back_inserter(out), ::toupper);\n    cout &lt;&lt; out &lt;&lt; endl;\n    \/\/ \u8f93\u51fa\uff1aHELLO\n}<\/pre>\n<p>\u5728\u4e0a\u9762Python\u7684\u90a3\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5199\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570toUpper\uff0c\u8fd9\u4e2a\u51fd\u6570\u6ca1\u6709\u6539\u53d8\u4f20\u8fdb\u6765\u7684\u503c\uff0c\u53ea\u662f\u628a\u4f20\u8fdb\u6765\u7684\u503c\u505a\u4e2a\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u8fd4\u56de\u3002\u7136\u540e\uff0c\u6211\u4eec\u628a\u5176\u7528\u5728map\u51fd\u6570\u4e2d\uff0c\u5c31\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u63cf\u8ff0\u51fa\u6211\u4eec\u60f3\u8981\u5e72\u4ec0\u4e48\u3002\u800c\u4e0d\u4f1a\u53bb\u7406\u89e3\u4e00\u4e2a\u5728\u5faa\u73af\u4e2d\u7684\u600e\u4e48\u5b9e\u73b0\u7684\u4ee3\u7801\uff0c\u6700\u7ec8\u5728\u8bfb\u4e86\u5f88\u591a\u5faa\u73af\u7684\u903b\u8f91\u540e\u624d\u53d1\u73b0\u539f\u6765\u662f\u8fd9\u4e2a\u6216\u90a3\u4e2a\u610f\u601d\u3002 \u4e0b\u9762\uff0c\u6211\u4eec\u770b\u770b\u63cf\u8ff0\u5b9e\u73b0\u65b9\u6cd5\u7684\u8fc7\u7a0b\u5f0f\u7f16\u7a0b\u662f\u600e\u4e48\u73a9\u7684\uff08\u770b\u4e0a\u53bb\u662f\u4e0d\u662f\u4e0d\u5982\u51fd\u6570\u5f0f\u7684\u6e05\u6670\uff1f\uff09\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">upname =['HAO', 'CHEN', 'COOLSHELL']\nlowname =[]\nfor i in range(len(upname)):\nlowname.append( upname[i].lower() )<\/pre>\n<p>\u5bf9\u4e8emap\u6211\u4eec\u522b\u5fd8\u4e86lambda\u8868\u8fbe\u5f0f\uff1a\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u7406\u89e3\u4e3a\u8fd9\u662f\u4e00\u4e2ainline\u7684\u533f\u540d\u51fd\u6570\u3002\u4e0b\u9762\u7684lambda\u8868\u8fbe\u5f0f\u76f8\u5f53\u4e8e\uff1adef func(x): return x*x<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">squares = map(lambda x: x * x, range(9))\nprint squares\n# \u8f93\u51fa [0, 1, 4, 9, 16, 25, 36, 49, 64]<\/pre>\n<p>\u6211\u4eec\u518d\u6765\u770b\u770breduce\u600e\u4e48\u73a9\uff1f\uff08\u4e0b\u9762\u7684lambda\u8868\u8fbe\u5f0f\u4e2d\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u6b21\u4ece\u5217\u8868\u4e2d\u53d6\u4e24\u4e2a\u503c\uff0c\u8ba1\u7b97\u7ed3\u679c\u540e\u628a\u8fd9\u4e2a\u503c\u518d\u653e\u56de\u53bb\uff0c\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u76f8\u5f53\u4e8e\uff1a<code>((((1+2)+3)+4)+5) \uff09<\/code><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">print reduce(lambda x, y: x+y, [1, 2, 3, 4, 5])\n# \u8f93\u51fa 15<\/pre>\n<p>Python\u4e2d\u7684\u9664\u4e86map\u548creduce\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u522b\u7684\u5982filter, find, all, any\u7684\u51fd\u6570\u505a\u8f85\u52a9\uff08\u5176\u5b83\u51fd\u6570\u5f0f\u7684\u8bed\u8a00\u4e5f\u6709\uff09\uff0c\u53ef\u4ee5\u8ba9\u4f60\u7684\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u66f4\u6613\u8bfb\u3002 \u6211\u4eec\u518d\u6765\u770b\u4e00\u4e2a\u6bd4\u8f83\u590d\u6742\u7684\u4f8b\u5b50\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># \u8ba1\u7b97\u6570\u7ec4\u4e2d\u6b63\u6570\u7684\u5e73\u5747\u503c\",\nnum =[2, -5, 9, 7, -2, 5, 3, 1, 0, -3, 8]\npositive_num_cnt = 0\npositive_num_sum = 0\nfor i in range(len(num)):\n    if num[i] &gt; 0:\n        positive_num_cnt += 1\n        positive_num_sum += num[i]\n\nif positive_num_cnt &gt; 0:\n    average = positive_num_sum \/ positive_num_cnt\n\nprint average\n# \u8f93\u51fa 5<\/pre>\n<p>\u5982\u679c\u7528\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u5199\u6210\u8fd9\u6837\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">positive_num = filter(lambda x: x&gt;0, num)\naverage = reduce(lambda x,y: x+y, positive_num) \/ len( positive_num )<\/pre>\n<p>C++11\u73a9\u7684\u6cd5\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;numeric&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nvector num {2, -5, 9, 7, -2, 5, 3, 1, 0, -3, 8};\nvector p_num;\ncopy_if(num.begin(), num.end(), back_inserter(p_num), [](int i){ return (i&gt;0);} );\nint average = accumulate(p_num.begin(), p_num.end(), 0) \/ p_num.size();\ncout &lt;&lt; \"averge: \" &lt;&lt; average &lt;&lt; endl;<\/pre>\n<p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u51fd\u6570\u5f0f\u7f16\u7a0b\u6709\u5982\u4e0b\u597d\u5904\uff1a<\/p>\n<p style=\"padding-left: 30px;\">1\uff09\u4ee3\u7801\u66f4\u7b80\u5355\u4e86\u3002<br \/>\n2\uff09\u6570\u636e\u96c6\uff0c\u64cd\u4f5c\uff0c\u8fd4\u56de\u503c\u90fd\u653e\u5230\u4e86\u4e00\u8d77\u3002<br \/>\n3\uff09\u4f60\u5728\u8bfb\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4e86\u5faa\u73af\u4f53\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u5c11\u4e86\u4e9b\u4e34\u65f6\u53d8\u91cf\uff0c\u4ee5\u53ca\u53d8\u91cf\u5012\u6765\u5012\u53bb\u903b\u8f91\u3002<br \/>\n4\uff09\u4f60\u7684\u4ee3\u7801\u53d8\u6210\u4e86\u5728\u63cf\u8ff0\u4f60\u8981\u5e72\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u600e\u4e48\u53bb\u5e72\u3002<\/p>\n<p>\u6700\u540e\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0bMap\/Reduce\u8fd9\u6837\u7684\u51fd\u6570\u662f\u600e\u4e48\u6765\u5b9e\u73b0\u7684\uff08\u4e0b\u9762\u662fJavascript\u4ee3\u7801\uff09<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">\/\/map\u51fd\u6570\nvar map = function (mappingFunction, list) {\n    var result = [];\n    forEach(list, function (item) {\n        result.push(mappingFunction(item));\n    });\n    return result;\n};<\/pre>\n<p>\u4e0b\u9762\u662freduce\u51fd\u6570\u7684javascript\u5b9e\u73b0\uff08\u8c22\u8c22 <a href=\"http:\/\/weibo.com\/u\/1772898707\" target=\"_blank\" rel=\"noopener noreferrer\">@\u4e0b\u96e8\u5728\u5bb6<\/a> \u4fee\u6b63\u7684\u6211\u539f\u6765\u7684\u7b80\u5355\u7248\u672c\uff09<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">\/\/reduce\u51fd\u6570\nfunction reduce(actionFunction, list, initial){\n    var accumulate;\n    var temp;\n    if(initial){\n        accumulate = initial;\n    }else{\n        accumulate = list.shfit();\n    }\n    temp = list.shift();\n    while(temp){\n        accumulate = actionFunction(accumulate,temp);\n        temp = list.shift();\n    }\n    return accumulate;\n};<\/pre>\n<h4><span class=\"ez-toc-section\" id=\"Declarative_Programming_vs_Imperative_Programming\"><\/span>Declarative Programming vs Imperative Programming<span class=\"ez-toc-section-end\"><\/span><\/h4>\n<p>\u524d\u9762\u63d0\u5230\u8fc7\u591a\u6b21\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u5173\u6ce8\u7684\u662f\uff1adescribe what to do, rather than how to do it. \u4e8e\u662f\uff0c\u6211\u4eec\u628a\u4ee5\u524d\u7684\u8fc7\u7a0b\u5f0f\u7684\u7f16\u7a0b\u8303\u5f0f\u53eb\u505a <a href=\"http:\/\/en.wikipedia.org\/wiki\/Imperative_programming\" target=\"_blank\" rel=\"noopener noreferrer\">Imperative Programming<\/a> &#8211; \u6307\u4ee4\u5f0f\u7f16\u7a0b\uff0c\u800c\u628a\u51fd\u6570\u5f0f\u7684\u8fd9\u79cd\u8303\u5f0f\u53eb\u505a <a href=\"http:\/\/en.wikipedia.org\/wiki\/Declarative_programming\" target=\"_blank\" rel=\"noopener noreferrer\">Declarative Programming<\/a> &#8211; \u58f0\u660e\u5f0f\u7f16\u7a0b\u3002<\/p>\n<p>\u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e0b\u76f8\u5173\u7684\u793a\u4f8b\uff08\u672c\u793a\u4f8b\u6765\u81ea<a href=\"http:\/\/maryrosecook.com\/post\/a-practical-introduction-to-functional-programming\" target=\"_blank\" rel=\"noopener noreferrer\">\u8fd9\u7bc7\u6587\u7ae0<\/a> \uff09\u3002<\/p>\n<p>\u6bd4\u5982\uff0c\u6211\u4eec\u67093\u8f86\u8f66\u6bd4\u8d5b\uff0c\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5206\u522b\u7ed9\u8fd93\u8f86\u8f66\u670970%\u7684\u6982\u7387\u53ef\u4ee5\u5f80\u524d\u8d70\u4e00\u6b65\uff0c\u4e00\u5171\u67095\u6b21\u673a\u4f1a\uff0c\u6211\u4eec\u6253\u51fa\u6bcf\u4e00\u6b21\u8fd93\u8f86\u8f66\u7684\u524d\u884c\u72b6\u6001\u3002<\/p>\n<p>\u5bf9\u4e8eImperative Programming\u6765\u8bf4\uff0c\u4ee3\u7801\u5982\u4e0b\uff08Python\uff09\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">from random import random\n\ntime = 5\ncar_positions = [1, 1, 1]\n\nwhile time:\n    # decrease time\n    time -= 1\n\n    print ''\n    for i in range(len(car_positions)):\n        # move car\n        if random() &gt; 0.3:\n            car_positions[i] += 1\n\n        # draw car\n        print '-' * car_positions[i]<\/pre>\n<p>\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u4e24\u91cd\u5faa\u73af\u53d8\u6210\u4e00\u4e9b\u51fd\u6570\u6a21\u5757\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u6211\u4eec\u66f4\u5bb9\u6613\u5730\u9605\u8bfb\u4ee3\u7801\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">from random import random\ndef move_cars():\n    for i, _ in enumerate(car_positions):\n        if random() &gt; 0.3:\n            car_positions[i] += 1\ndef draw_car(car_position):\n    print '-' * car_position\ndef run_step_of_race():\n    global time\n    time -= 1\n    move_cars()\ndef draw():\n    print ''\n    for car_position in car_positions:\n        draw_car(car_position)\ntime = 5\ncar_positions = [1, 1, 1]\nwhile time:\n    run_step_of_race()\n    draw()<\/pre>\n<p>\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e3b\u5faa\u73af\u5f00\u59cb\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u770b\u5230\u7a0b\u5e8f\u7684\u4e3b\u5e72\uff0c\u56e0\u4e3a\u6211\u4eec\u628a\u7a0b\u5e8f\u7684\u903b\u8f91\u5206\u6210\u4e86\u51e0\u4e2a\u51fd\u6570\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u903b\u8f91\u4e5f\u4f1a\u53d8\u5f97\u51e0\u4e2a\u5c0f\u788e\u7247\uff0c\u4e8e\u662f\u6211\u4eec\u8bfb\u4ee3\u7801\u65f6\u8981\u8003\u8651\u7684\u4e0a\u4e0b\u6587\u5c31\u5c11\u4e86\u5f88\u591a\uff0c\u9605\u8bfb\u4ee3\u7801\u4e5f\u4f1a\u66f4\u5bb9\u6613\u3002\u4e0d\u50cf\u7b2c\u4e00\u4e2a\u793a\u4f8b\uff0c\u5982\u679c\u6ca1\u6709\u6ce8\u91ca\u548c\u8bf4\u660e\uff0c\u4f60\u8fd8\u662f\u9700\u8981\u82b1\u4e9b\u65f6\u95f4\u7406\u89e3\u4e00\u4e0b\u3002<strong>\u800c\u628a\u4ee3\u7801\u903b\u8f91\u5c01\u88c5\u6210\u4e86\u51fd\u6570\u540e\uff0c\u6211\u4eec\u5c31\u76f8\u5f53\u4e8e\u7ed9\u6bcf\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u7a0b\u5e8f\u903b\u8f91\u53d6\u4e86\u4e2a\u540d\u5b57\uff0c\u4e8e\u662f\u4ee3\u7801\u6210\u4e86\u81ea\u89e3\u91ca\u7684<\/strong>\u3002<\/p>\n<p>\u4f46\u662f\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u5c01\u88c5\u6210\u51fd\u6570\u540e\uff0c\u8fd9\u4e9b\u51fd\u6570\u90fd\u4f1a\u4f9d\u8d56\u4e8e\u5171\u4eab\u7684\u53d8\u91cf\u6765\u540c\u6b65\u5176\u72b6\u6001\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u5728\u8bfb\u4ee3\u7801\u7684\u8fc7\u7a0b\u65f6\uff0c\u6bcf\u5f53\u6211\u4eec\u8fdb\u5165\u5230\u51fd\u6570\u91cc\uff0c\u4e00\u91cf\u8bfb\u5230\u8bbf\u95ee\u4e86\u4e00\u4e2a\u5916\u90e8\u7684\u53d8\u91cf\uff0c\u6211\u4eec\u9a6c\u4e0a\u8981\u53bb\u67e5\u770b\u8fd9\u4e2a\u53d8\u91cf\u7684\u4e0a\u4e0b\u6587\uff0c\u7136\u540e\u8fd8\u8981\u5728\u5927\u8111\u91cc\u63a8\u6f14\u8fd9\u4e2a\u53d8\u91cf\u7684\u72b6\u6001\uff0c \u6211\u4eec\u624d\u77e5\u9053\u7a0b\u5e8f\u7684\u771f\u6b63\u903b\u8f91\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c<strong>\u8fd9\u4e9b\u51fd\u6570\u95f4\u5fc5\u9700\u77e5\u9053\u5176\u5b83\u51fd\u6570\u662f\u600e\u4e48\u4fee\u6539\u5b83\u4eec\u4e4b\u95f4\u7684\u5171\u4eab\u53d8\u91cf\u7684\uff0c\u6240\u4ee5\uff0c\u8fd9\u4e9b\u51fd\u6570\u662f\u6709\u72b6\u6001\u7684<\/strong>\u3002<\/p>\n<p>\u6211\u4eec\u77e5\u9053\uff0c\u6709\u72b6\u6001\u5e76\u4e0d\u662f\u4e00\u4ef6\u5f88\u597d\u7684\u4e8b\u60c5\uff0c\u65e0\u8bba\u662f\u5bf9\u4ee3\u7801\u91cd\u7528\uff0c\u8fd8\u662f\u5bf9\u4ee3\u7801\u7684\u5e76\u884c\u6765\u8bf4\uff0c\u90fd\u662f\u6709\u526f\u4f5c\u7528\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u60f3\u4e2a\u65b9\u6cd5\u628a\u8fd9\u4e9b\u72b6\u6001\u641e\u6389\uff0c\u4e8e\u662f\u51fa\u73b0\u4e86\u6211\u4eec\u7684 Functional Programming \u7684\u7f16\u7a0b\u8303\u5f0f\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u6765\u770b\u770b\u51fd\u6570\u5f0f\u7684\u65b9\u5f0f\u5e94\u8be5\u600e\u4e48\u5199\uff1f<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">from random import random\n\ndef move_cars(car_positions):\n    return map(lambda x: x + 1 if random() &gt; 0.3 else x,\n               car_positions)\n\ndef output_car(car_position):\n    return '-' * car_position\n\ndef run_step_of_race(state):\n    return {'time': state['time'] - 1,\n            'car_positions': move_cars(state['car_positions'])}\n\ndef draw(state):\n    print ''\n    print '\\n'.join(map(output_car, state['car_positions']))\n\ndef race(state):\n    draw(state)\n    if state['time']:\n        race(run_step_of_race(state))\n\nrace({'time': 5,\n      'car_positions': [1, 1, 1]})<\/pre>\n<p>\u4e0a\u9762\u7684\u4ee3\u7801\u4f9d\u7136\u628a\u7a0b\u5e8f\u7684\u903b\u8f91\u5206\u6210\u4e86\u51fd\u6570\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u51fd\u6570\u90fd\u662ffunctional\u7684\u3002\u56e0\u4e3a\u5b83\u4eec\u6709\u4e09\u4e2a\u75c7\u72b6\uff1a<\/p>\n<p style=\"padding-left: 30px;\">1\uff09\u5b83\u4eec\u4e4b\u95f4\u6ca1\u6709\u5171\u4eab\u7684\u53d8\u91cf\u3002<br \/>\n2\uff09\u51fd\u6570\u95f4\u901a\u8fc7\u53c2\u6570\u548c\u8fd4\u56de\u503c\u6765\u4f20\u9012\u6570\u636e\u3002<br \/>\n3\uff09\u5728\u51fd\u6570\u91cc\u6ca1\u6709\u4e34\u65f6\u53d8\u91cf\u3002<\/p>\n<p>\u6211\u4eec\u8fd8\u53ef\u4ee5\u770b\u5230\uff0cfor\u5faa\u73af\u88ab\u9012\u5f52\u53d6\u4ee3\u4e86\uff08\u89c1race\u51fd\u6570\uff09\u2014\u2014 \u9012\u5f52\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u5e26\u7528\u5230\u7684\u6280\u672f\uff0c\u6b63\u5982\u524d\u9762\u6240\u8bf4\u7684\uff0c\u9012\u5f52\u7684\u672c\u8d28\u5c31\u662f\u63cf\u8ff0\u95ee\u9898\u662f\u4ec0\u4e48\u3002<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-10900\" src=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/forrest-gump.jpg\" alt=\"\" width=\"490\" height=\"382\" srcset=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/forrest-gump.jpg 490w, https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/forrest-gump-300x233.jpg 300w\" sizes=\"(max-width: 490px) 100vw, 490px\" \/><\/p>\n<h4><span class=\"ez-toc-section\" id=\"Pipeline\"><\/span>Pipeline<span class=\"ez-toc-section-end\"><\/span><\/h4>\n<p>pipeline \u7ba1\u9053\u501f\u9274\u4e8eUnix Shell\u7684\u7ba1\u9053\u64cd\u4f5c\u2014\u2014\u628a\u82e5\u5e72\u4e2a\u547d\u4ee4\u4e32\u8d77\u6765\uff0c\u524d\u9762\u547d\u4ee4\u7684\u8f93\u51fa\u6210\u4e3a\u540e\u9762\u547d\u4ee4\u7684\u8f93\u5165\uff0c\u5982\u6b64\u5b8c\u6210\u4e00\u4e2a\u6d41\u5f0f\u8ba1\u7b97\u3002\uff08\u6ce8\uff1a\u7ba1\u9053\u7edd\u5bf9\u662f\u4e00\u4e2a\u4f1f\u5927\u7684\u53d1\u660e\uff0c\u4ed6\u7684\u8bbe\u54f2\u5b66\u5c31\u662fKISS &#8211; \u8ba9\u6bcf\u4e2a\u529f\u80fd\u5c31\u505a\u4e00\u4ef6\u4e8b\uff0c\u5e76\u628a\u8fd9\u4ef6\u4e8b\u505a\u5230\u6781\u81f4\uff0c\u8f6f\u4ef6\u6216\u7a0b\u5e8f\u7684\u62fc\u88c5\u4f1a\u53d8\u5f97\u66f4\u4e3a\u7b80\u5355\u548c\u76f4\u89c2\u3002\u8fd9\u4e2a\u8bbe\u8ba1\u7406\u5ff5\u5f71\u54cd\u975e\u5e38\u6df1\u8fdc\uff0c\u5305\u62ec\u4eca\u5929\u7684Web Service\uff0c\u4e91\u8ba1\u7b97\uff0c\u4ee5\u53ca\u5927\u6570\u636e\u7684\u6d41\u5f0f\u8ba1\u7b97\u7b49\u7b49\uff09<\/p>\n<p>\u6bd4\u5982\uff0c\u6211\u4eec\u5982\u4e0b\u7684shell\u547d\u4ee4\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">ps auwwx | awk '{print $2}' | sort -n | xargs echo<\/pre>\n<p>\u5982\u679c\u6211\u4eec\u62bd\u8c61\u6210\u51fd\u6570\u5f0f\u7684\u8bed\u8a00\uff0c\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"c\">xargs( echo, sort(n, awk('print $2', ps(auwwx))) )<\/pre>\n<p>\u4e5f\u53ef\u4ee5\u7c7b\u4f3c\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">pids = for_each(result, [ps_auwwx, awk_p2, sort_n, xargs_echo])<\/pre>\n<p>\u597d\u4e86\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684Pipeline\u600e\u4e48\u73a9\uff1f<\/p>\n<p>\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u5982\u4e0b\u7684\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u7684process()\u6709\u4e09\u4e2a\u6b65\u9aa4\uff1a<\/p>\n<p style=\"padding-left: 30px;\">1\uff09\u627e\u51fa\u5076\u6570\u3002<br \/>\n2\uff09\u4e58\u4ee53<br \/>\n3\uff09\u8f6c\u6210\u5b57\u7b26\u4e32\u8fd4\u56de<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">def process(num):\n    # filter out non-evens\n    if num % 2 != 0:\n        return\n    num = num * 3\n    num = 'The Number: %s' % num\n    return num\n\nnums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nfor num in nums:\n    print process(num)\n\n# \u8f93\u51fa\uff1a\n# None\n# The Number: 6\n# None\n# The Number: 12\n# None\n# The Number: 18\n# None\n# The Number: 24\n# None\n# The Number: 30<\/pre>\n<p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8f93\u51fa\u7684\u5e76\u4e0d\u591f\u5b8c\u7f8e\uff0c\u53e6\u5916\uff0c\u4ee3\u7801\u9605\u8bfb\u4e0a\u5982\u679c\u6ca1\u6709\u6ce8\u91ca\uff0c\u4f60\u4e5f\u4f1a\u6bd4\u8f83\u6655\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u6765\u770b\u770b\u51fd\u6570\u5f0f\u7684pipeline\uff08\u7b2c\u4e00\u79cd\u65b9\u5f0f\uff09\u5e94\u8be5\u600e\u4e48\u5199\uff1f<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">def even_filter(nums):\n    for num in nums:\n        if num % 2 == 0:\n            yield num\ndef multiply_by_three(nums):\n    for num in nums:\n        yield num * 3\ndef convert_to_string(nums):\n    for num in nums:\n        yield 'The Number: %s' % num\n\nnums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\npipeline = convert_to_string(multiply_by_three(even_filter(nums)))\nfor num in pipeline:\n    print num\n# \u8f93\u51fa\uff1a\n# The Number: 6\n# The Number: 12\n# The Number: 18\n# The Number: 24\n# The Number: 30<\/pre>\n<p>\u6211\u4eec\u52a8\u7528\u4e86Python\u7684\u5173\u952e\u5b57 yield\uff0c\u8fd9\u4e2a\u5173\u952e\u5b57\u4e3b\u8981\u662f\u8fd4\u56de\u4e00\u4e2aGenerator\uff0cyield \u662f\u4e00\u4e2a\u7c7b\u4f3c return \u7684\u5173\u952e\u5b57\uff0c\u53ea\u662f\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u7684\u662f\u4e2aGenerator-\u751f\u6210\u5668\u3002\u6240\u8c13\u751f\u6210\u5668\u7684\u610f\u601d\u662f\uff0cyield\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\uff0c\u5e76\u6ca1\u6709\u771f\u6b63\u7684\u6267\u884c\u51fd\u6570\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709\u5176\u8fd4\u56de\u7684\u8fed\u4ee3\u5bf9\u8c61\u88ab\u771f\u6b63\u8fed\u4ee3\u65f6\uff0cyield\u51fd\u6570\u624d\u4f1a\u6b63\u771f\u7684\u8fd0\u884c\uff0c\u8fd0\u884c\u5230yield\u8bed\u53e5\u65f6\u5c31\u4f1a\u505c\u4f4f\uff0c\u7136\u540e\u7b49\u4e0b\u4e00\u6b21\u7684\u8fed\u4ee3\u3002\uff08\u8fd9\u4e2a\u662f\u4e2a\u6bd4\u8f83\u8be1\u5f02\u7684\u5173\u952e\u5b57\uff09\u8fd9\u5c31\u662flazy evluation\u3002<\/p>\n<p>\u597d\u4e86\uff0c\u6839\u636e\u524d\u9762\u7684\u539f\u5219\u2014\u2014\u201c<strong>\u4f7f\u7528Map &amp; Reduce\uff0c\u4e0d\u8981\u4f7f\u7528\u5faa\u73af<\/strong>\u201d\uff0c\u90a3\u6211\u4eec\u7528\u6bd4\u8f83\u7eaf\u6734\u7684Map &amp; Reduce\u5427\u3002<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">def even_filter(nums):\n    return filter(lambda x: x%2==0, nums)\n\ndef multiply_by_three(nums):\n    return map(lambda x: x*3, nums)\n\ndef convert_to_string(nums):\n    return map(lambda x: 'The Number: %s' % x,  nums)\n\nnums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\npipeline = convert_to_string(\n               multiply_by_three(\n                   even_filter(nums)\n               )\n            )\nfor num in pipeline:\n    print num<\/pre>\n<p>\u4f46\u662f\u4ed6\u4eec\u7684\u4ee3\u7801\u9700\u8981\u5d4c\u5957\u4f7f\u7528\u51fd\u6570\uff0c\u8fd9\u4e2a\u6709\u70b9\u4e0d\u723d\uff0c\u5982\u679c\u6211\u4eec\u80fd\u50cf\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\u5c31\u597d\u4e86\uff08\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff09\u3002<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">pipeline_func(nums, [even_filter,\n                     multiply_by_three,\n                     convert_to_string])<\/pre>\n<p>\u90a3\u4e48\uff0cpipeline_func \u5b9e\u73b0\u5982\u4e0b\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">def pipeline_func(data, fns):\n    return reduce(lambda a, x: x(a),\n                  fns,\n                  data)<\/pre>\n<p>\u597d\u4e86\uff0c\u5728\u8bfb\u8fc7\u8fd9\u4e48\u591a\u7684\u7a0b\u5e8f\u540e\uff0c\u4f60\u53ef\u4ee5\u56de\u5934\u770b\u4e00\u4e0b\u8fd9\u7bc7\u6587\u7ae0\u7684\u5f00\u5934\u5bf9\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u63cf\u8ff0\uff0c\u53ef\u80fd\u4f60\u5c31\u66f4\u6709\u611f\u89c9\u4e86\u3002<\/p>\n<p>\u6700\u540e\uff0c<span style=\"color: #cc0000;\"><strong>\u6211\u5e0c\u671b\u8fd9\u7bc7\u6d45\u663e\u6613\u61c2\u7684\u6587\u7ae0\u80fd\u8ba9\u4f60\u611f\u53d7\u5230\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u601d\u60f3\uff0c\u5c31\u50cfOO\u7f16\u7a0b\uff0c\u6cdb\u578b\u7f16\u7a0b\uff0c\u8fc7\u7a0b\u5f0f\u7f16\u7a0b\u4e00\u6837\uff0c\u6211\u4eec\u4e0d\u7528\u592a\u7ea0\u7ed3\u662f\u4e0d\u662f\u6211\u4eec\u7684\u7a0b\u5e8f\u5c31\u662fOO\uff0c\u5c31\u662ffunctional\u7684\uff0c\u6211\u4eec\u91cd\u8981\u7684\u54c1\u5473\u5176\u4e2d\u7684\u5473\u9053<\/strong><\/span>\u3002<\/p>\n<h4><span class=\"ez-toc-section\" id=\"%E5%8F%82%E8%80%83\"><\/span>\u53c2\u8003<span class=\"ez-toc-section-end\"><\/span><\/h4>\n<ul>\n<li>Wikipedia: <a href=\"http:\/\/en.wikipedia.org\/wiki\/Functional_programming\" target=\"_blank\" rel=\"noopener noreferrer\">Functional Programming<\/a><\/li>\n<li><a href=\"http:\/\/stackoverflow.com\/questions\/5226055\/truly-understanding-the-difference-between-procedural-and-functional\" target=\"_blank\" rel=\"noopener noreferrer\">truly understanding the difference between procedural and functional<\/a><\/li>\n<li><a style=\"line-height: 1.5em;\" href=\"http:\/\/maryrosecook.com\/post\/a-practical-introduction-to-functional-programming\" target=\"_blank\" rel=\"bookmark noopener noreferrer\">A practical introduction to functional programming<\/a><\/li>\n<li><a href=\"http:\/\/stackoverflow.com\/q\/23277\/211232\" target=\"_blank\" rel=\"noopener noreferrer\">What is the difference between procedural programming and functional programming?<\/a><\/li>\n<li><a href=\"http:\/\/stackoverflow.com\/q\/3249863\/211232\" target=\"_blank\" rel=\"noopener noreferrer\">Can someone give me examples of functional programming vs imperative\/procedural programming?<\/a><\/li>\n<li><a href=\"http:\/\/stackoverflow.com\/q\/552336\/211232\" target=\"_blank\" rel=\"noopener noreferrer\">OOP vs Functional Programming vs Procedural<\/a><\/li>\n<li>Python &#8211;\u00a0<a href=\"http:\/\/docs.python.org\/2\/howto\/functional.html#\" target=\"_blank\" rel=\"noopener noreferrer\">Functional Programming HOWTO<\/a><\/li>\n<\/ul>\n<p><strong>\u8865\u5145<\/strong>\uff1a\u8bc4\u8bba\u4e2d<a title=\"redraiment\" href=\"http:\/\/weibo.com\/redraiment\">redraiment<\/a>\u7684<a href=\"https:\/\/coolshell.cn\/articles\/10822.html#comment-1111518\">\u8fd9\u4e2a\u8bc4\u8bba<\/a>\u5927\u5bb6\u4e5f\u53ef\u4ee5\u8bfb\u4e00\u8bfb\u3002<\/p>\n<p>\u611f\u8c22\u8c22\u7f51\u53cbS142857 \u63d0\u4f9b\u7684shell\u98ce\u683c\u7684python pipeline\uff1a<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">class Pipe(object):\n    def __init__(self, func):\n        self.func = func\n\n    def __ror__(self, other):\n        def generator():\n            for obj in other:\n                if obj is not None:\n                    yield self.func(obj)\n        return generator()\n\n@Pipe\ndef even_filter(num):\n    return num if num % 2 == 0 else None\n\n@Pipe\ndef multiply_by_three(num):\n    return num*3\n\n@Pipe\ndef convert_to_string(num):\n    return 'The Number: %s' % num\n\n@Pipe\ndef echo(item):\n    print item\n    return item\n\ndef force(sqs):\n    for item in sqs: pass\n\nnums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nforce(nums | even_filter | multiply_by_three | convert_to_string | echo)<\/pre>\n<p>\uff08\u5168\u6587\u5b8c\uff09<\/p>\n","raw":"","protected":false},"excerpt":{"rendered":"<p>\u5f53\u6211\u4eec\u8bf4\u8d77\u51fd\u6570\u5f0f\u7f16\u7a0b\u6765\u8bf4\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u5982\u4e0b\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u957f\u76f8\uff1a \u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u4e09\u5927\u7279\u6027\uff1a immutable data \u4e0d\u53ef\u53d8\u6570\u636e\uff1a\u50cfClojure\u4e00\u6837\uff0c\u9ed8\u8ba4\u4e0a\u53d8\u91cf\u662f&#8230;<\/p>\n<p class=\"read-more\"><a class=\"btn btn-default\" href=\"https:\/\/coolshell.cn\/articles\/10822.html\"> Read More<span class=\"screen-reader-text\">  Read More<\/span><\/a><\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[33,23,3],"tags":[696,114,791,697],"series":[],"aioseo_notices":[],"views":215364,"post_thumbnail_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/yoda-lambda.png","content_first_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/yoda-lambda.png","post_medium_image_300":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/yoda-lambda.png","post_thumbnail_image_624":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/yoda-lambda.png","post_frist_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/yoda-lambda.png","post_medium_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/yoda-lambda.png","post_large_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/yoda-lambda.png","post_full_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/yoda-lambda.png","post_all_images":[{"imagesurl":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/yoda-lambda-204x300.png","id":"image0"},{"imagesurl":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/12\/forrest-gump.jpg","id":"image1"}],"videoAdId":"","listAd":"0","listAdId":"","listAdEvery":5,"total_comments":194,"category_name":"Python","post_date":"2013-12-27","like_count":"0","praiseWord":"\u9f13\u52b1","excitationAd":"0","rewardedVideoAdId":"","detailAdId":"","detailAd":"0","enterpriseMinapp":"0","audios":[],"postImageUrl":"http:\/\/coolshell.cn\/wp-content\/uploads\/2016\/09\/coolshell-360x200.jpg","avatarurls":[],"related_posts":[],"pageviews":215365,"pageviews_wl":187658,"ratings_average":4,"ratings_total":405,"ratings_users":88,"next_post_id":10910,"next_post_title":"\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u4e8b\u52a1\u5904\u7406","previous_post_id":10739,"previous_post_title":"Lua\u7b80\u660e\u6559\u7a0b"}