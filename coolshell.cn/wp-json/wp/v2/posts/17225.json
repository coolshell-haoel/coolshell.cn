{"id":17225,"date":"2015-09-02T09:18:54","date_gmt":"2015-09-02T01:18:54","guid":{"rendered":"http:\/\/coolshell.cn\/?p=17225"},"modified":"2015-09-02T11:20:38","modified_gmt":"2015-09-02T03:20:38","slug":"cuckoo-filter%ef%bc%9a%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0","status":"publish","type":"post","link":"https:\/\/coolshell.cn\/articles\/17225.html","title":{"rendered":"Cuckoo Filter\uff1a\u8bbe\u8ba1\u4e0e\u5b9e\u73b0"},"content":{"rendered":"<p><strong>\uff08\u611f\u8c22\u7f51\u53cb\u00a0<\/strong><a href=\"http:\/\/weibo.com\/fullofbull\" target=\"_blank\"><strong>@\u6211\u7684\u4e0a\u94fa\u53eb\u8def\u9065<\/strong><\/a><strong>\u00a0\u6295\u7a3f\uff09<\/strong><\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"alignright wp-image-17243 size-medium\" src=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo-300x164.jpg\" alt=\"\" width=\"300\" height=\"164\" srcset=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo-300x164.jpg 300w, https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo.jpg 400w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/p>\n<p>\u5bf9\u4e8e\u6d77\u91cf\u6570\u636e\u5904\u7406\u4e1a\u52a1\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u7d22\u5f15\u6570\u636e\u7ed3\u6784\uff0c\u7528\u6765\u5e2e\u52a9\u67e5\u8be2\uff0c\u5feb\u901f\u5224\u65ad\u6570\u636e\u8bb0\u5f55\u662f\u5426\u5b58\u5728\uff0c\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u901a\u5e38\u53c8\u53eb\u8fc7\u6ee4\u5668(filter)\u3002\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u573a\u666f\uff0c\u4e0a\u7f51\u7684\u65f6\u5019\u9700\u8981\u5728\u6d4f\u89c8\u5668\u4e0a\u8f93\u5165URL\uff0c\u8fd9\u65f6\u6d4f\u89c8\u5668\u9700\u8981\u53bb\u5224\u65ad\u8fd9\u662f\u5426\u4e00\u4e2a\u6076\u610f\u7684\u7f51\u7ad9\uff0c\u5b83\u5c06\u5bf9\u672c\u5730\u7f13\u5b58\u7684\u6210\u5343\u4e0a\u4e07\u7684URL\u7d22\u5f15\u8fdb\u884c\u8fc7\u6ee4\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5c31\u653e\u884c\uff0c\u5982\u679c\uff08\u53ef\u80fd\uff09\u5b58\u5728\uff0c\u5219\u5411\u8fdc\u7a0b\u670d\u52a1\u7aef\u53d1\u8d77\u9a8c\u8bc1\u8bf7\u6c42\uff0c\u5e76\u56de\u9988\u5ba2\u6237\u7aef\u7ed9\u51fa\u8b66\u544a\u3002<\/p>\n<p>\u7d22\u5f15\u7684\u5b58\u50a8\u53c8\u5206\u4e3a\u6709\u5e8f\u548c\u65e0\u5e8f\uff0c\u524d\u8005\u4f7f\u7528\u5173\u8054\u5f0f\u5bb9\u5668\uff0c\u6bd4\u5982B\u6811\uff0c\u540e\u8005\u4f7f\u7528\u54c8\u5e0c\u7b97\u6cd5\u3002\u8fd9\u4e24\u7c7b\u7b97\u6cd5\u5404\u6709\u4f18\u52a3\uff1a\u6bd4\u5982\uff0c\u5173\u8054\u5f0f\u5bb9\u5668\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9aO(logN)\uff0c\u4e14\u652f\u6301\u8303\u56f4\u67e5\u8be2\uff1b\u53c8\u6bd4\u5982\u54c8\u5e0c\u7b97\u6cd5\u7684\u67e5\u8be2\u3001\u589e\u5220\u90fd\u6bd4\u8f83\u5febO(1)\uff0c\u4f46\u8fd9\u662f\u5728\u7406\u60f3\u72b6\u6001\u4e0b\u7684\u60c5\u5f62\uff0c\u9047\u5230\u78b0\u649e\u4e25\u91cd\u7684\u60c5\u51b5\uff0c\u54c8\u5e0c\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u9000\u5316\u5230O(n)\u3002\u56e0\u6b64\uff0c\u9009\u62e9\u4e00\u4e2a\u597d\u7684\u54c8\u5e0c\u7b97\u6cd5\u662f\u5f88\u91cd\u8981\u7684\u3002<\/p>\n<p>\u65f6\u4e0b\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u54c8\u5e0c\u7d22\u5f15\u7ed3\u6784\u5c31\u662f<strong><a href=\"https:\/\/en.wikipedia.org\/wiki\/Bloom_filter\" target=\"_blank\">bloom filter<\/a><\/strong>\uff0c\u5b83\u7c7b\u4f3c\u4e8ebitmap\u8fd9\u6837\u7684hashset\uff0c\u6240\u4ee5\u7a7a\u95f4\u5229\u7528\u7387\u5f88\u9ad8\u3002\u5176\u72ec\u7279\u7684\u5730\u65b9\u5728\u4e8e\u5b83\u4f7f\u7528\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570\u6765\u907f\u514d\u54c8\u5e0c\u78b0\u649e\uff0c\u5982\u56fe\u6240\u793a\uff08<a href=\"https:\/\/en.wikipedia.org\/wiki\/Bloom_filter\" target=\"_blank\">\u6765\u6e90wikipedia<\/a>\uff09\uff0cbit\u6570\u7ec4\u521d\u59cb\u5316\u4e3a\u51680\uff0c\u63d2\u5165x\u65f6\uff0cx\u88ab3\u4e2a\u54c8\u5e0c\u51fd\u6570\u5206\u522b\u6620\u5c04\u52303\u4e2a\u4e0d\u540c\u7684bit\u4f4d\u4e0a\u5e76\u7f6e1\uff0c\u67e5\u8be2x\u65f6\uff0c\u53ea\u6709\u88ab\u8fd93\u4e2a\u51fd\u6570\u6620\u5c04\u5230\u7684bit\u4f4d\u5168\u90e8\u662f1\u624d\u80fd\u8bf4\u660ex\u53ef\u80fd\u5b58\u5728\uff0c\u4f46\u51e1\u81f3\u5c11\u51fa\u73b0\u4e00\u4e2a0\u8868\u793ax\u80af\u5b9a\u4e0d\u5b58\u5728\u3002<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-17242\" src=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/Bloom_filter.png\" alt=\"Bloom_filter\" width=\"649\" height=\"233\" srcset=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/Bloom_filter.png 649w, https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/Bloom_filter-300x108.png 300w\" sizes=\"(max-width: 649px) 100vw, 649px\" \/><\/p>\n<p><!--more--><\/p>\n<p>\u4f46\u662f\uff0cbloom filter\u7684\u8fd9\u79cd\u4f4d\u56fe\u6a21\u5f0f\u5e26\u6765\u4e24\u4e2a\u95ee\u9898\uff1a\u4e00\u4e2a\u662f<strong>\u8bef\u62a5\uff08false positives\uff09<\/strong>\uff0c\u5728\u67e5\u8be2\u65f6\u80fd\u63d0\u4f9b\u201c\u4e00\u5b9a\u4e0d\u5b58\u5728\u201d\uff0c\u4f46\u53ea\u80fd\u63d0\u4f9b\u201c\u53ef\u80fd\u5b58\u5728\u201d\uff0c\u56e0\u4e3a\u5b58\u5728\u5176\u5b83\u5143\u7d20\u88ab\u6620\u5c04\u5230\u90e8\u5206\u76f8\u540cbit\u4f4d\u4e0a\uff0c\u5bfc\u81f4\u8be5\u4f4d\u7f6e1\uff0c\u90a3\u4e48\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u5143\u7d20\u53ef\u80fd\u4f1a\u88ab\u8bef\u62a5\u6210\u5b58\u5728\uff1b\u53e6\u4e00\u4e2a\u662f<strong>\u6f0f\u62a5\uff08false nagatives\uff09<\/strong>\uff0c\u540c\u6837\u9053\u7406\uff0c\u5982\u679c\u5220\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\uff0c\u5bfc\u81f4\u8be5\u6620\u5c04bit\u4f4d\u88ab\u7f6e0\uff0c\u90a3\u4e48\u672c\u6765\u5b58\u5728\u7684\u5143\u7d20\u4f1a\u88ab\u6f0f\u62a5\u6210\u4e0d\u5b58\u5728\u3002\u7531\u4e8e\u540e\u8005\u95ee\u9898\u4e25\u91cd\u5f97\u591a\uff0c\u6240\u4ee5bloom filter\u5fc5\u987b\u786e\u4fdd\u201cdefinitely no\u201d\u4ece\u800c\u5bb9\u5fcd\u201cprobably yes\u201d\uff0c\u4e0d\u5141\u8bb8\u5143\u7d20\u7684\u5220\u9664\u3002<\/p>\n<p>\u5173\u4e8e\u5143\u7d20\u5220\u9664\u7684\u95ee\u9898\uff0c\u4e00\u4e2a\u6539\u826f\u65b9\u6848\u662f\u5bf9bloom filter\u5f15\u5165\u8ba1\u6570\uff0c\u4f46\u8fd9\u6837\u4e00\u6765\uff0c\u539f\u6765\u6bcf\u4e2abit\u7a7a\u95f4\u5c31\u8981\u6269\u5f20\u6210\u4e00\u4e2a\u8ba1\u6570\u503c\uff0c\u7a7a\u95f4\u6548\u7387\u4e0a\u53c8\u964d\u4f4e\u4e86\u3002<\/p>\n<h4>Cuckoo Hashing<\/h4>\n<p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u672c\u6587\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u54c8\u5e0c\u7b97\u6cd5\u2014\u2014<strong>cuckoo filter<\/strong>\uff0c\u5b83\u65e2\u53ef\u4ee5\u786e\u4fdd\u8be5\u5143\u7d20\u5b58\u5728\u7684\u5fc5\u7136\u6027\uff0c\u53c8\u53ef\u4ee5\u5728\u4e0d\u8fdd\u80cc\u6b64\u524d\u63d0\u4e0b\u5220\u9664\u4efb\u610f\u5143\u7d20\uff0c\u4ec5\u4ec5\u6bd4bitmap\u727a\u7272\u4e86\u5fae\u91cf\u7a7a\u95f4\u6548\u7387\u3002\u5148\u8bf4\u660e\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u7684\u601d\u60f3\u6765\u6e90\u662f\u4e00\u7bc7<a href=\"http:\/\/www.cs.cmu.edu\/~binfan\/papers\/conext14_cuckoofilter.pdf\" target=\"_blank\">CMU\u8bba\u6587<\/a>\uff0c\u7b14\u8005\u6309\u7167\u5176\u601d\u8def\u7528C\u8bed\u8a00\u505a\u4e86\u4e00\u4e2a\u7b80\u5355\u5b9e\u73b0\uff08<a href=\"https:\/\/github.com\/begeekmyfriend\/CuckooFilter\" target=\"_blank\">Github<\/a>\uff09\uff0c\u9644\u4e0a\u5bf9\u4e00\u6bb5\u6587\u672c\u6570\u636e\u8fdb\u884c\u5bfc\u5165\u5bfc\u51fa\u7684\u6b63\u786e\u6027\u6d4b\u8bd5\u3002<\/p>\n<p>\u63a5\u4e0b\u6765\u6211\u4f1a\u7ed3\u5408\u81ea\u5df1\u7684\u793a\u4f8b\u4ee3\u7801\u8bb2\u89e3\u54c8\u5e0c\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002\u6211\u4eec\u5148\u6765\u770b\u770bcuckoo hashing\u6709\u4ec0\u4e48\u7279\u70b9\uff0c\u5b83\u7684\u54c8\u5e0c\u51fd\u6570\u662f\u6210\u5bf9\u7684\uff08\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u8bbe\u8ba1\uff09\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e24\u4e2a\uff0c\u5206\u522b\u6620\u5c04\u5230\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u662f\u8bb0\u5f55\u7684\u4f4d\u7f6e\uff0c\u53e6\u4e00\u4e2a\u662f\u5907\u7528\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u5907\u7528\u4f4d\u7f6e\u662f\u5904\u7406\u78b0\u649e\u65f6\u7528\u7684\uff0c\u8fd9\u5c31\u8981\u8bf4\u5230cuckoo\u8fd9\u4e2a\u540d\u8bcd\u7684\u5178\u6545\u4e86\uff0c\u4e2d\u6587\u540d\u53eb\u5e03\u8c37\u9e1f\uff0c\u8fd9\u79cd\u9e1f\u6709\u4e00\u79cd\u5373\u72e1\u733e\u53c8\u8d2a\u5a6a\u7684\u4e60\u6027\uff0c\u5b83\u4e0d\u80af\u81ea\u5df1\u7b51\u5de2\uff0c\u800c\u662f\u628a\u86cb\u4e0b\u5230\u522b\u7684\u9e1f\u5de2\u91cc\uff0c\u800c\u4e14\u5b83\u7684\u5e7c\u9e1f\u53c8\u4f1a\u6bd4\u522b\u7684\u9e1f\u65e9\u51fa\u751f\uff0c\u5e03\u8c37\u5e7c\u9e1f\u5929\u751f\u6709\u4e00\u79cd\u6b8b\u5fcd\u7684\u52a8\u4f5c\uff0c\u5e7c\u9e1f\u4f1a\u62fc\u547d\u628a\u672a\u51fa\u751f\u7684\u5176\u5b83\u9e1f\u86cb\u6324\u51fa\u7a9d\u5de2\uff0c\u4eca\u540e\u4ee5\u4fbf\u72ec\u4eab\u201c\u517b\u7236\u6bcd\u201d\u7684\u98df\u7269\u3002\u501f\u52a9\u751f\u7269\u5b66\u4e0a\u8fd9\u4e00\u5178\u6545\uff0ccuckoo hashing\u5904\u7406\u78b0\u649e\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u628a\u539f\u6765\u5360\u7528\u4f4d\u7f6e\u7684\u8fd9\u4e2a\u5143\u7d20\u8e22\u8d70\uff0c\u4e0d\u8fc7\u88ab\u8e22\u51fa\u53bb\u7684\u5143\u7d20\u8fd8\u8981\u6bd4\u9e1f\u86cb\u5e78\u8fd0\uff0c\u56e0\u4e3a\u5b83\u8fd8\u6709\u4e00\u4e2a\u5907\u7528\u4f4d\u7f6e\u53ef\u4ee5\u5b89\u7f6e\uff0c\u5982\u679c\u5907\u7528\u4f4d\u7f6e\u4e0a\u8fd8\u6709\u4eba\uff0c\u518d\u628a\u5b83\u8e22\u8d70\uff0c\u5982\u6b64\u5f80\u590d\u3002\u76f4\u5230\u88ab\u8e22\u7684\u6b21\u6570\u8fbe\u5230\u4e00\u4e2a\u4e0a\u9650\uff0c\u624d\u786e\u8ba4\u54c8\u5e0c\u8868\u5df2\u6ee1\uff0c\u5e76\u6267\u884crehash\u64cd\u4f5c\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff08<a href=\"http:\/\/codecapsule.com\/2013\/07\/20\/cuckoo-hashing\/\" target=\"_blank\">\u56fe\u7247\u6765\u6e90<\/a>\uff09\uff1a<\/p>\n<p><a href=\"http:\/\/codecapsule.com\/2013\/07\/20\/cuckoo-hashing\/\"><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-17244\" src=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo_preview.jpg\" alt=\"cuckoo_preview\" width=\"720\" height=\"326\" srcset=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo_preview.jpg 720w, https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo_preview-300x136.jpg 300w\" sizes=\"(max-width: 720px) 100vw, 720px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>\u6211\u4eec\u4e0d\u7981\u8981\u95ee\u53d1\u751f\u54c8\u5e0c\u78b0\u649e\u4e4b\u524d\u7684\u7a7a\u95f4\u5229\u7528\u7387\u662f\u591a\u5c11\u5462\uff1f\u4e0d\u5e78\u5730\u544a\u8bc9\u4f60\uff0c\u4e00\u7ef4\u6570\u7ec4\u7684\u54c8\u5e0c\u8868\u4e0a\u8ddf\u5176\u5b83\u54c8\u5e0c\u51fd\u6570\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u4e5f\u5c3150%\u800c\u5df2\u3002\u4f46\u5982\u679c\u662f\u4e8c\u7ef4\u7684\u5462\uff1f<\/p>\n<p>\u4e00\u4e2a\u6539\u8fdb\u7684\u54c8\u5e0c\u8868\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6bcf\u4e2a\u6876\uff08bucket\uff09\u67094\u8def\u69fd\u4f4d\uff08slot\uff09\u3002\u5f53\u54c8\u5e0c\u51fd\u6570\u6620\u5c04\u5230\u540c\u4e00\u4e2abucket\u4e2d\uff0c\u5728\u5176\u5b83\u4e09\u8defslot\u672a\u88ab\u586b\u6ee1\u4e4b\u524d\uff0c\u662f\u4e0d\u4f1a\u6709\u5143\u7d20\u88ab\u8e22\u7684\uff0c\u8fd9\u5927\u5927\u7f13\u51b2\u4e86\u78b0\u649e\u7684\u51e0\u7387\u3002\u7b14\u8005\u81ea\u5df1\u7684\u7b80\u5355\u5b9e\u73b0\u4e0a\u6d4b\u8fc7\uff0c\u91c7\u7528\u4e8c\u7ef4\u54c8\u5e0c\u8868\uff084\u8defslot\uff09\u5927\u7ea680%\u7684\u5360\u7528\u7387\uff08CMU\u8bba\u6587\u6570\u636e\u636e\u8bf4\u8fbe\u523090%\u4ee5\u4e0a\uff0c\u5e94\u8be5\u662f\u6269\u5927\u4e86slot\u5173\u8054\u6570\u76ee\u6240\u81f4\uff09\u3002<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter wp-image-17241\" src=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo-hashing-1024x392.png\" alt=\"cuckoo hashing\" width=\"650\" height=\"249\" srcset=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo-hashing-1024x392.png 1024w, https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo-hashing-300x115.png 300w, https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo-hashing-900x344.png 900w, https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo-hashing.png 1143w\" sizes=\"(max-width: 650px) 100vw, 650px\" \/><\/p>\n<h4>Cuckoo Filter\u8bbe\u8ba1\u4e0e\u5b9e\u73b0<\/h4>\n<p>cuckoo hashing\u7684\u539f\u7406\u4ecb\u7ecd\u5b8c\u4e86\uff0c\u4e0b\u9762\u5c31\u6765\u6f14\u793a\u4e00\u4e0b\u7b14\u8005\u81ea\u5df1\u5b9e\u73b0\u7684\u4e00\u4e2acuckoo filter\u5e94\u7528\uff0c\u7b80\u5355\u6613\u7528\u4e3a\u4e3b\uff0c\u4e0d\u5230500\u884cC\u4ee3\u7801\u3002\u5e94\u7528\u573a\u666f\u662f\u8fd9\u6837\u7684\uff1a\u5047\u8bbe\u6709\u4e00\u6bb5\u6587\u672c\u6570\u636e\uff0c\u6211\u4eec\u628a\u5b83\u901a\u8fc7cuckoo filter\u5bfc\u5165\u5230\u4e00\u4e2a\u865a\u62df\u7684flash\u4e2d\uff0c\u518d\u628a\u5b83\u5bfc\u51fa\u5230\u53e6\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u4e2d\u3002flash\u5b58\u50a8\u7684\u5355\u5143\u9875\u9762\u662f\u4e00\u4e2alog_entry\uff0c\u91cc\u9762\u5305\u542b\u4e86\u4e00\u5bf9key\/value\uff0cvalue\u5c31\u662f\u6587\u672c\u6570\u636e\uff0ckey\u5c31\u662f\u8fd9\u6bb5\u5927\u5c0f\u7684\u6570\u636e\u7684SHA1\u503c\uff08\u7167\u7406\u8bf4SHA1\u662f\u53ef\u4ee5\u901a\u8fc7\u6570\u636e\u6e90\u751f\u6210\uff0c\u6ca1\u5fc5\u8981\u5b58\u50a8\u5230flash\uff0c\u4f46\u8fd9\u91cc\u4e3b\u8981\u4e3a\u4e86\u6d4b\u8bd5\u800c\u6545\u610f\u8bbe\u8ba1\u7684\uff0c\u4e07\u4e00key\u548cvalue\u4e4b\u95f4\u6ca1\u6709\u63a8\u5bfc\u5173\u7cfb\u5462\uff09\u3002<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\n#define SECTOR_SIZE    (1 &lt;&lt; 10)\r\n#define DAT_LEN        (SECTOR_SIZE - 20)  \/* minus sha1 size *\/\r\n\r\n\/* The log entries store key-value pairs on flash and the\r\n * size of each entry is assumed just one sector fit.\r\n *\/\r\nstruct log_entry {\r\n        uint8_t sha1[20];\r\n        uint8_t data[DAT_LEN];\r\n};\r\n<\/pre>\n<p>\u987a\u4fbf\u8bf4\u660e\u4e00\u4e0bDAT_LEN\u8bbe\u7f6e\uff0c\u4e4b\u524d\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u865a\u62dfflash\uff08\u7528malloc\u6a21\u62df\u51fa\u6765\uff09\uff0c\u7531\u4e8eflash\u7684\u5355\u4f4d\u662f\u6309\u9875\u5927\u5c0fSECTOR_SIZE\u8bfb\u5199\uff0c\u8fd9\u91cc\u5047\u8bbe\u6bcf\u4e2alog_entry\u6b63\u597d\u4e00\u4e2a\u9875\u5927\u5c0f\uff0c\u5f53\u7136\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\u3002<\/p>\n<p>\u4ee5\u4e0a\u662fflash\u7684\u5b58\u50a8\u7ed3\u6784\uff0c\u81f3\u4e8e\u54c8\u5e0c\u8868\u91cc\u7684slot\u6709\u4e09\u4e2a\u6210\u5458tag\uff0cstatus\u548coffset\uff0c\u5206\u522b\u662f\u54c8\u5e0c\u503c\uff0c\u72b6\u6001\u503c\u548c\u5728flash\u7684\u504f\u79fb\u4f4d\u7f6e\u3002\u5176\u4e2dstatus\u6709\u4e09\u4e2a\u679a\u4e3e\u503c\uff1aAVAILIBLE\uff0cOCCUPIED\uff0cDELETED\uff0c\u5206\u522b\u8868\u793a\u8fd9\u4e2aslot\u662f\u7a7a\u95f2\u7684\uff0c\u5360\u7528\u7684\u8fd8\u662f\u88ab\u5220\u9664\u7684\u3002\u81f3\u4e8etag\uff0c\u6309\u7406\u8bf4\u5e94\u8be5\u6709\u4e24\u4e2a\u54c8\u5e0c\u503c\uff0c\u5bf9\u5e94\u4e24\u4e2a\u54c8\u5e0c\u51fd\u6570\uff0c\u4f46\u5176\u4e2d\u4e00\u4e2a\u5df2\u7ecf\u5bf9\u5e94bucket\u7684\u4f4d\u7f6e\u4e0a\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u4fdd\u5b58\u53e6\u4e00\u4e2a\u5907\u7528bucket\u7684\u4f4d\u7f6e\u5c31\u884c\u4e86\uff0c\u8fd9\u6837\u4e07\u4e00\u88ab\u8e22\uff0c\u53ea\u8981\u7528\u8fd9\u4e2atag\u5c31\u53ef\u4ee5\u627e\u5230\u5b83\u7684\u53e6\u4e00\u4e2a\u5b89\u8eab\u4e4b\u6240\u3002<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nenum { AVAILIBLE, OCCUPIED, DELETED, };\r\n\r\n\/* The in-memory hash bucket cache is to filter keys (which is assumed SHA1) via\r\n * cuckoo hashing function and map keys to log entries stored on flash.\r\n *\/\r\nstruct hash_slot_cache {\r\n        uint32_t tag : 30;  \/* summary of key *\/\r\n        uint32_t status : 2;  \/* FSM *\/\r\n        uint32_t offset;  \/* offset on flash memory *\/\r\n};\r\n<\/pre>\n<p>\u4e4d\u770b\u4e4b\u4e0bsize\u6709\u70b9\u5927\u662f\u5417\uff1f\u6ca1\u5173\u7cfb\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u8c03\u6574\u6570\u636e\u7c7b\u578b\u5927\u5c0f\uff0c\u6bd4\u5982uint16_t\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u4e3a\u4e86\u6d4b\u8bd5\u6b63\u786e\u6027\u3002<\/p>\n<p>\u81f3\u4e8e\u54c8\u5e0c\u8868\u4ee5\u53cabucket\u548cslot\u7684\u521b\u5efa\u89c1\u521d\u59cb\u5316\u4ee3\u7801\u3002buckets\u662f\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\uff0c\u6bcf\u4e2abucket\u6307\u54114\u4e2aslot\u5927\u5c0f\u7684\u7f13\u5b58\uff0c\u53734\u8defslot\uff0c\u90a3\u4e48bucket_num\u4e5f\u5c31\u662fslot_num\u76841\/4\u3002\u8fd9\u91cc\u6211\u4eec\u6545\u610f\u628aslot_num\u8c03\u5c0f\u4e86\u70b9\uff0c\u4e3a\u7684\u662f\u6d4b\u8bd5rehash\u7684\u53d1\u751f\u3002<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\n#define ASSOC_WAY  (4)  \/* 4-way association *\/\r\n\r\nstruct hash_table {\r\n    struct hash_slot_cache **buckets;\r\n    struct hash_slot_cache *slots;\r\n    uint32_t slot_num;\r\n    uint32_t bucket_num;\r\n};\r\n\r\nint cuckoo_filter_init(size_t size)\r\n{\r\n    ...\r\n    \/* Allocate hash slots *\/\r\n    hash_table.slot_num = nvrom_size \/ SECTOR_SIZE;\r\n    \/* Make rehashing happen *\/\r\n    hash_table.slot_num \/= 4;\r\n    hash_table.slots = calloc(hash_table.slot_num, sizeof(struct hash_slot_cache));\r\n    if (hash_table.slots == NULL) {\r\n        return -1;\r\n    }\r\n\r\n    \/* Allocate hash buckets associated with slots *\/\r\n    hash_table.bucket_num = hash_table.slot_num \/ ASSOC_WAY;\r\n    hash_table.buckets = malloc(hash_table.bucket_num * sizeof(struct hash_slot_cache *));\r\n    if (hash_table.buckets == NULL) {\r\n        free(hash_table.slots);\r\n        return -1;\r\n    }\r\n    for (i = 0; i &lt; hash_table.bucket_num; i++) {\r\n        hash_table.buckets[i] = &amp;hash_table.slots[i * ASSOC_WAY];\r\n    }\r\n}\r\n<\/pre>\n<p>\u4e0b\u9762\u662f\u54c8\u5e0c\u51fd\u6570\u7684\u8bbe\u8ba1\uff0c\u8fd9\u91cc\u6709\u4e24\u4e2a\uff0c\u524d\u9762\u63d0\u5230\u65e2\u7136key\u662f20\u5b57\u8282\u7684SHA1\u503c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u522b\u662f\u5bf9key\u7684\u4f4e32\u4f4d\u548c\u9ad832\u4f4d\u8fdb\u884c\u4f4d\u8fd0\u7b97\uff0c\u53ea\u8981bucket_num\u6ee1\u8db32\u7684\u5e42\u6b21\u65b9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06key\u7684\u4e00\u90e8\u5206\u540cbucket_num &#8211; 1\u76f8\u4e0e\uff0c\u5c31\u53ef\u4ee5\u5b9a\u4f4d\u5230\u76f8\u5e94\u7684bucket\u4f4d\u7f6e\u4e0a\uff0c\u6ce8\u610fbucket_num\u968f\u7740rehash\u800c\u589e\u5927\uff0c\u54c8\u5e0c\u51fd\u6570\u7b80\u5355\u7684\u597d\u5904\u662f\u6c42\u54c8\u5e0c\u503c\u5341\u5206\u5feb\u3002<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\n#define cuckoo_hash_lsb(key, count)  (((size_t *)(key))[0] &amp; (count - 1))\r\n#define cuckoo_hash_msb(key, count)  (((size_t *)(key))[1] &amp; (count - 1))\r\n<\/pre>\n<p>\u7ec8\u4e8e\u8981\u8bb2\u89e3cuckoo filter\u6700\u91cd\u8981\u7684\u4e09\u4e2a\u64cd\u4f5c\u4e86\u2014\u2014\u67e5\u8be2\u3001\u63d2\u5165\u8fd8\u6709\u5220\u9664\u3002\u67e5\u8be2\u64cd\u4f5c\u662f\u7b80\u5355\u7684\uff0c\u6211\u4eec\u5bf9\u4f20\u8fdb\u6765\u7684\u53c2\u6570key\u8fdb\u884c\u4e24\u6b21\u54c8\u5e0c\u6c42\u503ctag[0]\u548ctag[1]\uff0c\u5e76\u5148\u7528tag[0]\u5b9a\u4f4d\u5230bucket\u7684\u4f4d\u7f6e\uff0c\u4ece4\u8defslot\u4e2d\u518d\u53bb\u5bf9\u6bd4tag[1]\u3002\u53ea\u6709\u6bd4\u4e2d\u4e86tag\u540e\uff0c\u7531\u4e8e\u53ea\u662fkey\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u518d\u53bb\u4eceflash\u4e2d\u9a8c\u8bc1\u5b8c\u6574\u7684key\uff0c\u5e76\u628a\u6570\u636e\u5728flash\u4e2d\u7684\u504f\u79fb\u503cread_addr\u8f93\u51fa\u8fd4\u56de\u3002\u76f8\u5e94\u7684\uff0c\u5982\u679cbucket[tag[0]]\u76844\u8defslot\u90fd\u6ca1\u6709\u6bd4\u4e2d\uff0c\u6211\u4eec\u518d\u53bbbucket[tag[1]]\u4e2d\u6bd4\u5bf9\uff08\u4ee3\u7801\u7565\uff09\uff0c\u5982\u679c\u8fd8\u6bd4\u4e0d\u4e2d\uff0c\u53ef\u4ee5\u80af\u5b9a\u8fd9\u4e2akey\u4e0d\u5b58\u5728\u3002<strong>\u8fd9\u79cd\u8bbe\u8ba1\u7684\u597d\u5904\u5c31\u662f\u51cf\u5c11\u4e86\u4e0d\u5fc5\u8981\u7684flash\u8bfb\u64cd\u4f5c\uff0c\u6bcf\u6b21\u6bd4\u5bf9\u7684\u662f\u5185\u5b58\u4e2d\u7684tag\u800c\u4e0d\u9700\u8981\u5b8c\u6574\u7684key\u3002<\/strong><\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">static int cuckoo_hash_get(struct hash_table *table, uint8_t *key, uint8_t **read_addr)\r\n{\r\n    int i, j;\r\n    uint8_t *addr;\r\n    uint32_t tag[2], offset;\r\n    struct hash_slot_cache *slot;\r\n\r\n    tag[0] = cuckoo_hash_lsb(key, table-&gt;bucket_num);\r\n    tag[1] = cuckoo_hash_msb(key, table-&gt;bucket_num);\r\n\r\n    \/* Filter the key and verify if it exists. *\/\r\n    slot = table-&amp;gt;buckets[tag[0]];\r\n    for (i = 0; i bucket_num) == slot[i].tag) {\r\n        if (slot[i].status == OCCUPIED) {\r\n            offset = slot[i].offset;\r\n            addr = key_verify(key, offset);\r\n            if (addr != NULL) {\r\n                if (read_addr != NULL) {\r\n                    *read_addr = addr;\r\n                }\r\n                break;\r\n            }\r\n        } else if (slot[i].status == DELETED) {\r\n            return DELETED;\r\n        }\r\n    }\r\n    ...\r\n}<\/pre>\n<p>\u63a5\u4e0b\u6765\u5148\u5c06\u7b80\u5355\u7684\u5220\u9664\u64cd\u4f5c\uff0c\u4e4b\u6240\u4ee5\u7b80\u5355\u662f\u56e0\u4e3adelete\u9664\u4e86\u5c06\u76f8\u5e94slot\u7684\u72b6\u6001\u503c\u8bbe\u7f6e\u4e00\u4e0b\u4e4b\u5916\uff0c\u5176\u5b9e\u4ec0\u4e48\u90fd\u6ca1\u6709\u5e72\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u4e0d\u4f1a\u771f\u6b63\u5230flash\u91cc\u9762\u53bb\u628a\u6570\u636e\u6e05\u9664\u6389\u3002\u4e3a\u4ec0\u4e48\uff1f\u5f88\u7b80\u5355\uff0c\u6ca1\u6709\u5fc5\u8981\u3002\u8fd8\u6709\u4e00\u4e2a\u539f\u56e0\uff0cflash\u7684\u5199\u64cd\u4f5c\u4e4b\u524d\u9700\u8981\u64e6\u9664\u6574\u4e2a\u9875\u9762\uff0c\u8fd9\u79cd\u64e6\u9664\u662f\u4f1a\u6298\u5bff\u7684\uff0c<strong>\u6240\u4ee5\u5f88\u591aflash\u652f\u6301\u968f\u673a\u8bfb\uff0c\u4f46\u5fc5\u987b\u4fdd\u6301\u987a\u5e8f\u5199\u3002<\/strong><\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">static void cuckoo_hash_delete(struct hash_table *table, uint8_t *key)\r\n{\r\n    uint32_t i, j, tag[2];\r\n    struct hash_slot_cache *slot;\r\n\r\n    tag[0] = cuckoo_hash_lsb(key, table-&gt;bucket_num);\r\n    tag[1] = cuckoo_hash_msb(key, table-&gt;bucket_num);\r\n\r\n    slot = table-&gt;buckets[tag[0]];\r\n    for (i = 0; i bucket_num) == slot[i].tag) {\r\n        slot[i].status = DELETED;\r\n        return;\r\n    }\r\n    ...\r\n}<\/pre>\n<p>\u4e86\u89e3\u4e86flash\u7684\u8bfb\u5199\u7279\u6027\uff0c\u4f60\u5c31\u77e5\u9053\u4e3a\u5565\u63d2\u5165\u64cd\u4f5c\u5728flash\u5c42\u9762\u8981\u8bbe\u8ba1\u6210append\u3002\u4e0d\u8fc7\u6211\u4eec\u8fd9\u91cc\u4e0d\u8ba8\u8bba\u8fc7\u591aflash\u7ec6\u8282\uff0c\u54c8\u5e0c\u8868\u5c42\u9762\u7684\u63d2\u5165\u903b\u8f91\u5176\u5b9e\u8ddf\u67e5\u8be2\u5dee\u4e0d\u591a\uff0c\u6211\u5c31\u4e0d\u8d34\u4ee3\u7801\u4e86\u3002\u8fd9\u91cc\u8981\u8d34\u7684\u662f\u5982\u4f55\u5224\u65ad\u5e76\u5904\u7406\u78b0\u649e\uff0c\u5176\u5b9e\u8fd9\u91cc\u4e5f\u6ca1\u5565\u7384\u673a\uff0c\u5c31\u662f\u7528old_tag\u548cold_offset\u4fdd\u5b58\u4e00\u4e0b\u4e34\u65f6\u53d8\u91cf\uff0c\u4ee5\u4fbf\u4e00\u4e2a\u5143\u7d20\u88ab\u8e22\u51fa\u53bb\u4e4b\u540e\u8fd8\u80fd\u627e\u5230\u5907\u7528\u7684\u5b89\u8eab\u4e4b\u6240\u3002\u4f46\u8fd9\u91cc\u4f1a\u6709\u4e00\u4e2a\u5224\u65ad\uff0c\u6bcf\u6b21\u8e22\u4eba\u90fd\u4f1a\u8ba1\u6570\uff0c\u5f53alt_cnt\u5927\u4e8e512\u65f6\u5019\u8868\u793a\u54c8\u5e0c\u8868\u771f\u7684\u5feb\u6ee1\u4e86\uff0c\u8fd9\u65f6\u5019\u9700\u8981rehash\u4e86\u3002<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">static int cuckoo_hash_collide(struct hash_table *table, uint32_t *tag, uint32_t *p_offset)\r\n{\r\n    int i, j, k, alt_cnt;\r\n    uint32_t old_tag[2], offset, old_offset;\r\n    struct hash_slot_cache *slot;\r\n\r\n    \/* Kick out the old bucket and move it to the alternative bucket. *\/\r\n    offset = *p_offset;\r\n    slot = table-&gt;buckets[tag[0]];\r\n    old_tag[0] = tag[0];\r\n    old_tag[1] = slot[0].tag;\r\n    old_offset = slot[0].offset;\r\n    slot[0].tag = tag[1];\r\n    slot[0].offset = offset;\r\n    i = 0 ^ 1;\r\n    k = 0;\r\n    alt_cnt = 0;\r\n\r\nKICK_OUT:\r\n    slot = table-&gt;buckets[old_tag[i]];\r\n    for (j = 0; j &lt; ASSOC_WAY; j++) {\r\n        if (offset == INVALID_OFFSET &amp;&amp; slot[j].status == DELETED) {\r\n            slot[j].status = OCCUPIED;\r\n            slot[j].tag = old_tag[i ^ 1];\r\n            *p_offset = offset = slot[j].offset;\r\n            break;\r\n        } else if (slot[j].status == AVAILIBLE) {\r\n            slot[j].status = OCCUPIED;\r\n            slot[j].tag = old_tag[i ^ 1];\r\n            slot[j].offset = old_offset;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (j == ASSOC_WAY) {\r\n        if (++alt_cnt &gt; 512) {\r\n            if (k == ASSOC_WAY - 1) {\r\n                \/* Hash table is almost full and needs to be resized *\/\r\n                return 1;\r\n            } else {\r\n                k++;\r\n            }\r\n        }\r\n        uint32_t tmp_tag = slot[k].tag;\r\n        uint32_t tmp_offset = slot[k].offset;\r\n        slot[k].tag = old_tag[i ^ 1];\r\n        slot[k].offset = old_offset;\r\n        old_tag[i ^ 1] = tmp_tag;\r\n        old_offset = tmp_offset;\r\n        i ^= 1;\r\n        goto KICK_OUT;\r\n    }\r\n\r\n    return 0;\r\n}<\/pre>\n<p>rehash\u7684\u903b\u8f91\u4e5f\u5f88\u7b80\u5355\uff0c\u65e0\u975e\u5c31\u662f\u628a\u54c8\u5e0c\u8868\u4e2d\u7684buckets\u548cslots\u91cd\u65b0realloc\u4e00\u4e0b\uff0c\u7a7a\u95f4\u6269\u5c55\u4e00\u500d\uff0c\u7136\u540e\u518d\u4eceflash\u4e2d\u7684key\u91cd\u65b0\u63d2\u5165\u5230\u65b0\u7684\u54c8\u5e0c\u8868\u91cc\u53bb\u3002\u8fd9\u91cc\u6709\u4e2a\u9677\u9631\u8981\u6ce8\u610f\uff0c<strong>\u5343\u4e07\u4e0d\u80fd\u6709\u76f8\u540c\u7684key\u6df7\u8fdb\u6765\uff01<\/strong>\u867d\u7136cuckoo hashing\u4e0d\u50cf\u5f00\u94fe\u6cd5\u90a3\u6837\u4f1a\u9000\u5316\u6210O(n)\uff0c\u4f46\u7531\u4e8e\u6bcf\u4e2a\u5143\u7d20\u6709\u4e24\u4e2a\u54c8\u5e0c\u503c\uff0c\u800c\u4e14\u6bcf\u6b21\u8ba1\u7b97\u7684\u54c8\u5e0c\u503c\u968f\u7740\u54c8\u5e0c\u8868rehash\u7684\u89c4\u6a21\u800c\u4e0d\u540c\uff0c\u76f8\u540c\u7684key\u5e76\u4e0d\u80fd\u7acb\u5373\u68c0\u6d4b\u5230\u51b2\u7a81\uff0c\u4f46\u5f53\u76f8\u540c\u7684key\u8fbe\u5230\u4e00\u5b9a\u89c4\u6a21\u540e\uff0c\u5669\u68a6\u5c31\u5f00\u59cb\u4e86\uff0c\u7531\u4e8erehash\u91cc\u9762\u6709\u63d2\u5165\u64cd\u4f5c\uff0c\u4e00\u65e6\u5728\u8fd9\u91cc\u89e6\u53d1\u78b0\u649e\uff0c\u53c8\u4f1a\u89e6\u53d1rehash\uff0c\u8fd9\u65f6\u5c31\u662f\u4e00\u4e2arehash\u4e0d\u65ad\u9012\u5f52\u7684\u8fc7\u7a0b\uff0c\u7531\u4e8e\u5176\u4e2d\u8001\u7684\u5185\u5b58\u6ca1\u91ca\u653e\uff0c\u65b0\u7684\u5185\u5b58\u4e0d\u65ad\u91cd\u65b0\u5206\u914d\uff0c\u6574\u4e2a\u7a0b\u5e8f\u5c31\u5982\u540c\u9677\u5165DoS\u653b\u51fb\u4e00\u822c\u762b\u75ea\u4e86\u3002<strong>\u6240\u4ee5\u6bcf\u6b21\u63d2\u5165\u64cd\u4f5c\u524d\u4e00\u5b9a\u8981\u5224\u65ad\u4e00\u4e0bkey\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u8fc7\uff0c\u5e76\u4e14\u5bf9rehash\u91cc\u7684\u63d2\u5165\u4f7f\u7528\u78b0\u649e\u65ad\u8a00\u9632\u6b62\u6b64\u7c7b\u60c5\u51b5\u53d1\u751f\u3002<\/strong>\u7b14\u8005\u5728\u6d4b\u8bd5\u4e2d\u4e0d\u5e78\u4e2d\u4e86\u8fd9\u6837\u7684\u5f69\u86cb\uff0c\u8c03\u8bd5\u4e86\u5927\u534a\u5929\u624d\u641e\u6e05\u695a\u539f\u56e0\uff0c\u641eIT\u7684\u540c\u5b66\u4eec\u8bb0\u4f4f\u4e00\u5b9a\u8981\u9632\u5c0f\u4eba\u554a~<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">static void cuckoo_rehash(struct hash_table *table)\r\n{\r\n    ...\r\n    uint8_t *read_addr = nvrom_base_addr;\r\n    uint32_t entries = log_entries;\r\n    while (entries--) {\r\n        uint8_t key[20];\r\n        uint32_t offset = read_addr - nvrom_base_addr;\r\n        for (i = 0; i &amp;lt; 20; i++) {\r\n            key[i] = flash_read(read_addr);\r\n            read_addr++;\r\n        }\r\n        \/* Duplicated keys in hash table which can cause eternal\r\n         * hashing collision! Be careful of that!\r\n         *\/\r\n        assert(!cuckoo_hash_put(table, key, &amp;offset));\r\n        if (cuckoo_hash_get(&amp;old_table, key, NULL) == DELETED) {\r\n            cuckoo_hash_delete(table, key);\r\n        }\r\n        read_addr += DAT_LEN;\r\n    }\r\n    ...\r\n}<\/pre>\n<p>\u5230\u6b64\u4e3a\u6b62\u4ee3\u7801\u7684\u903b\u8f91\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\uff0c\u4f7f\u7528\u6548\u679c\u5982\u4f55\u5462\uff1f\u6211\u6765\u5e2e\u4f60\u627e\u4e2a\u5927\u6587\u4ef6<a href=\"https:\/\/github.com\/unqlite\/unqlite\/blob\/master\/unqlite.c\" target=\"_blank\">unqlite.c<\/a>\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\u6e90\u4ee3\u7801\uff0c\u517159959\u884c\u4ee3\u7801\u3002\u4f5c\u4e3a\u9700\u8981\u5bfc\u5165\u7684\u6587\u4ef6\uff0c\u7f16\u8bd1\u6211\u4eec\u7684cuckoo filter\uff0c\u7136\u540e\u6267\u884c\uff1a<\/p>\n<p><code data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\">.\/cuckoo_db unqlite.c output.c<\/code><\/p>\n<p>\u4f60\u4f1a\u53d1\u73b0\u751f\u6210output.c\u6b63\u597d\u4e5f\u662f59959\u884c\u4ee3\u7801\uff0c\u4e00\u5206\u4e0d\u5dee\uff0cprobably yes\u7ec8\u4e8e\u53d8\u6210\u4e86definitely yes\u3002\u540c\u65f6\u4e5f\u53ef\u4ee5\u770b\u5230\uff0ccuckoo filter\u771f\u7684\u5f88\u5feb\uff01\u5982\u679c\u4f60\u60f3\u770bhashing\u7684\u6574\u4e2a\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u7167<a href=\"https:\/\/github.com\/begeekmyfriend\/CuckooFilter\/blob\/master\/README.md\" target=\"_blank\">README<\/a>\u91cc\u628a\u8c03\u8bd5\u5b8f\u6253\u5f00\u3002\u6700\u540e\uff0c\u6b22\u8fce\u7ed9<a href=\"https:\/\/github.com\/begeekmyfriend\/CuckooFilter\" target=\"_blank\">\u8fd9\u4e2a\u5c0f\u73a9\u610f<\/a>\u63d0\u4ea4PR\uff01<\/p>\n<h4>\u53c2\u8003\u8d44\u6599<\/h4>\n<p>Cuckoo Filter\u7684<a href=\"http:\/\/www.cs.cmu.edu\/~binfan\/papers\/conext14_cuckoofilter.pdf\" target=\"_blank\">\u8bba\u6587<\/a>\u548c<a href=\"http:\/\/www.cs.cmu.edu\/~binfan\/papers\/conext14_cuckoofilter.pptx\" target=\"_blank\">PPT<\/a>\uff1aCuckoo Filter: Practically Better Than Bloom<\/p>\n","raw":"","protected":false},"excerpt":{"rendered":"<p>\uff08\u611f\u8c22\u7f51\u53cb\u00a0@\u6211\u7684\u4e0a\u94fa\u53eb\u8def\u9065\u00a0\u6295\u7a3f\uff09 \u5bf9\u4e8e\u6d77\u91cf\u6570\u636e\u5904\u7406\u4e1a\u52a1\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u7d22\u5f15\u6570\u636e\u7ed3\u6784\uff0c\u7528\u6765\u5e2e\u52a9\u67e5\u8be2\uff0c\u5feb\u901f\u5224\u65ad\u6570\u636e\u8bb0\u5f55\u662f\u5426\u5b58\u5728\uff0c\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u901a\u5e38\u53c8\u53eb\u8fc7\u6ee4\u5668(f&#8230;<\/p>\n<p class=\"read-more\"><a class=\"btn btn-default\" href=\"https:\/\/coolshell.cn\/articles\/17225.html\"> Read More<span class=\"screen-reader-text\">  Read More<\/span><\/a><\/p>\n","protected":false},"author":15168,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5,105,23,271],"tags":[76,797,796,795],"series":[],"aioseo_notices":[],"views":68926,"post_thumbnail_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/Bloom_filter.png","content_first_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/Bloom_filter.png","post_medium_image_300":"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/Bloom_filter.png","post_thumbnail_image_624":"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/Bloom_filter.png","post_frist_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/Bloom_filter.png","post_medium_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/Bloom_filter.png","post_large_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/Bloom_filter.png","post_full_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/Bloom_filter.png","post_all_images":[{"imagesurl":"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo-300x164.jpg","id":"image0"},{"imagesurl":"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/Bloom_filter.png","id":"image1"},{"imagesurl":"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo_preview.jpg","id":"image2"},{"imagesurl":"https:\/\/coolshell.cn\/wp-content\/uploads\/2015\/08\/cuckoo-hashing-1024x392.png","id":"image3"}],"videoAdId":"","listAd":"0","listAdId":"","listAdEvery":5,"total_comments":37,"category_name":"C\/C++\u8bed\u8a00","post_date":"2015-09-02","like_count":"0","praiseWord":"\u9f13\u52b1","excitationAd":"0","rewardedVideoAdId":"","detailAdId":"","detailAd":"0","enterpriseMinapp":"0","audios":[],"postImageUrl":"http:\/\/coolshell.cn\/wp-content\/uploads\/2016\/09\/coolshell-360x200.jpg","avatarurls":[],"related_posts":[],"pageviews":68927,"pageviews_wl":58259,"ratings_average":4,"ratings_total":214,"ratings_users":51,"next_post_id":17381,"next_post_title":"\u6027\u80fd\u6d4b\u8bd5\u5e94\u8be5\u600e\u4e48\u505a\uff1f","previous_post_id":17066,"previous_post_title":"\u5173\u4e8e\u79fb\u52a8\u7aef\u7684\u9493\u9c7c\u5f0f\u653b\u51fb"}