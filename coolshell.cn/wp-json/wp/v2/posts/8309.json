{"id":8309,"date":"2012-09-20T08:17:07","date_gmt":"2012-09-20T00:17:07","guid":{"rendered":"http:\/\/coolshell.cn\/?p=8309"},"modified":"2012-09-21T08:42:21","modified_gmt":"2012-09-21T00:42:21","slug":"cc%e8%af%ad%e8%a8%80%e4%b8%ad%e9%97%ad%e5%8c%85%e7%9a%84%e6%8e%a2%e7%a9%b6%e5%8f%8a%e6%af%94%e8%be%83","status":"publish","type":"post","link":"https:\/\/coolshell.cn\/articles\/8309.html","title":{"rendered":"C\/C++\u8bed\u8a00\u4e2d\u95ed\u5305\u7684\u63a2\u7a76\u53ca\u6bd4\u8f83"},"content":{"rendered":"<p>\uff08<strong><span style=\"color: #cc0000;\">\u611f\u8c22\u6295\u7a3f\u4eba<\/span>\u00a0<a href=\"http:\/\/weibo.com\/jasonmblog\" target=\"_blank\">@\u601d\u79bd\u996e\u971c<\/a>\u00a0<\/strong>\uff09<\/p>\n<p>\u8fd9\u91cc\u4e3b\u8981\u8ba8\u8bba\u7684\u662fC\u8bed\u8a00\u7684\u6269\u5c55\u7279\u6027<a href=\"http:\/\/en.wikipedia.org\/wiki\/Blocks_(C_language_extension)\" target=\"_blank\">block<\/a>\u3002\u8be5\u7279\u6027\u662fApple\u4e3aC\u3001C++\u3001Objective-C\u589e\u52a0\u7684\u6269\u5c55\uff0c\u8ba9\u8fd9\u4e9b\u8bed\u8a00\u53ef\u4ee5\u7528\u7c7bLambda\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u6765\u521b\u5efa<a href=\"http:\/\/en.wikipedia.org\/wiki\/Closure_(computer_science)\" target=\"_blank\">\u95ed\u5305<\/a>\u3002\u524d\u6bb5\u65f6\u95f4\uff0c\u5728\u5bf9CoreData\u5b58\u53d6\u8fdb\u884c\u5c01\u88c5\u65f6\uff08\u8ba9\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u66f4\u7b80\u6d01\u5feb\u901f\u5730\u5199\u76f8\u5173\u4ee3\u7801\uff09\uff0c\u6211\u5bf9block\u673a\u5236\u6709\u4e86\u8fdb\u4e00\u6b65\u4e86\u89e3\uff0c\u89c9\u5f97\u53ef\u4ee5\u548cC++ 11\u4e2d\u7684Lambda\u8868\u8fbe\u5f0f\u76f8\u4e92\u5370\u8bc1\uff0c\u6240\u4ee5\u6700\u8fd1\u91cd\u65b0\u505a\u4e86\u4e0b\u6574\u7406\uff0c\u5206\u4eab\u7ed9\u5927\u5bb6\u3002<\/p>\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_48 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">\u76ee\u5f55<\/p>\n<span class=\"ez-toc-title-toggle\"><\/span><\/div>\n<nav><ul class='ez-toc-list ez-toc-list-level-1 ' ><li class='ez-toc-page-1 ez-toc-heading-level-4'><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/coolshell.cn\/articles\/8309.html\/#0_%E7%AE%80%E5%8D%95%E5%88%9B%E5%BB%BA%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0\" title=\"0. \u7b80\u5355\u521b\u5efa\u533f\u540d\u51fd\u6570\">0. \u7b80\u5355\u521b\u5efa\u533f\u540d\u51fd\u6570<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-4'><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/coolshell.cn\/articles\/8309.html\/#1_%E4%BB%8E%E8%AF%AD%E6%B3%95%E4%B8%8A%E7%9C%8B%E5%A6%82%E4%BD%95%E6%8D%95%E8%8E%B7%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F\" title=\"1. \u4ece\u8bed\u6cd5\u4e0a\u770b\u5982\u4f55\u6355\u83b7\u5916\u90e8\u53d8\u91cf\">1. \u4ece\u8bed\u6cd5\u4e0a\u770b\u5982\u4f55\u6355\u83b7\u5916\u90e8\u53d8\u91cf<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-4'><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/coolshell.cn\/articles\/8309.html\/#2_%E4%BB%8E%E8%AF%AD%E6%B3%95%E4%B8%8A%E7%9C%8B%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F\" title=\"2. \u4ece\u8bed\u6cd5\u4e0a\u770b\u5982\u4f55\u4fee\u6539\u5916\u90e8\u53d8\u91cf\">2. \u4ece\u8bed\u6cd5\u4e0a\u770b\u5982\u4f55\u4fee\u6539\u5916\u90e8\u53d8\u91cf<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-4'><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/coolshell.cn\/articles\/8309.html\/#3_%E4%BB%8E%E5%AE%9E%E7%8E%B0%E4%B8%8A%E7%9C%8B%E5%A6%82%E4%BD%95%E6%8D%95%E8%8E%B7%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F\" title=\"3. \u4ece\u5b9e\u73b0\u4e0a\u770b\u5982\u4f55\u6355\u83b7\u5916\u90e8\u53d8\u91cf\">3. \u4ece\u5b9e\u73b0\u4e0a\u770b\u5982\u4f55\u6355\u83b7\u5916\u90e8\u53d8\u91cf<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-4'><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/coolshell.cn\/articles\/8309.html\/#4_%E4%BB%8E%E5%AE%9E%E7%8E%B0%E4%B8%8A%E7%9C%8B%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F%EF%BC%88_block%E7%B1%BB%E5%9E%8B%E6%8C%87%E7%A4%BA%E7%AC%A6%EF%BC%89\" title=\"4. \u4ece\u5b9e\u73b0\u4e0a\u770b\u5982\u4f55\u4fee\u6539\u5916\u90e8\u53d8\u91cf\uff08__block\u7c7b\u578b\u6307\u793a\u7b26\uff09\">4. \u4ece\u5b9e\u73b0\u4e0a\u770b\u5982\u4f55\u4fee\u6539\u5916\u90e8\u53d8\u91cf\uff08__block\u7c7b\u578b\u6307\u793a\u7b26\uff09<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-4'><a class=\"ez-toc-link ez-toc-heading-6\" href=\"https:\/\/coolshell.cn\/articles\/8309.html\/#5_%E8%83%8C%E5%90%8E%E7%9A%84%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%8A%A8%E4%BD%9C\" title=\"5. \u80cc\u540e\u7684\u5185\u5b58\u7ba1\u7406\u52a8\u4f5c\">5. \u80cc\u540e\u7684\u5185\u5b58\u7ba1\u7406\u52a8\u4f5c<\/a><ul class='ez-toc-list-level-5'><li class='ez-toc-heading-level-5'><a class=\"ez-toc-link ez-toc-heading-7\" href=\"https:\/\/coolshell.cn\/articles\/8309.html\/#51_%E6%8B%B7%E8%B4%9Dblock%E7%BB%93%E6%9E%84%E4%BD%93\" title=\"5.1 \u62f7\u8d1dblock\u7ed3\u6784\u4f53\">5.1 \u62f7\u8d1dblock\u7ed3\u6784\u4f53<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-5'><a class=\"ez-toc-link ez-toc-heading-8\" href=\"https:\/\/coolshell.cn\/articles\/8309.html\/#52_%E6%8B%B7%E8%B4%9D%E6%8D%95%E8%8E%B7%E7%9A%84%E5%8F%98%E9%87%8F%EF%BC%88_block%E5%8F%98%E9%87%8F%EF%BC%89\" title=\"5.2 \u62f7\u8d1d\u6355\u83b7\u7684\u53d8\u91cf\uff08__block\u53d8\u91cf\uff09\">5.2 \u62f7\u8d1d\u6355\u83b7\u7684\u53d8\u91cf\uff08__block\u53d8\u91cf\uff09<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-5'><a class=\"ez-toc-link ez-toc-heading-9\" href=\"https:\/\/coolshell.cn\/articles\/8309.html\/#53_forwarding%E6%8C%87%E9%92%88%E7%9A%84%E4%BD%9C%E7%94%A8\" title=\"5.3 __forwarding\u6307\u9488\u7684\u4f5c\u7528\">5.3 __forwarding\u6307\u9488\u7684\u4f5c\u7528<\/a><\/li><\/ul><\/li><li class='ez-toc-page-1 ez-toc-heading-level-4'><a class=\"ez-toc-link ez-toc-heading-10\" href=\"https:\/\/coolshell.cn\/articles\/8309.html\/#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99%EF%BC%9A\" title=\"\u53c2\u8003\u8d44\u6599\uff1a\">\u53c2\u8003\u8d44\u6599\uff1a<\/a><\/li><\/ul><\/nav><\/div>\n<h4><span class=\"ez-toc-section\" id=\"0_%E7%AE%80%E5%8D%95%E5%88%9B%E5%BB%BA%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0\"><\/span>0. \u7b80\u5355\u521b\u5efa\u533f\u540d\u51fd\u6570<span class=\"ez-toc-section-end\"><\/span><\/h4>\n<p>\u4e0b\u9762\u4e24\u6bb5\u4ee3\u7801\u7684\u4f5c\u7528\u90fd\u662f\u521b\u5efa\u533f\u540d\u51fd\u6570\u5e76\u8c03\u7528\uff0c\u8f93\u51faHello, World\u8bed\u53e5\u3002\u5206\u522b\u4f7f\u7528Objective-C\u548cC++ 11\uff1a<\/p>\n<p><code data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">^{ printf(&quot;Hello, World!\\n&quot;); } ();<\/code><br \/>\n<code data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">[] { cout &lt;&lt; &quot;Hello, World&quot; &lt;&lt; endl; } ();<\/code><\/p>\n<p>Lambda\u8868\u8fbe\u5f0f\u7684\u4e00\u4e2a\u597d\u5904\u5c31\u662f\u8ba9\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5728\u9700\u8981\u7684\u65f6\u5019\u4e34\u65f6\u521b\u5efa\u51fd\u6570\uff0c\u4fbf\u6377\u3002<\/p>\n<p>\u5728\u521b\u5efa\u95ed\u5305\uff08\u6216\u8005\u8bf4Lambda\u51fd\u6570\uff09\u7684\u8bed\u6cd5\u4e0a\uff0cObjective-C\u91c7\u7528\u7684\u662f\u4e0a\u5c16\u53f7<span style=\"color: #ff0000;\">^<\/span>\uff0c\u800cC++ 11\u91c7\u7528\u7684\u662f\u914d\u5bf9\u7684\u65b9\u62ec\u53f7<span style=\"color: #ff0000;\">[]<\/span>\u3002<\/p>\n<p>\u4e0d\u8fc7\u201c<span style=\"color: #808000;\">\u533f\u540d\u51fd\u6570<\/span>\u201d\u4e00\u8bcd\u662f\u9488\u5bf9\u7a0b\u5e8f\u5458\u800c\u8a00\u7684\uff0c\u7f16\u8bd1\u5668\u8fd8\u662f\u91c7\u53d6\u4e86\u4e00\u5b9a\u7684\u547d\u540d\u89c4\u5219\u3002<\/p>\n<p>\u6bd4\u5982\u4e0b\u9762Objective-C\u4ee3\u7801\u4e2d\u76843\u4e2ablock\uff0c<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\n#import &lt;Foundation\/Foundation.h&gt;\r\n\r\nint (^maxBlk)(int , int) = ^(int m, int n){ return m &gt; n ? m : n; };\r\n\r\nint main(int argc, const char * argv[])\r\n{\r\n    ^{ printf(&quot;Hello, World!\\n&quot;); } ();\r\n\r\n    int i = 1024;\r\n    void (^blk)(void) = ^{ printf(&quot;%d\\n&quot;, i); };\r\n    blk();\r\n\r\n    return 0;\r\n}\r\n<\/pre>\n<p>\u4f1a\u4ea7\u751f\u5bf9\u5e94\u76843\u4e2a\u51fd\u6570\uff1a<\/p>\n<p><!--more--><\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\n__maxBlk_block_func_0\r\n__main_block_func_0\r\n__main_block_func_1\r\n<\/pre>\n<p>\u53ef\u89c1\u51fd\u6570\u7684\u547d\u540d\u89c4\u5219\u4e3a\uff1a__<span style=\"color: #ff0000;\">{$Scope}<\/span>_block_func_<span style=\"color: #ff0000;\">{$index}<\/span>\u3002\u5176\u4e2d{$Scope}\u4e3ablock\u6240\u5728\u51fd\u6570\uff0c\u5982\u679c{$Scope}\u4e3a\u5168\u5c40\u5c31\u53d6block\u672c\u8eab\u7684\u540d\u79f0\uff1b{$index}\u8868\u793a\u8be5block\u5728{$Scope}\u4f5c\u7528\u57df\u5185\u51fa\u73b0\u7684\u987a\u5e8f\uff08\u7b2c\u51e0\u4e2ablock\uff09\u3002<\/p>\n<h4><span class=\"ez-toc-section\" id=\"1_%E4%BB%8E%E8%AF%AD%E6%B3%95%E4%B8%8A%E7%9C%8B%E5%A6%82%E4%BD%95%E6%8D%95%E8%8E%B7%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F\"><\/span>1. \u4ece\u8bed\u6cd5\u4e0a\u770b\u5982\u4f55\u6355\u83b7\u5916\u90e8\u53d8\u91cf<span class=\"ez-toc-section-end\"><\/span><\/h4>\n<p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u5df2\u7ecf\u770b\u5230\u201c<span style=\"color: #808000;\">\u533f\u540d\u51fd\u6570<\/span>\u201d\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5916\u56f4\u4f5c\u7528\u57df\u7684\u53d8\u91cfi\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nint i = 1024;\r\nvoid (^blk)(void) = ^{ printf(&quot;%d\\n&quot;, i); };\r\nblk();\r\n<\/pre>\n<p>\u5f53\u533f\u540d\u51fd\u6570\u548cnon-local\u53d8\u91cf\u7ed3\u5408\u8d77\u6765\uff0c\u5c31\u5f62\u6210\u4e86\u95ed\u5305\uff08\u4e2a\u4eba\u770b\u6cd5\uff09\u3002<br \/>\n\u8fd9\u4e00\u6bb5\u4ee3\u7801\u53ef\u4ee5\u6210\u529f\u8f93\u51fai\u7684\u503c\u3002<\/p>\n<p>\u6211\u4eec\u628a\u4e00\u6837\u7684\u903b\u8f91\u642c\u5230C++\u4e0a\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nint i = 1024;\r\nauto func = [] { printf(&quot;%d\\n&quot;, i); };\r\nfunc();\r\n<\/pre>\n<p>GCC\u4f1a\u8f93\u51fa\uff1a<span style=\"color: #808000;\"><span style=\"color: #ff0000;\">\u9519\u8bef<\/span>\uff1a\u2018i\u2019\u672a\u88ab\u6355\u83b7<\/span>\u3002\u53ef\u89c1\u5728C++\u4e2d\u65e0\u6cd5\u76f4\u63a5\u6355\u83b7\u5916\u56f4\u4f5c\u7528\u57df\u7684\u53d8\u91cf\u3002<\/p>\n<p>\u4ee5BNF\u6765\u8868\u793aLambda\u8868\u8fbe\u5f0f\u7684\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\uff0c\u5b58\u5728\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nlambda-expression : lambda-introducer lambda-parameter-declarationopt compound-statement\r\nlambda-introducer : [ lambda-captureopt ]\r\n<\/pre>\n<p>\u56e0\u6b64\uff0c\u65b9\u62ec\u53f7\u4e2d\u8fd8\u53ef\u4ee5\u52a0\u5165\u4e00\u4e9b\u9009\u9879\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\n[]        Capture nothing (or, a scorched earth strategy?)\r\n[&amp;]       Capture any referenced variable by reference\r\n[=]       Capture any referenced variable by making a copy\r\n[=, &amp;foo] Capture any referenced variable by making a copy, but capture variable foo by reference\r\n[bar]     Capture bar by making a copy; don&#039;t copy anything else\r\n[this]    Capture the this pointer of the enclosing class\r\n<\/pre>\n<p>\u6839\u636e\u6587\u6cd5\uff0c\u5bf9\u4ee3\u7801\u52a0\u4ee5\u4fee\u6539\uff0c\u4f7f\u5176\u80fd\u591f\u6210\u529f\u8fd0\u884c\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nbash-3.2# vi testLambda.cpp\r\nbash-3.2# g++-4.7 -std=c++11 testLambda.cpp -o testLambda\r\nbash-3.2# .\/testLambda\r\n1024\r\nbash-3.2# cat testLambda.cpp\r\n#include &lt;iostream&gt;\r\n\r\nusing  namespace std;\r\n\r\nint main()\r\n{\r\n     int i = 1024;\r\n     auto func = [=] { printf(&quot;%d\\n&quot;, i); };\r\n     func();\r\n\r\n     return 0;\r\n}\r\nbash-3.2#\r\n<\/pre>\n<h4><span class=\"ez-toc-section\" id=\"2_%E4%BB%8E%E8%AF%AD%E6%B3%95%E4%B8%8A%E7%9C%8B%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F\"><\/span>2. \u4ece\u8bed\u6cd5\u4e0a\u770b\u5982\u4f55\u4fee\u6539\u5916\u90e8\u53d8\u91cf<span class=\"ez-toc-section-end\"><\/span><\/h4>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u7b26\u53f7<span style=\"color: #ff0000;\">=<\/span>\uff0c\u901a\u8fc7<span style=\"color: #808000;\">\u62f7\u8d1d\u65b9\u5f0f<\/span>\u6355\u83b7\u4e86\u5916\u90e8\u53d8\u91cfi\u3002<br \/>\n\u4f46\u662f\u5982\u679c\u5c1d\u8bd5\u5728Lambda\u8868\u8fbe\u5f0f\u4e2d\u4fee\u6539\u53d8\u91cfi\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nauto func = [=] { i = 0; printf(&quot;%d\\n&quot;, i); };\r\n<\/pre>\n<p>\u4f1a\u5f97\u5230\u9519\u8bef\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\ntestLambda.cpp: \u5728 lambda \u51fd\u6570\u4e2d:\r\ntestLambda.cpp:9:24: \u9519\u8bef\uff1a\u5411\u53ea\u8bfb\u53d8\u91cf\u2018i\u2019\u8d4b\u503c\r\n<\/pre>\n<p>\u53ef\u89c1<em><span style=\"color: #808000;\">\u901a\u8fc7\u62f7\u8d1d\u65b9\u5f0f\u6355\u83b7\u7684\u5916\u90e8\u53d8\u91cf\u662f\u53ea\u8bfb\u7684<\/span><\/em>\u3002Python\u4e2d\u4e5f\u6709\u4e00\u4e2a\u7c7b\u4f3c\u7684\u7ecf\u5178case\uff0c\u4e2a\u4eba\u89c9\u5f97\u6709\u76f8\u901a\u4e4b\u5904\uff1a<\/p>\n<pre data-enlighter-language=\"python\" class=\"EnlighterJSRAW\">\r\nx = 10\r\ndef foo():\r\n    print(x)\r\n    x += 1\r\nfoo()\r\n<\/pre>\n<p>\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u629b\u51fa<span style=\"color: #ff0000;\">UnboundLocalError<\/span>\u9519\u8bef\uff0c\u539f\u56e0\u53ef\u4ee5\u53c2\u89c1<a href=\"http:\/\/docs.python.org\/faq\/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value\" target=\"_blank\">FAQ<\/a>\u3002<\/p>\n<p>\u5728C++\u7684\u95ed\u5305\u8bed\u6cd5\u4e2d\uff0c\u5982\u679c\u9700\u8981\u5bf9\u5916\u90e8\u53d8\u91cf\u7684\u5199\u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b26\u53f7<span style=\"color: #ff0000;\">&amp;<\/span>\uff0c\u901a\u8fc7<span style=\"color: #808000;\"><em>\u5f15\u7528\u65b9\u5f0f<\/em><\/span>\u6355\u83b7\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nint i = 1024;\r\nauto func = [&amp;] { i = 0; printf(&quot;%d\\n&quot;, i); };\r\nfunc();\r\n<\/pre>\n<p>\u53cd\u8fc7\u6765\uff0c\u5c06\u4fee\u6539\u5916\u90e8\u53d8\u91cf\u7684\u903b\u8f91\u653e\u5230Objective-C\u4ee3\u7801\u4e2d\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nint i = 1024;\r\nvoid (^blk)(void) = ^{ i = 0; printf(&quot;%d\\n&quot;, i); };\r\nblk();\r\n<\/pre>\n<p>\u4f1a\u5f97\u5230\u5982\u4e0b\u9519\u8bef\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nmain.m:14:29: error: variable is not assignable (missing __block type specifier)\r\n    void (^blk)(void) = ^{ i++; printf(&quot;%d\\n&quot;, i); };\r\n                           ~^\r\n1 error generated.\r\n<\/pre>\n<p>\u53ef\u89c1\u5728block\u7684\u8bed\u6cd5\u4e2d\uff0c\u9ed8\u8ba4\u6355\u83b7\u7684\u5916\u90e8\u53d8\u91cf\u4e5f\u662f\u53ea\u8bfb\u7684\uff0c\u5982\u679c\u8981\u4fee\u6539\u5916\u90e8\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528<span style=\"color: #ff0000;\">__block<\/span>\u7c7b\u578b\u6307\u793a\u7b26\u8fdb\u884c\u4fee\u9970\u3002<br \/>\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u8bf7\u7ee7\u7eed\u5f80\u4e0b\u770b \uff1a\uff09<\/p>\n<h4><span class=\"ez-toc-section\" id=\"3_%E4%BB%8E%E5%AE%9E%E7%8E%B0%E4%B8%8A%E7%9C%8B%E5%A6%82%E4%BD%95%E6%8D%95%E8%8E%B7%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F\"><\/span>3. \u4ece\u5b9e\u73b0\u4e0a\u770b\u5982\u4f55\u6355\u83b7\u5916\u90e8\u53d8\u91cf<span class=\"ez-toc-section-end\"><\/span><\/h4>\n<p>\u95ed\u5305\u5bf9\u4e8e\u7f16\u7a0b\u8bed\u8a00\u6765\u8bf4\u662f\u4e00\u79cd\u8bed\u6cd5\u7cd6\uff0c\u5305\u62ecBlock\u548cLambda\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u7a0b\u5e8f\u5458\u5f00\u53d1\u800c\u5f15\u5165\u7684\u3002\u56e0\u6b64\uff0c\u5bf9Block\u7279\u6027\u7684\u652f\u6301\u4f1a\u843d\u5730\u5728<span style=\"color: #808000;\"><em>\u7f16\u8bd1\u5668\u524d\u7aef<\/em><\/span>\uff0c\u4e2d\u95f4\u4ee3\u7801\u5c06\u4f1a\u662fC\u8bed\u8a00\u3002<\/p>\n<p>\u5148\u770b\u5982\u4e0b\u4ee3\u7801\u4f1a\u4ea7\u751f\u600e\u6837\u7684\u4e2d\u95f4\u4ee3\u7801\u3002<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nint main(int argc, const char * argv[])\r\n{\r\n    int i = 1024;\r\n    void (^blk)(void) = ^{ printf(&quot;%d\\n&quot;, i); };\r\n    blk();\r\n\r\n    return 0;\r\n}\r\n<\/pre>\n<p>\u9996\u5148\u662f<span style=\"color: #ff0000;\">block\u7ed3\u6784\u4f53<\/span>\u7684\u5b9e\u73b0\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\n#ifndef BLOCK_IMPL\r\n#define BLOCK_IMPL\r\nstruct __block_impl {\r\n    void *isa;\r\n    int Flags;\r\n    int Reserved;\r\n    void *FuncPtr;\r\n};\r\n\/\/ \u7701\u7565\u90e8\u5206\u4ee3\u7801\r\n\r\n#endif\r\n<\/pre>\n<p>\u7b2c\u4e00\u4e2a\u6210\u5458<span style=\"color: #ff0000;\">isa<\/span>\u6307\u9488\u7528\u6765\u8868\u793a\u8be5\u7ed3\u6784\u4f53\u7684\u7c7b\u578b\uff0c\u4f7f\u5176\u4ecd\u7136\u5904\u4e8eCocoa\u7684\u5bf9\u8c61\u4f53\u7cfb\u4e2d\uff0c\u7c7b\u4f3cPython\u5bf9\u8c61\u7cfb\u7edf\u4e2d\u7684PyObject\u3002<\/p>\n<p>\u7b2c\u4e8c\u3001\u4e09\u4e2a\u6210\u5458\u662f\u6807\u5fd7\u4f4d\u548c\u4fdd\u7559\u4f4d\u3002<\/p>\n<p>\u7b2c\u56db\u4e2a\u6210\u5458\u662f\u5bf9\u5e94\u7684\u201c\u533f\u540d\u51fd\u6570\u201d\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u5bf9\u5e94\u51fd\u6570\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nstatic void __main_block_func_0(struct __main_block_impl_0 *__cself) {\r\n    int i = __cself-&gt;i; \/\/ bound by copy\r\n    printf(&quot;%d\\n&quot;, i);\r\n}\r\n<\/pre>\n<p>\u51fd\u6570__main_block_func_0\u5f15\u5165\u4e86\u53c2\u6570<span style=\"color: #808000;\">__cself<\/span>\uff0c\u4e3astruct __main_block_impl_0 *\u7c7b\u578b\uff0c\u4ece\u53c2\u6570\u540d\u79f0\u5c31\u53ef\u4ee5\u770b\u51fa\u5b83\u7684\u529f\u80fd\u7c7b\u4f3c\u4e8eC++\u4e2d\u7684this\u6307\u9488\u6216\u8005Objective-C\u7684self\u3002<br \/>\n\u800cstruct __main_block_impl_0\u7684\u7ed3\u6784\u5982\u4e0b\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nstruct __main_block_impl_0 {\r\n    struct __block_impl impl;\r\n    struct __main_block_desc_0* Desc;\r\n    int i;\r\n    __main_block_impl_0(void *fp, struct __main_block_desc_0 *desc, int _i, int flags=0) : i(_i) {\r\n        impl.isa = &amp;_NSConcreteStackBlock;\r\n        impl.Flags = flags;\r\n        impl.FuncPtr = fp;\r\n        Desc = desc;\r\n    }\r\n};\r\n<\/pre>\n<p>\u4ece__main_block_impl_0\u8fd9\u4e2a\u540d\u79f0\u53ef\u4ee5\u770b\u51fa\u8be5\u7ed3\u6784\u4f53\u662f\u4e3amain\u51fd\u6570\u4e2d\u7b2c\u96f6\u4e2ablock\u670d\u52a1\u7684\uff0c\u5373\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684blk\uff1b\u4e5f\u53ef\u4ee5\u731c\u5230\u4e0d\u540c\u573a\u666f\u4e0b\u7684block\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\u4e0d\u540c\uff0c\u4f46\u672c\u8d28\u4e0a\u7b2c\u4e00\u4e2a\u6210\u5458\u4e00\u5b9a\u662f<span style=\"color: #808000;\">struct __block_impl impl<\/span>\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6210\u5458\u662fblock\u5b9e\u73b0\u7684\u57fa\u77f3\u3002<\/p>\n<p>\u7ed3\u6784\u4f53__main_block_impl_0\u53c8\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u7ed3\u6784\u4f53\uff0c\u4e5f\u662f\u4e2d\u95f4\u4ee3\u7801\u91cc\u6700\u540e\u4e00\u4e2a\u7ed3\u6784\u4f53\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nstatic struct __main_block_desc_0 {\r\n    unsigned long reserved;\r\n    unsigned long Block_size;\r\n} __main_block_desc_0_DATA = { 0, sizeof(struct __main_block_impl_0)};\r\n<\/pre>\n<p>\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e2a\u63cf\u8ff0\u6027\u8d28\u7684\u7ed3\u6784\u4f53\u5305\u542b\u7684\u4ef7\u503c\u4fe1\u606f\u5c31\u662fstruct __main_block_impl_0\u7684\u5927\u5c0f\u3002<\/p>\n<p>\u6700\u540e\u5269\u4e0bmain\u51fd\u6570\u5bf9\u5e94\u7684\u4e2d\u95f4\u4ee3\u7801\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nint main(int argc, const char * argv[])\r\n{\r\n    int i = 1024;\r\n    void (*blk)(void) = (void (*)(void))&amp;__main_block_impl_0((void *)__main_block_func_0, &amp;__main_block_desc_0_DATA, i);\r\n    ((void (*)(struct __block_impl *))((struct __block_impl *)blk)-&gt;FuncPtr)((struct __block_impl *)blk);\r\n\r\n    return 0;\r\n}\r\n<\/pre>\n<p>\u4ecemain\u51fd\u6570\u5bf9\u5e94\u7684\u4e2d\u95f4\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa<span style=\"color: #ff0000;\">\u6267\u884cblock\u7684\u672c\u8d28<\/span>\u5c31\u662f<span style=\"color: #808000;\">\u4ee5block\u7ed3\u6784\u4f53\u81ea\u8eab\u4f5c\u4e3a__cself\u53c2\u6570<\/span>\uff0c\u8fd9\u91cc\u5bf9\u5e94__main_block_impl_0\uff0c<span style=\"color: #808000;\">\u901a\u8fc7\u7ed3\u6784\u4f53\u6210\u5458FuncPtr\u51fd\u6570\u6307\u9488\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570<\/span>\uff0c\u8fd9\u91cc\u5bf9\u5e94__main_block_func_0\u3002<\/p>\n<p>\u5176\u4e2d\uff0c\u5c40\u90e8\u53d8\u91cfi\u662f\u4ee5<span style=\"color: #808000;\">\u503c\u4f20\u9012<\/span>\u7684\u65b9\u5f0f\u62f7\u8d1d\u4e00\u4efd\uff0c\u4f5c\u4e3a__main_block_impl_0\u7684\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5e76\u4ee5\u521d\u59cb\u5316\u5217\u8868\u7684\u5f62\u5f0f\u8d4b\u503c\u7ed9\u5176\u6210\u5458\u53d8\u91cfi\u3002\u6240\u4ee5\uff0c\u57fa\u4e8e\u8fd9\u6837\u7684\u5b9e\u73b0\uff0c\u4e0d\u5141\u8bb8\u76f4\u63a5\u4fee\u6539\u5916\u90e8\u53d8\u91cf\u662f\u5408\u7406\u7684\u2014\u2014\u56e0\u4e3a\u6309\u503c\u4f20\u9012\u6839\u672c\u6539\u4e0d\u5230\u5916\u90e8\u53d8\u91cf\u3002<\/p>\n<h4><span class=\"ez-toc-section\" id=\"4_%E4%BB%8E%E5%AE%9E%E7%8E%B0%E4%B8%8A%E7%9C%8B%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F%EF%BC%88_block%E7%B1%BB%E5%9E%8B%E6%8C%87%E7%A4%BA%E7%AC%A6%EF%BC%89\"><\/span>4. \u4ece\u5b9e\u73b0\u4e0a\u770b\u5982\u4f55\u4fee\u6539\u5916\u90e8\u53d8\u91cf\uff08<span style=\"color: #ff0000;\">__block<\/span>\u7c7b\u578b\u6307\u793a\u7b26\uff09<span class=\"ez-toc-section-end\"><\/span><\/h4>\n<p>\u5982\u679c\u60f3\u8981\u4fee\u6539\u5916\u90e8\u53d8\u91cf\uff0c\u5219\u9700\u8981\u7528<span style=\"color: #ff0000;\">__block<\/span>\u6765\u4fee\u9970\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nint main(int argc, const char * argv[])\r\n{\r\n    __block int i = 1024;\r\n    void (^blk)(void) = ^{ i = 0; printf(&quot;%d\\n&quot;, i); };\r\n    blk();\r\n\r\n    return 0;\r\n}\r\n<\/pre>\n<p>\u6b64\u65f6\u518d\u770b\u4e2d\u95f4\u4ee3\u7801\uff0c\u53d1\u73b0\u591a\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nstruct __Block_byref_i_0 {\r\n    void *__isa;\r\n    __Block_byref_i_0 *__forwarding;\r\n    int __flags;\r\n    int __size;\r\n    int i;\r\n};\r\n<\/pre>\n<p>\u4e8e\u662f\uff0c\u7528__block\u4fee\u9970\u7684int\u53d8\u91cf<span style=\"color: #808000;\">i\u5316\u8eab\u4e3a<\/span>__Block_byref_i_0\u7ed3\u6784\u4f53\u7684\u6700\u540e\u4e00\u4e2a<span style=\"color: #808000;\">\u6210\u5458\u53d8\u91cf<\/span>\u3002<\/p>\n<p>\u4ee3\u7801\u4e2dblk\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\u4e5f\u53d1\u751f\u4e86\u53d8\u5316\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nstruct __main_block_impl_0 {\r\n    struct __block_impl impl;\r\n    struct __main_block_desc_0* Desc;\r\n    __Block_byref_i_0 *i; \/\/ by ref\r\n    __main_block_impl_0(void *fp, struct__main_block_desc_0 *desc, __Block_byref_i_0 *_i, int flags=0) : i(_i-&gt;__forwarding) {\r\n        impl.isa = &amp;_NSConcreteStackBlock;\r\n        impl.Flags = flags;\r\n        impl.FuncPtr = fp;\r\n        Desc = desc;\r\n    }\r\n};\r\n<\/pre>\n<p>__main_block_impl_0\u53d1\u751f\u7684\u53d8\u5316\u5c31\u662fint\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cfi\u6362\u6210\u4e86__Block_byref_i_0 *\u7c7b\u578b\uff0c\u4ece\u540d\u79f0\u53ef\u4ee5\u770b\u51fa\u73b0\u5728\u8981\u901a\u8fc7\u5f15\u7528\u65b9\u5f0f\u6765\u6355\u83b7\u4e86\u3002<\/p>\n<p>\u5bf9\u5e94\u7684\u51fd\u6570\u4e5f\u4e0d\u540c\u4e86\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nstatic void __main_block_func_0(struct  __main_block_impl_0 *__cself) {\r\n    __Block_byref_i_0 *i = __cself-&gt;i; \/\/ bound by ref\r\n    (i-&gt;__forwarding-&gt;i) = 0; \/\/ \u770b\u8d77\u6765\u5f88\u5389\u5bb3\u7684\u6837\u5b50\r\n    printf(&quot;%d\\n&quot;, (i-&gt;__forwarding-&gt;i));\r\n}\r\n<\/pre>\n<p>main\u51fd\u6570\u4e5f\u6709\u4e86\u53d8\u52a8\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nint main(int argc, const char * argv[])\r\n{\r\n    __block __Block_byref_i_0 i = {(void*)0,(__Block_byref_i_0 *)&amp;i, 0, sizeof(__Block_byref_i_0), 1024};\r\n    void (*blk)(void) = (void (*)(void))&amp;__main_block_impl_0((void *)__main_block_func_0, &amp;__main_block_desc_0_DATA, (struct __Block_byref_i_0 *)&amp;i, 570425344);\r\n    ((void (*)(struct __block_impl *))((struct __block_impl *)blk)-&gt;FuncPtr)((struct __block_impl *)blk);\r\n\r\n    return 0;\r\n}\r\n<\/pre>\n<p>\u524d\u4e24\u884c\u4ee3\u7801\u521b\u5efa\u4e86\u4e24\u4e2a\u5173\u952e\u7ed3\u6784\u4f53\uff0c\u7279\u5730\u9ad8\u4eae\u663e\u793a\u3002<\/p>\n<p>\u8fd9\u91cc\u6ca1\u6709\u770b__main_block_desc_0\u53d1\u751f\u7684\u53d8\u5316\uff0c<em><span style=\"color: #808000;\">\u653e\u5230\u540e\u9762\u8ba8\u8bba<\/span><\/em>\u3002<\/p>\n<p>\u4f7f\u7528<span style=\"color: #ff0000;\">__block\u7c7b\u578b\u6307\u793a\u7b26\u7684\u672c\u8d28<\/span>\u5c31\u662f\u5f15\u5165\u4e86__Block_byref_<span style=\"color: #ff0000;\">{$var_name}<\/span>_<span style=\"color: #ff0000;\">{$index}<\/span>\u7ed3\u6784\u4f53\uff0c\u800c\u88ab__block\u5173\u952e\u5b57\u4fee\u9970\u7684\u53d8\u91cf\u5c31\u88ab\u653e\u5230\u8fd9\u4e2a\u7ed3\u6784\u4f53\u4e2d\u3002\u53e6\u5916\uff0cblock\u7ed3\u6784\u4f53\u901a\u8fc7\u5f15\u5165__Block_byref_{$var_name}_{$index}\u6307\u9488\u7c7b\u578b\u7684\u6210\u5458\uff0c\u5f97\u4ee5\u95f4\u63a5\u8bbf\u95ee\u5230\u5916\u90e8\u53d8\u91cf\u3002<\/p>\n<p>\u901a\u8fc7\u8fd9\u6837\u7684\u8bbe\u8ba1\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4fee\u6539\u5916\u90e8\u4f5c\u7528\u57df\u7684\u53d8\u91cf\u4e86\uff0c\u518d\u4e00\u6b21\u5e94\u4e86\u90a3\u53e5\u8bdd\uff1a<\/p>\n<blockquote><p>There is no problem in computer science that can\u2019t be solved by adding another level of indirection.<\/p><\/blockquote>\n<p>\u6307\u9488\u662f\u6211\u4eec\u6700\u7ecf\u5e38\u4f7f\u7528\u7684\u95f4\u63a5\u624b\u6bb5\uff0c\u800c\u8fd9\u91cc\u7684\u672c\u8d28\u4e5f\u662f\u901a\u8fc7\u6307\u9488\u6765\u95f4\u63a5\u8bbf\u95ee\uff0c\u4e3a\u4ec0\u4e48\u8981\u7279\u5730\u5f15\u5165__Block_byref_{$var_name}_{$index}\u7ed3\u6784\u4f53\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4f7f\u7528int *\u6765\u8bbf\u95ee\u5916\u90e8\u53d8\u91cfi\u5462\uff1f<\/p>\n<p>\u53e6\u5916\uff0c__Block_byref_{$var_name}_{$index}\u7ed3\u6784\u4f53\u4e2d\u7684<span style=\"color: #ff0000;\">__forwarding<\/span>\u6307\u9488\u6210\u5458\u6709\u4f55\u4f5c\u7528\uff1f<\/p>\n<p>\u8bf7\u7ee7\u7eed\u5f80\u4e0b\u770b \uff1a\uff09<\/p>\n<h4><span class=\"ez-toc-section\" id=\"5_%E8%83%8C%E5%90%8E%E7%9A%84%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%8A%A8%E4%BD%9C\"><\/span>5. \u80cc\u540e\u7684\u5185\u5b58\u7ba1\u7406\u52a8\u4f5c<span class=\"ez-toc-section-end\"><\/span><\/h4>\n<p>\u5728Objective-C\u4e2d\uff0cblock\u7279\u6027\u7684\u5f15\u5165\u662f<em><span style=\"color: #808000;\">\u4e3a\u4e86\u8ba9\u7a0b\u5e8f\u5458\u53ef\u4ee5\u66f4\u7b80\u6d01\u4f18\u96c5\u5730\u7f16\u5199\u5e76\u53d1\u4ee3\u7801<\/span><\/em>\uff08\u914d\u5408\u770b\u8d77\u6765\u50cf\u654f\u611f\u8bcd\u7684GCD\uff09\u3002\u6bd4\u8f83\u5e38\u89c1\u7684\u5c31\u662f\u5c06block\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u9012\uff0c\u4ee5\u4f9b\u540e\u7eed\u56de\u8c03\u6267\u884c\u3002<\/p>\n<p>\u5148\u770b\u4e00\u6bb5\u5b8c\u6574\u7684\u3001\u53ef\u6267\u884c\u7684\u4ee3\u7801\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\n#import &lt;Foundation\/Foundation.h&gt;\r\n#include &lt;pthread.h&gt;\r\n\r\ntypedef void (^DemoBlock)(void);\r\n\r\nvoid test();\r\nvoid *testBlock(void *blk);\r\n\r\nint main(int argc, const char * argv[])\r\n{\r\n    printf(&quot;Before test()\\n&quot;);\r\n    test();\r\n    printf(&quot;After test()\\n&quot;);\r\n\r\n    sleep(5);\r\n    return 0;\r\n}\r\n\r\nvoid test()\r\n{\r\n    __block int i = 1024;\r\n    void (^blk)(void) = ^{ i = 2048; printf(&quot;%d\\n&quot;, i); };\r\n\r\n    pthread_t thread;\r\n    int ret = pthread_create(&amp;thread, NULL, testBlock, (void *)blk);\r\n    printf(&quot;thread returns : %d\\n&quot;, ret);\r\n\r\n    sleep(3); \/\/ \u8fd9\u91cc\u7761\u77201s\u7684\u8bdd\uff0c\u7a0b\u5e8f\u4f1a\u5d29\u6e83\r\n}\r\n\r\nvoid *testBlock(void *blk)\r\n{\r\n    sleep(2);\r\n\r\n    printf(&quot;testBlock : Begin to exec blk.\\n&quot;);\r\n    DemoBlock demoBlk = (DemoBlock)blk;\r\n    demoBlk();\r\n\r\n    return NULL;\r\n}\r\n<\/pre>\n<p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u4f4d\u4e8etest()\u51fd\u6570\u7684block\u7c7b\u578b\u7684\u53d8\u91cfblk\u5c31\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u9012\u7ed9testBlock\u3002<\/p>\n<p>\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u6210\u529f\u8fd0\u884c\uff0c\u8f93\u51fa\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nBefore test()\r\nthread returns : 0\r\ntestBlock : Begin to exec blk.\r\n2048\r\nAfter test()\r\n<\/pre>\n<p>\u5982\u679c\u6309\u7167\u6ce8\u91ca\uff0c\u5c06test()\u51fd\u6570\u6700\u540e\u4e00\u884c\u6539\u4e3a\u4f11\u77201s\u7684\u8bdd\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u7a0b\u5e8f\u4f1a\u5728\u8f93\u51fa\u5982\u4e0b\u7ed3\u679c\u540e\u5d29\u6e83\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nBefore test()\r\nthread returns : 0\r\nAfter test()\r\ntestBlock : Begin to exec blk.\r\n<\/pre>\n<p>\u4ece\u8f93\u51fa\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u8981\u6267\u884cblk\u7684\u65f6\u5019\uff0ctest()\u5df2\u7ecf\u6267\u884c\u5b8c\u6bd5\u56de\u5230main\u51fd\u6570\u4e2d\uff0c\u5bf9\u5e94\u7684<span style=\"color: #808000;\">\u51fd\u6570\u6808\u4e5f\u5df2\u7ecf\u5c55\u5f00<\/span>\uff0c\u6b64\u65f6\u6808\u4e0a\u7684\u53d8\u91cf\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86\uff0c\u7ee7\u7eed\u8bbf\u95ee\u5bfc\u81f4\u5d29\u6e83\u2014\u2014\u8fd9\u4e5f\u662f\u4e0d\u7528int *\u76f4\u63a5\u8bbf\u95ee\u5916\u90e8\u53d8\u91cfi\u7684\u539f\u56e0\u3002<\/p>\n<h5><span class=\"ez-toc-section\" id=\"51_%E6%8B%B7%E8%B4%9Dblock%E7%BB%93%E6%9E%84%E4%BD%93\"><\/span>5.1 \u62f7\u8d1dblock\u7ed3\u6784\u4f53<span class=\"ez-toc-section-end\"><\/span><\/h5>\n<p>\u4e0a\u6587\u63d0\u5230block\u7ed3\u6784\u4f53__block_impl\u7684\u7b2c\u4e00\u4e2a\u6210\u5458\u662fisa\u6307\u9488\uff0c\u4f7f\u5176\u6210\u4e3aNSObject\u7684\u5b50\u7c7b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u76f8\u5e94\u7684<span style=\"color: #808000;\">\u5185\u5b58\u7ba1\u7406\u673a\u5236<\/span>\u5c06\u5176\u62f7\u8d1d\u5230\u5806\u4e0a\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nvoid test()\r\n{\r\n    __block int i = 1024;\r\n    void (^blk)(void) = ^{ i = 2048; printf(&quot;%d\\n&quot;, i); };\r\n\r\n    pthread_t thread;\r\n    int ret = pthread_create(&amp;thread, NULL, testBlock, (void *)[blk copy]);\r\n    printf(&quot;thread returns : %d\\n&quot;, ret);\r\n\r\n    sleep(1);\r\n}\r\n\r\nvoid *testBlock(void *blk)\r\n{\r\n    sleep(2);\r\n\r\n    printf(&quot;testBlock : Begin to exec blk.\\n&quot;);\r\n    DemoBlock demoBlk = (DemoBlock)blk;\r\n    demoBlk();\r\n    [demoBlk release];\r\n\r\n    returnNULL;\r\n}\r\n<\/pre>\n<p>\u518d\u6b21\u6267\u884c\uff0c\u5f97\u5230\u8f93\u51fa\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nBefore test()\r\nthread returns : 0\r\nAfter test()\r\ntestBlock : Begin to exec blk.\r\n2048\r\n<\/pre>\n<p>\u53ef\u4ee5\u770b\u51fa\uff0c\u5728test()\u51fd\u6570\u6808\u5c55\u5f00\u540e\uff0cdemoBlk\u4ecd\u7136\u53ef\u4ee5\u6210\u529f\u6267\u884c\uff0c\u8fd9\u662f\u7531\u4e8eblk\u5bf9\u5e94\u7684block\u7ed3\u6784\u4f53__main_block_impl_0\u5df2\u7ecf\u5728\u5806\u4e0a\u4e86\u3002<span style=\"color: #808000;\">\u4e0d\u8fc7\u8fd9\u8fd8\u4e0d\u591f<\/span>\u2014\u2014<\/p>\n<h5><span class=\"ez-toc-section\" id=\"52_%E6%8B%B7%E8%B4%9D%E6%8D%95%E8%8E%B7%E7%9A%84%E5%8F%98%E9%87%8F%EF%BC%88_block%E5%8F%98%E9%87%8F%EF%BC%89\"><\/span>5.2 \u62f7\u8d1d\u6355\u83b7\u7684\u53d8\u91cf\uff08<span style=\"color: #ff0000;\">__block<\/span>\u53d8\u91cf\uff09<span class=\"ez-toc-section-end\"><\/span><\/h5>\n<p>\u5728\u62f7\u8d1dblock\u7ed3\u6784\u4f53\u7684\u540c\u65f6\uff0c\u8fd8\u4f1a\u5c06\u6355\u83b7\u7684<span style=\"color: #ff0000;\">__block<\/span>\u53d8\u91cf\uff0c\u5373\u7ed3\u6784\u4f53__Block_byref_i_0\uff0c\u590d\u5236\u5230\u5806\u4e0a\u3002\u8fd9\u4e2a\u4efb\u52a1\u843d\u5728\u524d\u9762\u6ca1\u6709\u8ba8\u8bba\u7684__main_block_desc_0\u7ed3\u6784\u4f53\u8eab\u4e0a\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nstatic void __main_block_copy_0(struct __main_block_impl_0*dst, struct __main_block_impl_0*src) {_Block_object_assign((void*)&amp;dst-&gt;i, (void*)src-&gt;i, 8\/*BLOCK_FIELD_IS_BYREF*\/);}\r\n\r\nstatic void __main_block_dispose_0(struct __main_block_impl_0*src) {_Block_object_dispose((void*)src-&gt;i, 8\/*BLOCK_FIELD_IS_BYREF*\/);}\r\n\r\nstatic struct __main_block_desc_0 {\r\n    unsigned long reserved;\r\n    unsigned long Block_size;\r\n    void (*copy)(struct __main_block_impl_0*, struct __main_block_impl_0*);\r\n    void (*dispose)(struct __main_block_impl_0*);\r\n} __main_block_desc_0_DATA = { 0, sizeof(struct __main_block_impl_0), __main_block_copy_0, __main_block_dispose_0};\r\n<\/pre>\n<p>\u6808\u4e0a\u7684__main_block_impl_0\u7ed3\u6784\u4f53\u4e3asrc\uff0c\u5806\u4e0a\u7684__main_block_impl_0\u7ed3\u6784\u4f53\u4e3adst\uff0c\u5f53\u53d1\u751f\u590d\u5236\u52a8\u4f5c\u65f6\uff0c__main_block_copy_0\u51fd\u6570\u4f1a\u5f97\u5230\u8c03\u7528\uff0c\u5c06src\u7684\u6210\u5458\u53d8\u91cfi\uff0c\u5373__Block_byref_i_0\u7ed3\u6784\u4f53\uff0c\u4e5f<span style=\"color: #808000;\">\u590d\u5236\u5230\u5806\u4e0a<\/span>\u3002<\/p>\n<h5><span class=\"ez-toc-section\" id=\"53_forwarding%E6%8C%87%E9%92%88%E7%9A%84%E4%BD%9C%E7%94%A8\"><\/span>5.3 __forwarding\u6307\u9488\u7684\u4f5c\u7528<span class=\"ez-toc-section-end\"><\/span><\/h5>\n<p>\u5f53\u590d\u5236\u52a8\u4f5c\u5b8c\u6210\u540e\uff0c<span style=\"color: #808000;\">\u6808\u4e0a\u548c\u5806\u4e0a\u90fd\u5b58\u5728<\/span>\u7740__main_block_impl_0\u7ed3\u6784\u4f53\u3002\u5982\u679c\u6808\u4e0a\u3001\u5806\u4e0a\u7684block\u7ed3\u6784\u4f53\u90fd\u5bf9\u6355\u83b7\u7684\u5916\u90e8\u53d8\u91cf\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f1a\u5982\u4f55\uff1f<\/p>\n<p>\u4e0b\u9762\u662f\u4e00\u6bb5\u793a\u4f8b\u4ee3\u7801\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">\r\nvoid test()\r\n{\r\n    __block int i = 1024;\r\n    void (^blk)(void) = ^{ i++; printf(&quot;%d\\n&quot;, i); };\r\n\r\n    pthread_t thread;\r\n    int ret = pthread_create(&amp;thread, NULL, testBlock, (void *)[blk copy]);\r\n    printf(&quot;thread returns : %d\\n&quot;, ret);\r\n\r\n    sleep(1);\r\n    blk();\r\n}\r\n\r\nvoid *testBlock(void *blk)\r\n{\r\n    sleep(2);\r\n\r\n    printf(&quot;testBlock : Begin to exec blk.\\n&quot;);\r\n    DemoBlock demoBlk = (DemoBlock)blk;\r\n    demoBlk();\r\n    [demoBlk release];\r\n\r\n    returnNULL;\r\n}\r\n<\/pre>\n<ol>\n<li>\u5728test()\u51fd\u6570\u4e2d\u8c03\u7528pthread_create\u521b\u5efa\u7ebf\u7a0b\u65f6\uff0c<span style=\"color: #808000;\">blk\u88ab\u590d\u5236\u4e86\u4e00\u4efd\u5230\u5806\u4e0a<\/span>\u4f5c\u4e3atestBlock\u51fd\u6570\u7684\u53c2\u6570\u3002<\/li>\n<li>test()\u51fd\u6570\u4e2d\u7684<span style=\"color: #808000;\">blk\u7ed3\u6784\u4f53\u4f4d\u4e8e\u6808\u4e2d\uff0c\u5728\u4f11\u77201s\u540e\u88ab\u6267\u884c<\/span>\uff0c\u5bf9i\u8fdb\u884c\u81ea\u589e\u52a8\u4f5c\u3002<\/li>\n<li>testBlock\u51fd\u6570\u5728\u4f11\u77202s\u540e\uff0c<span style=\"color: #808000;\">\u6267\u884c\u4f4d\u4e8e\u5806\u4e0a\u7684block\u7ed3\u6784\u4f53<\/span>\uff0c\u8fd9\u91cc\u4e3ademoBlk\u3002<\/li>\n<\/ol>\n<p>\u4e0a\u8ff0\u4ee3\u7801\u6267\u884c\u540e\u8f93\u51fa\uff1a<\/p>\n<pre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\">\r\nBefore test()\r\nthread returns : 0\r\n1025\r\nAfter test()\r\ntestBlock : Begin to exec blk.\r\n1026\r\n<\/pre>\n<p>\u53ef\u89c1\u65e0\u8bba\u662f\u6808\u4e0a\u7684\u8fd8\u662f\u5806\u4e0a\u7684block\u7ed3\u6784\u4f53\uff0c\u4fee\u6539\u7684\u90fd\u662f<span style=\"color: #808000;\">\u540c\u4e00\u4e2a__block\u53d8\u91cf<\/span>\u3002<\/p>\n<p>\u8fd9\u5c31\u662f\u524d\u9762\u63d0\u5230\u7684__forwarding\u6307\u9488\u6210\u5458\u7684\u4f5c\u7528\u4e86\uff1a<\/p>\n<p><span style=\"color: #ff0000;\">\u8d77\u521d<\/span>\uff0c\u6808\u4e0a\u7684__block\u53d8\u91cf\u7684\u6210\u5458\u6307\u9488__forwarding\u6307\u5411__block\u53d8\u91cf\u672c\u8eab\uff0c\u5373\u6808\u4e0a\u7684__Block_byref_i_0\u7ed3\u6784\u4f53\u3002<\/p>\n<p><span style=\"color: #ff0000;\">\u5f53__block\u53d8\u91cf\u88ab\u590d\u5236\u5230\u5806\u4e0a\u540e<\/span>\uff0c\u6808\u4e0a\u7684__block\u53d8\u91cf\u7684__forwarding\u6210\u5458\u4f1a\u6307\u5411\u5806\u4e0a\u7684\u90a3\u4e00\u4efd\u62f7\u8d1d\uff0c\u4ece\u800c\u4fdd\u6301\u4e00\u81f4\u3002<\/p>\n<h4><span class=\"ez-toc-section\" id=\"%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99%EF%BC%9A\"><\/span>\u53c2\u8003\u8d44\u6599\uff1a<span class=\"ez-toc-section-end\"><\/span><\/h4>\n<ul>\n<li><a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/dd293603.aspx\" target=\"_blank\">http:\/\/msdn.microsoft.com\/en-us\/library\/dd293603.aspx<\/a><\/li>\n<li><a href=\"http:\/\/www.cprogramming.com\/c++11\/c++11-lambda-closures.html\" target=\"_blank\">http:\/\/www.cprogramming.com\/c++11\/c++11-lambda-closures.html<\/a><\/li>\n<li><a href=\"http:\/\/developer.apple.com\/library\/ios\/#documentation\/cocoa\/Conceptual\/Blocks\/Articles\/00_Introduction.html\" target=\"_blank\">http:\/\/developer.apple.com\/library\/ios\/#documentation\/cocoa\/Conceptual\/Blocks\/Articles\/00_Introduction.html<\/a><\/li>\n<li><a href=\"http:\/\/en.wikipedia.org\/wiki\/Closure_(computer_science)\" target=\"_blank\">http:\/\/en.wikipedia.org\/wiki\/Closure_(computer_science)<\/a><\/li>\n<\/ul>\n","raw":"","protected":false},"excerpt":{"rendered":"<p>\uff08\u611f\u8c22\u6295\u7a3f\u4eba\u00a0@\u601d\u79bd\u996e\u971c\u00a0\uff09 \u8fd9\u91cc\u4e3b\u8981\u8ba8\u8bba\u7684\u662fC\u8bed\u8a00\u7684\u6269\u5c55\u7279\u6027block\u3002\u8be5\u7279\u6027\u662fApple\u4e3aC\u3001C++\u3001Objective-C\u589e\u52a0\u7684\u6269\u5c55\uff0c\u8ba9\u8fd9\u4e9b\u8bed\u8a00\u53ef\u4ee5\u7528\u7c7bL&#8230;<\/p>\n<p class=\"read-more\"><a class=\"btn btn-default\" href=\"https:\/\/coolshell.cn\/articles\/8309.html\"> Read More<span class=\"screen-reader-text\">  Read More<\/span><\/a><\/p>\n","protected":false},"author":14570,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5],"tags":[59,643,644],"series":[],"aioseo_notices":[],"views":60477,"post_thumbnail_image":"","content_first_image":"","post_medium_image_300":"","post_thumbnail_image_624":"","post_frist_image":"","post_medium_image":"","post_large_image":"","post_full_image":"","post_all_images":[],"videoAdId":"","listAd":"0","listAdId":"","listAdEvery":5,"total_comments":76,"category_name":"C\/C++\u8bed\u8a00","post_date":"2012-09-20","like_count":"0","praiseWord":"\u9f13\u52b1","excitationAd":"0","rewardedVideoAdId":"","detailAdId":"","detailAd":"0","enterpriseMinapp":"0","audios":[],"postImageUrl":"http:\/\/coolshell.cn\/wp-content\/uploads\/2016\/09\/coolshell-360x200.jpg","avatarurls":[],"related_posts":[],"pageviews":60478,"pageviews_wl":19492,"ratings_average":3,"ratings_total":70,"ratings_users":18,"next_post_id":8990,"next_post_title":"Linus\uff1a\u5229\u7528\u4e8c\u7ea7\u6307\u9488\u5220\u9664\u5355\u5411\u94fe\u8868","previous_post_id":8239,"previous_post_title":"\u65e0\u9501\u961f\u5217\u7684\u5b9e\u73b0"}