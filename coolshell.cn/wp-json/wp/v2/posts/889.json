{"id":889,"date":"2009-05-23T15:09:36","date_gmt":"2009-05-23T07:09:36","guid":{"rendered":"http:\/\/coolshell.cn\/?p=889"},"modified":"2009-05-23T15:09:36","modified_gmt":"2009-05-23T07:09:36","slug":"20%e9%9d%9e%e5%b8%b8%e6%9c%89%e7%94%a8%e7%9a%84java%e7%a8%8b%e5%ba%8f%e7%89%87%e6%ae%b5","status":"publish","type":"post","link":"https:\/\/coolshell.cn\/articles\/889.html","title":{"rendered":"20\u975e\u5e38\u6709\u7528\u7684Java\u7a0b\u5e8f\u7247\u6bb5"},"content":{"rendered":"<p>\u4e0b\u9762\u662f20\u4e2a\u975e\u5e38\u6709\u7528\u7684Java\u7a0b\u5e8f\u7247\u6bb5\uff0c\u5e0c\u671b\u80fd\u5bf9\u4f60\u6709\u7528\u3002<\/p>\n<p><strong>1. \u5b57\u7b26\u4e32\u6709\u6574\u578b\u7684\u76f8\u4e92\u8f6c\u6362<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\u00a0\r\nString a = String.valueOf(2);\u00a0\u00a0 \/\/integer to numeric string\u00a0\u00a0\r\nint i = Integer.parseInt(a); \/\/numeric string to an int\u00a0\r\n\r\n<\/pre>\n<p><!--more--><br \/>\n<strong>2. \u5411\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0\u5185\u5bb9<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\u00a0\r\nBufferedWriter out = null;\u00a0\u00a0\r\ntry {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 out = new BufferedWriter(new FileWriter(\u201dfilename\u201d, true));\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 out.write(\u201daString\u201d);\u00a0\u00a0\r\n} catch (IOException e) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 \/\/ error processing code\u00a0\u00a0\r\n} finally {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 if (out != null) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.close();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n}\u00a0\r\n<\/pre>\n<p><strong>3. \u5f97\u5230\u5f53\u524d\u65b9\u6cd5\u7684\u540d\u5b57<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\r\nString methodName = Thread.currentThread().getStackTrace()[1].getMethodName();\u00a0\r\n<\/pre>\n<p><strong>4. \u8f6c\u5b57\u7b26\u4e32\u5230\u65e5\u671f<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\u00a0\r\njava.util.Date = java.text.DateFormat.getDateInstance().parse(date String);\u00a0\r\n<\/pre>\n<p>\u6216\u8005\u662f\uff1a<\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\u00a0\r\nSimpleDateFormat format = new SimpleDateFormat( &quot;dd.MM.yyyy&quot; );\u00a0\u00a0\r\nDate date = format.parse( myString );\u00a0\r\n<\/pre>\n<p><strong>5. \u4f7f\u7528JDBC\u94fe\u63a5Oracle<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\r\npublic class OracleJdbcTest\u00a0\u00a0\r\n{\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 String driverClass = &quot;oracle.jdbc.driver.OracleDriver&quot;;\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 Connection con;\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 public void init(FileInputStream fs) throws ClassNotFoundException, SQLException, FileNotFoundException, IOException\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Properties props = new Properties();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 props.load(fs);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String url = props.getProperty(&quot;db.url&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String userName = props.getProperty(&quot;db.user&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String password = props.getProperty(&quot;db.password&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Class.forName(driverClass);\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 con=DriverManager.getConnection(url, userName, password);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 public void fetch() throws SQLException, IOException\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 PreparedStatement ps = con.prepareStatement(&quot;select SYSDATE from dual&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ResultSet rs = ps.executeQuery();\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while (rs.next())\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ do the thing you do\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 rs.close();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ps.close();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 public static void main(String[] args)\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 OracleJdbcTest test = new OracleJdbcTest();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 test.init();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 test.fetch();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n}\u00a0\r\n<\/pre>\n<p><strong>6.\u00a0\u628a Java util.Date\u00a0\u8f6c\u6210 sql.Date<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\r\njava.util.Date utilDate = new java.util.Date();\u00a0\u00a0\r\njava.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());\u00a0\r\n<\/pre>\n<p><strong>7. \u4f7f\u7528NIO\u8fdb\u884c\u5feb\u901f\u7684\u6587\u4ef6\u62f7\u8d1d<\/strong><br \/>\n\u00a0<\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\r\npublic static void fileCopy( File in, File out )\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws IOException\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 FileChannel inChannel = new FileInputStream( in ).getChannel();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 FileChannel outChannel = new FileOutputStream( out ).getChannel();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 try\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\r\n\/\/\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 inChannel.transferTo(0, inChannel.size(), outChannel);\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ original -- apparently has trouble copying large files on Windows\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ magic number for Windows, 64Mb - 32Kb)\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int maxCount = (64 * 1024 * 1024) - (32 * 1024);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 long size = inChannel.size();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 long position = 0;\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while ( position &lt; size )\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 position += inChannel.transferTo( position, maxCount, outChannel );\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 finally\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if ( inChannel != null )\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 inChannel.close();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if ( outChannel != null )\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 outChannel.close();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\r\n<\/pre>\n<p><strong>8. \u521b\u5efa\u56fe\u7247\u7684\u7f29\u7565\u56fe<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\r\nprivate void createThumbnail(String filename, int thumbWidth, int thumbHeight, int quality, String outFilename)\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws InterruptedException, FileNotFoundException, IOException\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ load image from filename\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Image image = Toolkit.getDefaultToolkit().getImage(filename);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MediaTracker mediaTracker = new MediaTracker(new Container());\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mediaTracker.addImage(image, 0);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mediaTracker.waitForID(0);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ use this to test for errors at this point: System.out.println(mediaTracker.isErrorAny());\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ determine thumbnail size from WIDTH and HEIGHT\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 double thumbRatio = (double)thumbWidth \/ (double)thumbHeight;\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int imageWidth = image.getWidth(null);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int imageHeight = image.getHeight(null);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 double imageRatio = (double)imageWidth \/ (double)imageHeight;\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (thumbRatio &lt; imageRatio) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 thumbHeight = (int)(thumbWidth \/ imageRatio);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 thumbWidth = (int)(thumbHeight * imageRatio);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ draw original image to thumbnail image object and\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ scale it to the new size on-the-fly\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 BufferedImage thumbImage = new BufferedImage(thumbWidth, thumbHeight, BufferedImage.TYPE_INT_RGB);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Graphics2D graphics2D = thumbImage.createGraphics();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 graphics2D.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 graphics2D.drawImage(image, 0, 0, thumbWidth, thumbHeight, null);\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ save thumbnail image to outFilename\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(outFilename));\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder(out);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 JPEGEncodeParam param = encoder.getDefaultJPEGEncodeParam(thumbImage);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 quality = Math.max(0, Math.min(quality, 100));\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 param.setQuality((float)quality \/ 100.0f, false);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 encoder.setJPEGEncodeParam(param);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 encoder.encode(thumbImage);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.close();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\r\n<\/pre>\n<p><strong>9.\u00a0\u521b\u5efa JSON \u683c\u5f0f\u7684\u6570\u636e<\/strong><\/p>\n<p>\u8bf7\u5148\u9605\u8bfb<a href=\"http:\/\/viralpatel.net\/blogs\/2009\/02\/creating-parsing-json-data-with-java-servlet-struts-jsp-json.html\"><span style=\"color: #366799;\">\u8fd9\u7bc7\u6587\u7ae0<\/span><\/a> \u4e86\u89e3\u4e00\u4e9b\u7ec6\u8282\uff0c<br \/>\n\u5e76\u4e0b\u9762\u8fd9\u4e2aJAR \u6587\u4ef6\uff1a<a href=\"http:\/\/viralpatel.net\/blogs\/download\/json\/json-rpc-1.0.jar\"><span style=\"color: #366799;\">json-rpc-1.0.jar (75 kb)<\/span><\/a><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\r\nimport org.json.JSONObject;\u00a0\u00a0\r\n...\u00a0\u00a0\r\n...\u00a0\u00a0\r\nJSONObject json = new JSONObject();\u00a0\u00a0\r\njson.put(&quot;city&quot;, &quot;Mumbai&quot;);\u00a0\u00a0\r\njson.put(&quot;country&quot;, &quot;India&quot;);\u00a0\u00a0\r\n...\u00a0\u00a0\r\nString output = json.toString();\u00a0\u00a0\r\n...\u00a0\r\n<\/pre>\n<p><strong>10. \u4f7f\u7528iText JAR\u751f\u6210PDF<\/strong><\/p>\n<p>\u9605\u8bfb\u8fd9\u7bc7<a href=\"http:\/\/viralpatel.net\/blogs\/2009\/04\/generate-pdf-file-in-java-using-itext-jar.html\"><span style=\"color: #366799;\">\u6587\u7ae0<\/span><\/a> \u4e86\u89e3\u66f4\u591a\u7ec6\u8282<\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\u00a0\r\nimport java.io.File;\u00a0\u00a0\r\nimport java.io.FileOutputStream;\u00a0\u00a0\r\nimport java.io.OutputStream;\u00a0\u00a0\r\nimport java.util.Date;\u00a0\u00a0\r\n\u00a0\r\nimport com.lowagie.text.Document;\u00a0\u00a0\r\nimport com.lowagie.text.Paragraph;\u00a0\u00a0\r\nimport com.lowagie.text.pdf.PdfWriter;\u00a0\u00a0\r\n\u00a0\r\npublic class GeneratePDF {\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 public static void main(String[] args) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 try {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 OutputStream file = new FileOutputStream(new File(&quot;C:\\\\Test.pdf&quot;));\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Document document = new Document();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 PdfWriter.getInstance(document, file);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 document.open();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 document.add(new Paragraph(&quot;Hello Kiran&quot;));\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 document.add(new Paragraph(new Date().toString()));\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 document.close();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 file.close();\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 } catch (Exception e) {\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 e.printStackTrace();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n}\u00a0\r\n<\/pre>\n<p><strong>11. HTTP \u4ee3\u7406\u8bbe\u7f6e<\/strong><\/p>\n<p>\u9605\u8bfb\u8fd9\u7bc7\u00a0<a href=\"http:\/\/viralpatel.net\/blogs\/2009\/04\/http-proxy-setting-java-setting-proxy-java.html\"><span style=\"color: #366799;\">\u6587\u7ae0<\/span><\/a> \u4e86\u89e3\u66f4\u591a\u7ec6\u8282\u3002<\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\u00a0\r\nSystem.getProperties().put(&quot;http.proxyHost&quot;, &quot;someProxyURL&quot;);\u00a0\u00a0\r\nSystem.getProperties().put(&quot;http.proxyPort&quot;, &quot;someProxyPort&quot;);\u00a0\u00a0\r\nSystem.getProperties().put(&quot;http.proxyUser&quot;, &quot;someUserName&quot;);\u00a0\u00a0\r\nSystem.getProperties().put(&quot;http.proxyPassword&quot;, &quot;somePassword&quot;);\u00a0\r\n<\/pre>\n<p><strong>12. \u5355\u5b9e\u4f8bSingleton \u793a\u4f8b<\/strong><\/p>\n<p>\u8bf7\u5148\u9605\u8bfb\u8fd9\u7bc7<a href=\"http:\/\/viralpatel.net\/blogs\/2009\/01\/java-singleton-design-pattern-tutorial-example-singleton-j2ee-design-pattern.html\"><span style=\"color: #366799;\">\u6587\u7ae0<\/span><\/a> \u4e86\u89e3\u66f4\u591a\u4fe1\u606f<\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\u00a0\r\npublic class SimpleSingleton {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 private static SimpleSingleton singleInstance =\u00a0 new SimpleSingleton();\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 \/\/Marking default constructor private\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 \/\/to avoid direct instantiation.\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 private SimpleSingleton() {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 \/\/Get instance for class SimpleSingleton\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 public static SimpleSingleton getInstance() {\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return singleInstance;\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n}\u00a0\r\n<\/pre>\n<p>\u53e6\u4e00\u79cd\u5b9e\u73b0<\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\r\npublic enum SimpleSingleton {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 INSTANCE;\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 public void doSomething() {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n}\u00a0\u00a0\r\n\u00a0\r\n\/\/Call the method from Singleton:\u00a0\u00a0\r\nSimpleSingleton.INSTANCE.doSomething();\u00a0\r\n<\/pre>\n<p><strong>13. \u6293\u5c4f\u7a0b\u5e8f<\/strong><\/p>\n<p>\u9605\u8bfb\u8fd9\u7bc7<a href=\"http:\/\/viralpatel.net\/blogs\/2009\/01\/how-to-take-screen-shots-in-java-taking-screenshots-java.html\"><span style=\"color: #366799;\">\u6587\u7ae0<\/span><\/a> \u83b7\u5f97\u66f4\u591a\u4fe1\u606f\u3002<\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\r\nimport java.awt.Dimension;\u00a0\u00a0\r\nimport java.awt.Rectangle;\u00a0\u00a0\r\nimport java.awt.Robot;\u00a0\u00a0\r\nimport java.awt.Toolkit;\u00a0\u00a0\r\nimport java.awt.image.BufferedImage;\u00a0\u00a0\r\nimport javax.imageio.ImageIO;\u00a0\u00a0\r\nimport java.io.File;\u00a0\u00a0\r\n\u00a0\r\n...\u00a0\u00a0\r\n\u00a0\r\npublic void captureScreen(String fileName) throws Exception {\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0 Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\u00a0\u00a0\r\n\u00a0\u00a0 Rectangle screenRectangle = new Rectangle(screenSize);\u00a0\u00a0\r\n\u00a0\u00a0 Robot robot = new Robot();\u00a0\u00a0\r\n\u00a0\u00a0 BufferedImage image = robot.createScreenCapture(screenRectangle);\u00a0\u00a0\r\n\u00a0\u00a0 ImageIO.write(image, &quot;png&quot;, new File(fileName));\u00a0\u00a0\r\n\u00a0\r\n}\u00a0\u00a0\r\n...\u00a0\r\n<\/pre>\n<p>\u00a0<\/p>\n<p>\u00a0<\/p>\n<p><strong>14. \u5217\u51fa\u6587\u4ef6\u548c\u76ee\u5f55<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\r\nFile dir = new File(&quot;directoryName&quot;);\u00a0\u00a0\r\n\u00a0 String[] children = dir.list();\u00a0\u00a0\r\n\u00a0 if (children == null) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ Either dir does not exist or is not a directory\u00a0\u00a0\r\n\u00a0 } else {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 for (int i=0; i &lt; children.length; i++) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ Get filename of file or directory\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String filename = children[i];\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0 }\u00a0\u00a0\r\n\u00a0\r\n\u00a0 \/\/ It is also possible to filter the list of returned files.\u00a0\u00a0\r\n\u00a0 \/\/ This example does not return any files that start with `.&#039;.\u00a0\u00a0\r\n\u00a0 FilenameFilter filter = new FilenameFilter() {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 public boolean accept(File dir, String name) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return !name.startsWith(&quot;.&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0 };\u00a0\u00a0\r\n\u00a0 children = dir.list(filter);\u00a0\u00a0\r\n\u00a0\r\n\u00a0 \/\/ The list of files can also be retrieved as File objects\u00a0\u00a0\r\n\u00a0 File[] files = dir.listFiles();\u00a0\u00a0\r\n\u00a0\r\n\u00a0 \/\/ This filter only returns directories\u00a0\u00a0\r\n\u00a0 FileFilter fileFilter = new FileFilter() {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 public boolean accept(File file) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return file.isDirectory();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0 };\u00a0\u00a0\r\n\u00a0 files = dir.listFiles(fileFilter);\u00a0\r\n<\/pre>\n<p><strong>15. \u521b\u5efaZIP\u548cJAR\u6587\u4ef6<br \/>\n<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\u00a0\r\nimport java.util.zip.*;\u00a0\u00a0\r\nimport java.io.*;\u00a0\u00a0\r\n\u00a0\r\npublic class ZipIt {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 public static void main(String args[]) throws IOException {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (args.length &lt; 2) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.err.println(&quot;usage: java ZipIt Zip.zip file1 file2 file3&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.exit(-1);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 File zipFile = new File(args[0]);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (zipFile.exists()) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.err.println(&quot;Zip file already exists, please try another&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.exit(-2);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 FileOutputStream fos = new FileOutputStream(zipFile);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ZipOutputStream zos = new ZipOutputStream(fos);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int bytesRead;\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 byte[] buffer = new byte[1024];\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 CRC32 crc = new CRC32();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for (int i=1, n=args.length; i &lt; n; i++) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String name = args[i];\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 File file = new File(name);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (!file.exists()) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.err.println(&quot;Skipping: &quot; + name);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 continue;\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 BufferedInputStream bis = new BufferedInputStream(\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 new FileInputStream(file));\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 crc.reset();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while ((bytesRead = bis.read(buffer)) != -1) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 crc.update(buffer, 0, bytesRead);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bis.close();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ Reset to beginning of input stream\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bis = new BufferedInputStream(\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 new FileInputStream(file));\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ZipEntry entry = new ZipEntry(name);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 entry.setMethod(ZipEntry.STORED);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 entry.setCompressedSize(file.length());\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 entry.setSize(file.length());\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 entry.setCrc(crc.getValue());\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 zos.putNextEntry(entry);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while ((bytesRead = bis.read(buffer)) != -1) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 zos.write(buffer, 0, bytesRead);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bis.close();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 zos.close();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n}\u00a0\r\n<\/pre>\n<p><strong>16. \u89e3\u6790\/\u8bfb\u53d6XML \u6587\u4ef6<\/strong><\/p>\n<p>XML\u6587\u4ef6<br \/>\n\u00a0<\/p>\n<pre data-enlighter-language=\"xml\" class=\"EnlighterJSRAW\">\r\n&lt;?xml version=&quot;1.0&quot;?&gt;\u00a0\r\n&lt;students&gt;\u00a0\r\n\u00a0\u00a0\u00a0 &lt;student&gt;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;name&gt;John&lt;\/name&gt;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;grade&gt;B&lt;\/grade&gt;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;age&gt;12&lt;\/age&gt;\u00a0\r\n\u00a0\u00a0\u00a0 &lt;\/student&gt;\u00a0\r\n\u00a0\u00a0\u00a0 &lt;student&gt;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;name&gt;Mary&lt;\/name&gt;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;grade&gt;A&lt;\/grade&gt;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;age&gt;11&lt;\/age&gt;\u00a0\r\n\u00a0\u00a0\u00a0 &lt;\/student&gt;\u00a0\r\n\u00a0\u00a0\u00a0 &lt;student&gt;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;name&gt;Simon&lt;\/name&gt;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;grade&gt;A&lt;\/grade&gt;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;age&gt;18&lt;\/age&gt;\u00a0\r\n\u00a0\u00a0\u00a0 &lt;\/student&gt;\u00a0\r\n&lt;\/students&gt;\u00a0\r\n<\/pre>\n<p>Java\u4ee3\u7801<\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\u00a0\r\npackage net.viralpatel.java.xmlparser;\u00a0\u00a0\r\n\u00a0\r\nimport java.io.File;\u00a0\u00a0\r\nimport javax.xml.parsers.DocumentBuilder;\u00a0\u00a0\r\nimport javax.xml.parsers.DocumentBuilderFactory;\u00a0\u00a0\r\n\u00a0\r\nimport org.w3c.dom.Document;\u00a0\u00a0\r\nimport org.w3c.dom.Element;\u00a0\u00a0\r\nimport org.w3c.dom.Node;\u00a0\u00a0\r\nimport org.w3c.dom.NodeList;\u00a0\u00a0\r\n\u00a0\r\npublic class XMLParser {\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 public void getAllUserNames(String fileName) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 try {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 DocumentBuilder db = dbf.newDocumentBuilder();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 File file = new File(fileName);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (file.exists()) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Document doc = db.parse(file);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Element docEle = doc.getDocumentElement();\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ Print root element of the document\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(&quot;Root element of the document: &quot;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 + docEle.getNodeName());\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 NodeList studentList = docEle.getElementsByTagName(&quot;student&quot;);\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ Print total student elements in document\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .println(&quot;Total students: &quot; + studentList.getLength());\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (studentList != null &amp;&amp; studentList.getLength() &gt; 0) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for (int i = 0; i &lt; studentList.getLength(); i++) {\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Node node = studentList.item(i);\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (node.getNodeType() == Node.ELEMENT_NODE) {\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .println(&quot;=====================&quot;);\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Element e = (Element) node;\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 NodeList nodeList = e.getElementsByTagName(&quot;name&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(&quot;Name: &quot;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 + nodeList.item(0).getChildNodes().item(0)\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .getNodeValue());\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 nodeList = e.getElementsByTagName(&quot;grade&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(&quot;Grade: &quot;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 + nodeList.item(0).getChildNodes().item(0)\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .getNodeValue());\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 nodeList = e.getElementsByTagName(&quot;age&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(&quot;Age: &quot;\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 + nodeList.item(0).getChildNodes().item(0)\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .getNodeValue());\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.exit(1);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 } catch (Exception e) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(e);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 public static void main(String[] args) {\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 XMLParser parser = new XMLParser();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 parser.getAllUserNames(&quot;c:\\\\test.xml&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n}\u00a0\r\n<\/pre>\n<p><strong>17.\u00a0\u628a Array\u00a0\u8f6c\u6362\u6210 Map\u00a0<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\u00a0\r\nimport java.util.Map;\u00a0\u00a0\r\nimport org.apache.commons.lang.ArrayUtils;\u00a0\u00a0\r\n\u00a0\r\npublic class Main {\u00a0\u00a0\r\n\u00a0\r\n\u00a0 public static void main(String[] args) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 String[][] countries = { { &quot;United States&quot;, &quot;New York&quot; }, { &quot;United Kingdom&quot;, &quot;London&quot; },\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 { &quot;Netherland&quot;, &quot;Amsterdam&quot; }, { &quot;Japan&quot;, &quot;Tokyo&quot; }, { &quot;France&quot;, &quot;Paris&quot; } };\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 Map countryCapitals = ArrayUtils.toMap(countries);\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 System.out.println(&quot;Capital of Japan is &quot; + countryCapitals.get(&quot;Japan&quot;));\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 System.out.println(&quot;Capital of France is &quot; + countryCapitals.get(&quot;France&quot;));\u00a0\u00a0\r\n\u00a0 }\u00a0\u00a0\r\n}\u00a0\r\n<\/pre>\n<p><strong>18. \u53d1\u9001\u90ae\u4ef6<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\r\nimport javax.mail.*;\u00a0\u00a0\r\nimport javax.mail.internet.*;\u00a0\u00a0\r\nimport java.util.*;\u00a0\u00a0\r\n\u00a0\r\npublic void postMail( String recipients[ ], String subject, String message , String from) throws MessagingException\u00a0\u00a0\r\n{\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 boolean debug = false;\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0\u00a0 \/\/Set the host smtp address\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0 Properties props = new Properties();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0 props.put(&quot;mail.smtp.host&quot;, &quot;smtp.example.com&quot;);\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 \/\/ create some properties and get the default Session\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 Session session = Session.getDefaultInstance(props, null);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 session.setDebug(debug);\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 \/\/ create a message\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 Message msg = new MimeMessage(session);\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 \/\/ set the from and to address\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 InternetAddress addressFrom = new InternetAddress(from);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 msg.setFrom(addressFrom);\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 InternetAddress[] addressTo = new InternetAddress[recipients.length];\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 for (int i = 0; i &lt; recipients.length; i++)\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 addressTo[i] = new InternetAddress(recipients[i]);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 msg.setRecipients(Message.RecipientType.TO, addressTo);\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 \/\/ Optional : You can also set your custom headers in the Email if you Want\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 msg.addHeader(&quot;MyHeaderName&quot;, &quot;myHeaderValue&quot;);\u00a0\u00a0\r\n\u00a0\r\n\u00a0\u00a0\u00a0 \/\/ Setting the Subject and Content Type\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 msg.setSubject(subject);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 msg.setContent(message, &quot;text\/plain&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 Transport.send(msg);\u00a0\u00a0\r\n}\u00a0\r\n<\/pre>\n<p><strong>19. \u53d1\u9001\u4ee3\u6570\u636e\u7684HTTP \u8bf7\u6c42<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\u00a0\r\nimport java.io.BufferedReader;\u00a0\u00a0\r\nimport java.io.InputStreamReader;\u00a0\u00a0\r\nimport java.net.URL;\u00a0\u00a0\r\n\u00a0\r\npublic class Main {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 public static void main(String[] args)\u00a0 {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 try {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 URL my_url = new URL(&quot;https:\/\/coolshell.cn\/&quot;);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 BufferedReader br = new BufferedReader(new InputStreamReader(my_url.openStream()));\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String strTemp = &quot;&quot;;\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(null != (strTemp = br.readLine())){\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(strTemp);\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 } catch (Exception ex) {\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ex.printStackTrace();\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n\u00a0\u00a0\u00a0 }\u00a0\u00a0\r\n}\r\n<\/pre>\n<p><strong>20. \u6539\u53d8\u6570\u7ec4\u7684\u5927\u5c0f<\/strong><\/p>\n<pre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\">\u00a0\r\n\/**\u00a0\r\n* Reallocates an array with a new size, and copies the contents\u00a0\r\n* of the old array to the new array.\u00a0\r\n* @param oldArray\u00a0 the old array, to be reallocated.\u00a0\r\n* @param newSize\u00a0\u00a0 the new array size.\u00a0\r\n* @return\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 A new array with the same contents.\u00a0\r\n*\/\u00a0\r\nprivate static Object resizeArray (Object oldArray, int newSize) {\u00a0\u00a0\r\n\u00a0\u00a0 int oldSize = java.lang.reflect.Array.getLength(oldArray);\u00a0\u00a0\r\n\u00a0\u00a0 Class elementType = oldArray.getClass().getComponentType();\u00a0\u00a0\r\n\u00a0\u00a0 Object newArray = java.lang.reflect.Array.newInstance(\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 elementType,newSize);\u00a0\u00a0\r\n\u00a0\u00a0 int preserveLength = Math.min(oldSize,newSize);\u00a0\u00a0\r\n\u00a0\u00a0 if (preserveLength &gt; 0)\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.arraycopy (oldArray,0,newArray,0,preserveLength);\u00a0\u00a0\r\n\u00a0\u00a0 return newArray;\u00a0\u00a0\r\n}\u00a0\u00a0\r\n\u00a0\r\n\/\/ Test routine for resizeArray().\u00a0\u00a0\r\npublic static void main (String[] args) {\u00a0\u00a0\r\n\u00a0\u00a0 int[] a = {1,2,3};\u00a0\u00a0\r\n\u00a0\u00a0 a = (int[])resizeArray(a,5);\u00a0\u00a0\r\n\u00a0\u00a0 a[3] = 4;\u00a0\u00a0\r\n\u00a0\u00a0 a[4] = 5;\u00a0\u00a0\r\n\u00a0\u00a0 for (int i=0; i&lt;a.length; i++)\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println (a[i]);\u00a0\u00a0\r\n}\r\n<\/pre>\n<p><strong>(\u5168\u6587\u5b8c)<\/strong><\/p>\n","raw":"","protected":false},"excerpt":{"rendered":"<p>\u4e0b\u9762\u662f20\u4e2a\u975e\u5e38\u6709\u7528\u7684Java\u7a0b\u5e8f\u7247\u6bb5\uff0c\u5e0c\u671b\u80fd\u5bf9\u4f60\u6709\u7528\u3002 1. \u5b57\u7b26\u4e32\u6709\u6574\u578b\u7684\u76f8\u4e92\u8f6c\u6362 \u00a0 String a = String.valueOf(2);\u00a0\u00a0 \/\/&#8230;<\/p>\n<p class=\"read-more\"><a class=\"btn btn-default\" href=\"https:\/\/coolshell.cn\/articles\/889.html\"> Read More<span class=\"screen-reader-text\">  Read More<\/span><\/a><\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[4,3],"tags":[13],"series":[],"aioseo_notices":[],"views":24071,"post_thumbnail_image":"","content_first_image":"","post_medium_image_300":"","post_thumbnail_image_624":"","post_frist_image":"","post_medium_image":"","post_large_image":"","post_full_image":"","post_all_images":[],"videoAdId":"","listAd":"0","listAdId":"","listAdEvery":5,"total_comments":15,"category_name":"Java\u8bed\u8a00","post_date":"2009-05-23","like_count":"0","praiseWord":"\u9f13\u52b1","excitationAd":"0","rewardedVideoAdId":"","detailAdId":"","detailAd":"0","enterpriseMinapp":"0","audios":[],"postImageUrl":"http:\/\/coolshell.cn\/wp-content\/uploads\/2016\/09\/coolshell-360x200.jpg","avatarurls":[],"related_posts":[],"pageviews":24072,"pageviews_wl":22034,"ratings_average":4,"ratings_total":100,"ratings_users":23,"next_post_id":909,"next_post_title":"7\u4e2a\u514d\u8d39\u5f3a\u5927\u7684Ajax\u6587\u4ef6\u7ba1\u7406\u5668","previous_post_id":878,"previous_post_title":"\u4e00\u4e2aC\u7684\u5e8f\u5217\u5316\u5e93tpl"}