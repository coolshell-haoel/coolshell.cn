{"id":8990,"date":"2013-02-04T08:33:20","date_gmt":"2013-02-04T00:33:20","guid":{"rendered":"http:\/\/coolshell.cn\/?p=8990"},"modified":"2013-02-04T15:12:58","modified_gmt":"2013-02-04T07:12:58","slug":"linus-torvalds%ef%bc%9a%e5%be%88%e5%a4%9a%e4%ba%ba%e4%b8%8d%e4%ba%86%e8%a7%a3%e5%a6%82%e4%bd%95%e5%86%99%e6%a0%b8%e5%bf%83%e5%ba%95%e5%b1%82%e4%bb%a3%e7%a0%81","status":"publish","type":"post","link":"https:\/\/coolshell.cn\/articles\/8990.html","title":{"rendered":"Linus\uff1a\u5229\u7528\u4e8c\u7ea7\u6307\u9488\u5220\u9664\u5355\u5411\u94fe\u8868"},"content":{"rendered":"<p><strong>\u611f\u8c22\u7f51\u53cbfull_of_bull\u6295\u9012\u6b64\u6587<\/strong>\uff08\u6ce8\uff1a\u6b64\u6587\u6700\u521d\u53d1\u8868\u5728\u8fd9\u4e2a<a href=\"http:\/\/www.oldlinux.org\/oldlinux\/viewthread.php?tid=14575&amp;extra=page%3D1\" target=\"_blank\">\u8fd9\u91cc<\/a>\uff0c\u6211\u5bf9\u539f\u6587\u540e\u534a\u6bb5\u4fee\u6539\u4e86\u8bb8\u591a\uff0c\u5e76\u52a0\u5165\u4e86\u63d2\u56fe\uff09<\/p>\n<p>Linus\u5927\u5a76\u5728<a href=\"http:\/\/meta.slashdot.org\/story\/12\/10\/11\/0030249\/linus-torvalds-answers-your-questions\" target=\"_blank\">slashdot<\/a>\u4e0a\u56de\u7b54\u4e00\u4e9b\u7f16\u7a0b\u7231\u597d\u8005\u7684\u63d0\u95ee\uff0c\u5176\u4e2d\u4e00\u4e2a\u4eba\u95ee\u4ed6\u4ec0\u4e48\u6837\u7684\u4ee3\u7801\u662f\u4ed6\u6240\u559c\u597d\u7684\uff0c\u5927\u5a76\u8868\u8ff0\u4e86\u81ea\u5df1\u4e00\u4e9b\u89c2\u70b9\u4e4b\u540e\uff0c\u4e3e\u4e86\u4e00\u4e2a\u6307\u9488\u7684\u4f8b\u5b50\uff0c\u89e3\u91ca\u4e86\u4ec0\u4e48\u624d\u662f<strong>core low-level coding<\/strong>\u3002<\/p>\n<p>\u4e0b\u9762\u662fLinus\u7684\u6559\u5b66\u539f\u6587\u53ca\u7ffb\u8bd1\u2014\u2014<\/p>\n<p style=\"padding-left: 30px;\">\u201cAt the opposite end of the spectrum, I actually wish more people understood the really core low-level kind of coding. Not big, complex stuff like the lockless name lookup, but simply good use of pointers-to-pointers etc. For example, I&#8217;ve seen too many people who delete a singly-linked list entry by keeping track of the &#8220;prev&#8221; entry, and then to delete the entry, doing something like\u3002\uff08\u5728\u8fd9\u6bb5\u8bdd\u7684\u6700\u540e\uff0c\u6211\u5b9e\u9645\u4e0a\u5e0c\u671b\u66f4\u591a\u7684\u4eba\u4e86\u89e3\u4ec0\u4e48\u662f\u771f\u6b63\u7684\u6838\u5fc3\u5e95\u5c42\u4ee3\u7801\u3002\u8fd9\u5e76\u4e0d\u50cf\u65e0\u9501\u6587\u4ef6\u540d\u67e5\u8be2\uff08\u6ce8\uff1a\u53ef\u80fd\u662fgit\u6e90\u7801\u91cc\u7684\u8bbe\u8ba1\uff09\u90a3\u6837\u5e9e\u5927\u3001\u590d\u6742\uff0c\u53ea\u662f\u4ec5\u4ec5\u50cf\u8bf8\u5982\u4f7f\u7528\u4e8c\u7ea7\u6307\u9488\u90a3\u6837\u7b80\u5355\u7684\u6280\u672f\u3002\u4f8b\u5982\uff0c\u6211\u89c1\u8fc7\u5f88\u591a\u4eba\u5728\u5220\u9664\u4e00\u4e2a\u5355\u9879\u94fe\u8868\u7684\u65f6\u5019\uff0c\u7ef4\u62a4\u4e86\u4e00\u4e2a&#8221;prev&#8221;\u8868\u9879\u6307\u9488\uff0c\u7136\u540e\u5220\u9664\u5f53\u524d\u8868\u9879\uff0c\u5c31\u50cf\u8fd9\u6837\uff09\u201d<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">if (prev)\r\n    prev-&gt;next = entry-&gt;next;\r\nelse\r\n    list_head = entry-&gt;next;<\/pre>\n<p style=\"padding-left: 30px;\">and whenever I see code like that, I just go &#8220;This person doesn&#8217;t understand pointers&#8221;. And it&#8217;s sadly quite common.\uff08\u5f53\u6211\u770b\u5230\u8fd9\u6837\u7684\u4ee3\u7801\u65f6\uff0c\u6211\u5c31\u4f1a\u60f3\u201c\u8fd9\u4e2a\u4eba\u4e0d\u4e86\u89e3\u6307\u9488\u201d\u3002\u4ee4\u4eba\u96be\u8fc7\u7684\u662f\u8fd9\u592a\u5e38\u89c1\u4e86\u3002\uff09<\/p>\n<p><!--more--><\/p>\n<p style=\"padding-left: 30px;\">People who understand pointers just use a &#8220;pointer to the entry pointer&#8221;, and initialize that with the address of the list_head. And then as they traverse the list, they can remove the entry without using any conditionals, by just doing a &#8220;*pp = entry-&gt;next&#8221;. \uff08\u4e86\u89e3\u6307\u9488\u7684\u4eba\u4f1a\u4f7f\u7528\u94fe\u8868\u5934\u7684\u5730\u5740\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u201c\u6307\u5411\u8282\u70b9\u6307\u9488\u7684\u6307\u9488\u201d\u3002\u5f53\u904d\u5386\u94fe\u8868\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4e0d\u7528\u4efb\u4f55\u6761\u4ef6\u5224\u65ad\uff08\u6ce8\uff1a\u6307prev\u662f\u5426\u4e3a\u94fe\u8868\u5934\uff09\u5c31\u80fd\u79fb\u9664\u67d0\u4e2a\u8282\u70b9\uff0c\u53ea\u8981\u5199)<\/p>\n<p><code data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">*pp = entry-&gt;next<\/code><\/p>\n<p style=\"padding-left: 30px;\">So there&#8217;s lots of pride in doing the small details right. It may not be big and important code, but I do like seeing code where people really thought about the details, and clearly also were thinking about the compiler being able to generate efficient code (rather than hoping that the compiler is so smart that it can make efficient code *despite* the state of the original source code). \uff08\u7ea0\u6b63\u7ec6\u8282\u662f\u4ee4\u4eba\u81ea\u8c6a\u7684\u4e8b\u3002\u4e5f\u8bb8\u8fd9\u6bb5\u4ee3\u7801\u5e76\u975e\u5e9e\u5927\u548c\u91cd\u8981\uff0c<strong>\u4f46\u6211\u559c\u6b22\u770b\u90a3\u4e9b\u6ce8\u91cd\u4ee3\u7801\u7ec6\u8282\u7684\u4eba\u5199\u7684\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u6e05\u695a\u5730\u4e86\u89e3\u5982\u4f55\u624d\u80fd\u7f16\u8bd1\u51fa\u6709\u6548\u4ee3\u7801<\/strong>\uff08\u800c\u4e0d\u662f\u5bc4\u671b\u4e8e\u806a\u660e\u7684\u7f16\u8bd1\u5668\u6765\u4ea7\u751f\u6709\u6548\u4ee3\u7801\uff0c\u5373\u4f7f\u662f\u90a3\u4e9b\u539f\u59cb\u7684\u6c47\u7f16\u4ee3\u7801\uff09\uff09\u3002<\/p>\n<p>Linus\u4e3e\u4e86\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u7684\u4f8b\u5b50\uff0c\u4f46\u7ed9\u51fa\u7684\u4ee3\u7801\u592a\u77ed\u4e86\uff0c\u4e00\u822c\u7684\u4eba\u5f88\u96be\u641e\u660e\u767d\u8fd9\u4e24\u4e2a\u4ee3\u7801\u540e\u9762\u7684\u542b\u4e49\u3002\u6b63\u597d\uff0c\u6709\u4e2a\u7f16\u7a0b\u7231\u597d\u8005\u9605\u8bfb\u4e86\u8fd9\u6bb5\u8bdd\uff0c\u5e76\u7ed9\u51fa\u4e86\u4e00\u4e2a<a href=\"http:\/\/wordaligned.org\/articles\/two-star-programming\" target=\"_blank\">\u6bd4\u8f83\u5b8c\u6574\u7684\u4ee3\u7801<\/a>\u3002\u4ed6\u7684\u8bdd\u6211\u5c31\u4e0d\u7ffb\u8bd1\u4e86\uff0c\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801\u8bf4\u660e\u3002<\/p>\n<p>\u5982\u679c\u6211\u4eec\u9700\u8981\u5199\u4e00\u4e2aremove_if(link*, rm_cond_func*)\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u4f20\u5165\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0c\u548c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u662f\u5426\u5220\u9664\u7684\u51fd\u6570\uff0c\u7136\u540e\u8fd4\u56de\u5904\u7406\u540e\u7684\u94fe\u63a5\u3002<\/p>\n<p>\u8fd9\u4e2a\u4ee3\u7801\u4e0d\u96be\uff0c\u57fa\u672c\u4e0a\u6240\u6709\u7684\u6559\u79d1\u4e66\u90fd\u4f1a\u63d0\u4f9b\u4e0b\u9762\u7684\u4ee3\u7801\u793a\u4f8b\uff0c\u800c\u8fd9\u79cd\u5199\u6cd5\u4e5f\u662f\u5927\u516c\u53f8\u7684\u9762\u8bd5\u9898<strong>\u6807\u51c6<\/strong>\u6a21\u677f\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\">typedef struct node\r\n{\r\n    struct node * next;\r\n    ....\r\n} node;\r\n\r\ntypedef bool (* remove_fn)(node const * v);\r\n\r\n\/\/ Remove all nodes from the supplied list for which the\r\n\/\/ supplied remove function returns true.\r\n\/\/ Returns the new head of the list.\r\nnode * remove_if(node * head, remove_fn rm)\r\n{\r\n    for (node * prev = NULL, * curr = head; curr != NULL; )\r\n    {\r\n        node * const next = curr-&gt;next;\r\n        if (rm(curr))\r\n        {\r\n            if (prev)\r\n                prev-&gt;next = next;\r\n            else\r\n                head = next;\r\n            free(curr);\r\n        }\r\n        else\r\n            prev = curr;\r\n        curr = next;\r\n    }\r\n    return head;\r\n}<\/pre>\n<p>\u8fd9\u91ccremove_fn\u7531\u8c03\u7528\u67e5\u63d0\u4f9b\u7684\u4e00\u4e2a\u662f\u5426\u5220\u9664\u5f53\u524d\u5b9e\u4f53\u7ed3\u70b9\u7684\u51fd\u6570\u6307\u9488\uff0c\u5176\u4f1a\u5224\u65ad\u5220\u9664\u6761\u4ef6\u662f\u5426\u6210\u7acb\u3002\u8fd9\u6bb5\u4ee3\u7801\u7ef4\u62a4\u4e86\u4e24\u4e2a\u8282\u70b9\u6307\u9488prev\u548ccurr\uff0c<strong>\u6807\u51c6\u7684\u6559\u79d1\u4e66\u5199\u6cd5\u2014\u2014\u5220\u9664\u5f53\u524d\u7ed3\u70b9\u65f6\uff0c\u9700\u8981\u4e00\u4e2aprevious\u7684\u6307\u9488\uff0c\u5e76\u4e14\u8fd8\u8981\u8fd9\u91cc\u8fd8\u9700\u8981\u505a\u4e00\u4e2a\u8fb9\u754c\u6761\u4ef6\u7684\u5224\u65ad\u2014\u2014curr\u662f\u5426\u4e3a\u94fe\u8868\u5934<\/strong>\u3002\u4e8e\u662f\uff0c\u8981\u5220\u9664\u4e00\u4e2a\u8282\u70b9\uff08\u4e0d\u662f\u8868\u5934\uff09\uff0c\u53ea\u8981\u5c06\u524d\u4e00\u4e2a\u8282\u70b9\u7684next\u6307\u5411\u5f53\u524d\u8282\u70b9\u7684next\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u5373\u4e0b\u4e00\u4e2a\u8282\u70b9\uff08\u5373\uff1aprev-&gt;next = curr-&gt;next\uff09\uff0c\u7136\u540e\u91ca\u653e\u5f53\u524d\u8282\u70b9\u3002<\/p>\n<p>\u4f46\u5728Linus\u770b\u6765\uff0c\u8fd9\u662f\u4e0d\u61c2\u6307\u9488\u7684\u4eba\u7684\u505a\u6cd5\u3002\u90a3\u4e48\uff0c\u4ec0\u4e48\u662fcore low-level coding\u5462\uff1f\u90a3\u5c31\u662f<strong>\u6709\u6548\u5730\u5229\u7528\u4e8c\u7ea7\u6307\u9488\uff0c\u5c06\u5176\u4f5c\u4e3a\u7ba1\u7406\u548c\u64cd\u4f5c\u94fe\u8868\u7684\u9996\u8981\u9009\u9879\u3002<\/strong>\u4ee3\u7801\u5982\u4e0b\uff1a<\/p>\n<pre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\" data-enlighter-highlight=\"5,8,12\">void remove_if(node ** head, remove_fn rm)\r\n{\r\n    for (node** curr = head; *curr; )\r\n    {\r\n        node * entry = *curr;\r\n        if (rm(entry))\r\n        {\r\n            *curr = entry-&gt;next;\r\n            free(entry);\r\n        }\r\n        else\r\n            curr = &amp;entry-&gt;next;\r\n    }\r\n}<\/pre>\n<p>\u540c\u4e0a\u4e00\u6bb5\u4ee3\u7801\u6709\u4f55\u6539\u8fdb\u5462\uff1f\u6211\u4eec\u770b\u5230\uff1a<strong>\u4e0d\u9700\u8981prev\u6307\u9488\u4e86\uff0c\u4e5f\u4e0d\u9700\u8981\u518d\u53bb\u5224\u65ad\u662f\u5426\u4e3a\u94fe\u8868\u5934\u4e86\uff0c\u4f46\u662f\uff0c<span style=\"color: #cc0000;\">curr\u53d8\u6210\u4e86\u4e00\u4e2a\u6307\u5411\u6307\u9488\u7684\u6307\u9488<\/span><\/strong>\u3002\u8fd9\u6b63\u662f\u8fd9\u6bb5\u7a0b\u5e8f\u7684\u7cbe\u5999\u4e4b\u5904\u3002\uff08\u6ce8\u610f\uff0c\u6211\u6240highlight\u7684\u90a3\u4e09\u884c\u4ee3\u7801\uff09<\/p>\n<p>\u8ba9\u6211\u4eec\u6765\u4eba\u8089\u8dd1\u4e00\u4e0b\u8fd9\u4e2a\u4ee3\u7801\uff0c\u5bf9\u4e8e\u2014\u2014<\/p>\n<ul>\n<li><strong>\u5220\u9664\u8282\u70b9\u662f\u8868\u5934<\/strong>\u7684\u60c5\u51b5\uff0c\u8f93\u5165\u53c2\u6570\u4e2d\u4f20\u5165head\u7684\u4e8c\u7ea7\u6307\u9488\uff0c\u5728for\u5faa\u73af\u91cc\u5c06\u5176\u521d\u59cb\u5316curr\uff0c\u7136\u540eentry\u5c31\u662f*head(*curr)\uff0c\u6211\u4eec\u9a6c\u4e0a\u5220\u9664\u5b83\uff0c\u90a3\u4e48\u7b2c8\u884c\u5c31\u7b49\u6548\u4e8e*head = (*head)-&gt;next\uff0c\u5c31\u662f\u5220\u9664\u8868\u5934\u7684\u5b9e\u73b0\u3002<\/li>\n<\/ul>\n<ul>\n<li><strong>\u5220\u9664\u8282\u70b9\u4e0d\u662f\u8868\u5934<\/strong>\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u2014\u2014<\/li>\n<\/ul>\n<p style=\"padding-left: 30px;\"><strong>1\uff09<strong>\uff08\u7b2c12\u884c\uff09<\/strong>\u5982\u679c\u4e0d\u5220\u9664\u5f53\u524d\u7ed3\u70b9 \u2014\u2014 curr\u4fdd\u5b58\u7684\u662f\u5f53\u524d\u7ed3\u70b9next\u6307\u9488\u7684\u5730\u5740<\/strong>\u3002<\/p>\n<p style=\"padding-left: 30px;\"><strong>2\uff09\uff08\u7b2c5\u884c\uff09\u00a0entry \u4fdd\u5b58\u4e86 *curr\u00a0<strong>\u2014\u2014\u00a0<\/strong>\u8fd9\u610f\u5473\u7740\u5728\u4e0b\u4e00\u6b21\u5faa\u73af\uff1aentry\u5c31\u662fprev-&gt;next\u6307\u9488\u6240\u6307\u5411\u7684\u5185\u5b58\u3002<\/strong><\/p>\n<p style=\"padding-left: 30px;\"><strong><\/strong><strong>3\uff09\uff08\u7b2c8\u884c\uff09\u5220\u9664\u7ed3\u70b9\uff1a*curr = entry-&gt;next; \u2014\u2014 \u4e8e\u662f\uff1aprev-&gt;next \u6307\u5411\u4e86 entry -&gt; next;<\/strong><\/p>\n<p>\u662f\u4e0d\u662f\u5f88\u5de7\u5999\uff1f\u6211\u4eec\u53ef\u4ee5\u53ea\u7528\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\u6765\u64cd\u4f5c\u94fe\u8868\uff0c\u5bf9\u6240\u6709\u8282\u70b9\u90fd\u4e00\u6837\u3002<\/p>\n<p>\u5982\u679c\u4f60\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u548c\u63cf\u8ff0\u7406\u89e3\u4e0a\u6709\u56f0\u96be\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u770b\u770b\u4e0b\u56fe\u7684\u793a\u610f\uff1a<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-9018\" alt=\"\" src=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer.jpg\" width=\"479\" height=\"470\" srcset=\"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer.jpg 479w, https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer-300x294.jpg 300w, https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer-275x270.jpg 275w\" sizes=\"(max-width: 479px) 100vw, 479px\" \/><\/p>\n<p>\uff08\u5168\u6587\u5b8c\uff09<\/p>\n","raw":"","protected":false},"excerpt":{"rendered":"<p>\u611f\u8c22\u7f51\u53cbfull_of_bull\u6295\u9012\u6b64\u6587\uff08\u6ce8\uff1a\u6b64\u6587\u6700\u521d\u53d1\u8868\u5728\u8fd9\u4e2a\u8fd9\u91cc\uff0c\u6211\u5bf9\u539f\u6587\u540e\u534a\u6bb5\u4fee\u6539\u4e86\u8bb8\u591a\uff0c\u5e76\u52a0\u5165\u4e86\u63d2\u56fe\uff09 Linus\u5927\u5a76\u5728slashdot\u4e0a\u56de\u7b54\u4e00\u4e9b\u7f16\u7a0b\u7231&#8230;<\/p>\n<p class=\"read-more\"><a class=\"btn btn-default\" href=\"https:\/\/coolshell.cn\/articles\/8990.html\"> Read More<span class=\"screen-reader-text\">  Read More<\/span><\/a><\/p>\n","protected":false},"author":15168,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5,20],"tags":[59,135,655,183,37],"series":[],"aioseo_notices":[],"views":114064,"post_thumbnail_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer.jpg","content_first_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer.jpg","post_medium_image_300":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer.jpg","post_thumbnail_image_624":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer.jpg","post_frist_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer.jpg","post_medium_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer.jpg","post_large_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer.jpg","post_full_image":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer.jpg","post_all_images":[{"imagesurl":"https:\/\/coolshell.cn\/wp-content\/uploads\/2013\/02\/linus_pointer_to_pointer.jpg","id":"image0"}],"videoAdId":"","listAd":"0","listAdId":"","listAdEvery":5,"total_comments":194,"category_name":"C\/C++\u8bed\u8a00","post_date":"2013-02-04","like_count":"0","praiseWord":"\u9f13\u52b1","excitationAd":"0","rewardedVideoAdId":"","detailAdId":"","detailAd":"0","enterpriseMinapp":"0","audios":[],"postImageUrl":"http:\/\/coolshell.cn\/wp-content\/uploads\/2016\/09\/coolshell-360x200.jpg","avatarurls":[],"related_posts":[{"ID":"22320","post_title":"eBPF \u4ecb\u7ecd"}],"pageviews":114065,"pageviews_wl":105828,"ratings_average":4,"ratings_total":231,"ratings_users":54,"next_post_id":9070,"next_post_title":"AWK \u7b80\u660e\u6559\u7a0b","previous_post_id":8961,"previous_post_title":"\u4ece\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u6a21\u5f0f\u770b\u8f6f\u4ef6\u8bbe\u8ba1"}